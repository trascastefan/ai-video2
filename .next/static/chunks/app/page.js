/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["app/page"],{

/***/ "(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%2Fhome%2Ftrascastefan%2Fai-video2%2Fapp%2Fpage.tsx&server=false!":
/*!*******************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%2Fhome%2Ftrascastefan%2Fai-video2%2Fapp%2Fpage.tsx&server=false! ***!
  \*******************************************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("Promise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./app/page.tsx */ \"(app-pages-browser)/./app/page.tsx\"))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL25leHQtZmxpZ2h0LWNsaWVudC1lbnRyeS1sb2FkZXIuanM/bW9kdWxlcz0lMkZob21lJTJGdHJhc2Nhc3RlZmFuJTJGYWktdmlkZW8yJTJGYXBwJTJGcGFnZS50c3gmc2VydmVyPWZhbHNlISIsIm1hcHBpbmdzIjoiQUFBQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvPzM1NGEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIgKi8gXCIvaG9tZS90cmFzY2FzdGVmYW4vYWktdmlkZW8yL2FwcC9wYWdlLnRzeFwiKSJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%2Fhome%2Ftrascastefan%2Fai-video2%2Fapp%2Fpage.tsx&server=false!\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/api/app-dynamic.js":
/*!***************************************************!*\
  !*** ./node_modules/next/dist/api/app-dynamic.js ***!
  \***************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* reexport default from dynamic */ _shared_lib_app_dynamic__WEBPACK_IMPORTED_MODULE_0___default.a; }\n/* harmony export */ });\n/* harmony import */ var _shared_lib_app_dynamic__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../shared/lib/app-dynamic */ \"(app-pages-browser)/./node_modules/next/dist/shared/lib/app-dynamic.js\");\n/* harmony import */ var _shared_lib_app_dynamic__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_shared_lib_app_dynamic__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _shared_lib_app_dynamic__WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _shared_lib_app_dynamic__WEBPACK_IMPORTED_MODULE_0__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n\n //# sourceMappingURL=app-dynamic.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYXBpL2FwcC1keW5hbWljLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUEwQztBQUNVLENBRXBELHVDQUF1QyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2FwaS9hcHAtZHluYW1pYy5qcz9jYmMzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCAqIGZyb20gXCIuLi9zaGFyZWQvbGliL2FwcC1keW5hbWljXCI7XG5leHBvcnQgeyBkZWZhdWx0IH0gZnJvbSBcIi4uL3NoYXJlZC9saWIvYXBwLWR5bmFtaWNcIjtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YXBwLWR5bmFtaWMuanMubWFwIl0sIm5hbWVzIjpbImRlZmF1bHQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/api/app-dynamic.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js ***!
  \****************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * @license React\n * react-jsx-dev-runtime.development.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */ \nif (true) {\n    (function() {\n        \"use strict\";\n        var React = __webpack_require__(/*! next/dist/compiled/react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n        // ATTENTION\n        // When adding new symbols to this file,\n        // Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'\n        // The Symbol used to tag the ReactElement-like types.\n        var REACT_ELEMENT_TYPE = Symbol.for(\"react.element\");\n        var REACT_PORTAL_TYPE = Symbol.for(\"react.portal\");\n        var REACT_FRAGMENT_TYPE = Symbol.for(\"react.fragment\");\n        var REACT_STRICT_MODE_TYPE = Symbol.for(\"react.strict_mode\");\n        var REACT_PROFILER_TYPE = Symbol.for(\"react.profiler\");\n        var REACT_PROVIDER_TYPE = Symbol.for(\"react.provider\");\n        var REACT_CONTEXT_TYPE = Symbol.for(\"react.context\");\n        var REACT_FORWARD_REF_TYPE = Symbol.for(\"react.forward_ref\");\n        var REACT_SUSPENSE_TYPE = Symbol.for(\"react.suspense\");\n        var REACT_SUSPENSE_LIST_TYPE = Symbol.for(\"react.suspense_list\");\n        var REACT_MEMO_TYPE = Symbol.for(\"react.memo\");\n        var REACT_LAZY_TYPE = Symbol.for(\"react.lazy\");\n        var REACT_OFFSCREEN_TYPE = Symbol.for(\"react.offscreen\");\n        var REACT_CACHE_TYPE = Symbol.for(\"react.cache\");\n        var MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\n        var FAUX_ITERATOR_SYMBOL = \"@@iterator\";\n        function getIteratorFn(maybeIterable) {\n            if (maybeIterable === null || typeof maybeIterable !== \"object\") {\n                return null;\n            }\n            var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];\n            if (typeof maybeIterator === \"function\") {\n                return maybeIterator;\n            }\n            return null;\n        }\n        var ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n        function error(format) {\n            {\n                {\n                    for(var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++){\n                        args[_key2 - 1] = arguments[_key2];\n                    }\n                    printWarning(\"error\", format, args);\n                }\n            }\n        }\n        function printWarning(level, format, args) {\n            // When changing this logic, you might want to also\n            // update consoleWithStackDev.www.js as well.\n            {\n                var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n                var stack = ReactDebugCurrentFrame.getStackAddendum();\n                if (stack !== \"\") {\n                    format += \"%s\";\n                    args = args.concat([\n                        stack\n                    ]);\n                } // eslint-disable-next-line react-internal/safe-string-coercion\n                var argsWithFormat = args.map(function(item) {\n                    return String(item);\n                }); // Careful: RN currently depends on this prefix\n                argsWithFormat.unshift(\"Warning: \" + format); // We intentionally don't use spread (or .apply) directly because it\n                // breaks IE9: https://github.com/facebook/react/issues/13610\n                // eslint-disable-next-line react-internal/no-production-logging\n                Function.prototype.apply.call(console[level], console, argsWithFormat);\n            }\n        }\n        // -----------------------------------------------------------------------------\n        var enableScopeAPI = false; // Experimental Create Event Handle API.\n        var enableCacheElement = false;\n        var enableTransitionTracing = false; // No known bugs, but needs performance testing\n        var enableLegacyHidden = false; // Enables unstable_avoidThisFallback feature in Fiber\n        // stuff. Intended to enable React core members to more easily debug scheduling\n        // issues in DEV builds.\n        var enableDebugTracing = false;\n        var REACT_CLIENT_REFERENCE$2 = Symbol.for(\"react.client.reference\");\n        function isValidElementType(type) {\n            if (typeof type === \"string\" || typeof type === \"function\") {\n                return true;\n            } // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).\n            if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden || type === REACT_OFFSCREEN_TYPE || enableScopeAPI || enableCacheElement || enableTransitionTracing) {\n                return true;\n            }\n            if (typeof type === \"object\" && type !== null) {\n                if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || // This needs to include all possible module reference object\n                // types supported by any Flight configuration anywhere since\n                // we don't know which Flight build this will end up being used\n                // with.\n                type.$$typeof === REACT_CLIENT_REFERENCE$2 || type.getModuleId !== undefined) {\n                    return true;\n                }\n            }\n            return false;\n        }\n        function getWrappedName(outerType, innerType, wrapperName) {\n            var displayName = outerType.displayName;\n            if (displayName) {\n                return displayName;\n            }\n            var functionName = innerType.displayName || innerType.name || \"\";\n            return functionName !== \"\" ? wrapperName + \"(\" + functionName + \")\" : wrapperName;\n        } // Keep in sync with react-reconciler/getComponentNameFromFiber\n        function getContextName(type) {\n            return type.displayName || \"Context\";\n        }\n        var REACT_CLIENT_REFERENCE$1 = Symbol.for(\"react.client.reference\"); // Note that the reconciler package should generally prefer to use getComponentNameFromFiber() instead.\n        function getComponentNameFromType(type) {\n            if (type == null) {\n                // Host root, text node or just invalid type.\n                return null;\n            }\n            if (typeof type === \"function\") {\n                if (type.$$typeof === REACT_CLIENT_REFERENCE$1) {\n                    // TODO: Create a convention for naming client references with debug info.\n                    return null;\n                }\n                return type.displayName || type.name || null;\n            }\n            if (typeof type === \"string\") {\n                return type;\n            }\n            switch(type){\n                case REACT_FRAGMENT_TYPE:\n                    return \"Fragment\";\n                case REACT_PORTAL_TYPE:\n                    return \"Portal\";\n                case REACT_PROFILER_TYPE:\n                    return \"Profiler\";\n                case REACT_STRICT_MODE_TYPE:\n                    return \"StrictMode\";\n                case REACT_SUSPENSE_TYPE:\n                    return \"Suspense\";\n                case REACT_SUSPENSE_LIST_TYPE:\n                    return \"SuspenseList\";\n                case REACT_CACHE_TYPE:\n                    {\n                        return \"Cache\";\n                    }\n            }\n            if (typeof type === \"object\") {\n                {\n                    if (typeof type.tag === \"number\") {\n                        error(\"Received an unexpected object in getComponentNameFromType(). \" + \"This is likely a bug in React. Please file an issue.\");\n                    }\n                }\n                switch(type.$$typeof){\n                    case REACT_CONTEXT_TYPE:\n                        var context = type;\n                        return getContextName(context) + \".Consumer\";\n                    case REACT_PROVIDER_TYPE:\n                        var provider = type;\n                        return getContextName(provider._context) + \".Provider\";\n                    case REACT_FORWARD_REF_TYPE:\n                        return getWrappedName(type, type.render, \"ForwardRef\");\n                    case REACT_MEMO_TYPE:\n                        var outerName = type.displayName || null;\n                        if (outerName !== null) {\n                            return outerName;\n                        }\n                        return getComponentNameFromType(type.type) || \"Memo\";\n                    case REACT_LAZY_TYPE:\n                        {\n                            var lazyComponent = type;\n                            var payload = lazyComponent._payload;\n                            var init = lazyComponent._init;\n                            try {\n                                return getComponentNameFromType(init(payload));\n                            } catch (x) {\n                                return null;\n                            }\n                        }\n                }\n            }\n            return null;\n        }\n        var assign = Object.assign;\n        // Helpers to patch console.logs to avoid logging during side-effect free\n        // replaying on render function. This currently only patches the object\n        // lazily which won't cover if the log function was extracted eagerly.\n        // We could also eagerly patch the method.\n        var disabledDepth = 0;\n        var prevLog;\n        var prevInfo;\n        var prevWarn;\n        var prevError;\n        var prevGroup;\n        var prevGroupCollapsed;\n        var prevGroupEnd;\n        function disabledLog() {}\n        disabledLog.__reactDisabledLog = true;\n        function disableLogs() {\n            {\n                if (disabledDepth === 0) {\n                    /* eslint-disable react-internal/no-production-logging */ prevLog = console.log;\n                    prevInfo = console.info;\n                    prevWarn = console.warn;\n                    prevError = console.error;\n                    prevGroup = console.group;\n                    prevGroupCollapsed = console.groupCollapsed;\n                    prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099\n                    var props = {\n                        configurable: true,\n                        enumerable: true,\n                        value: disabledLog,\n                        writable: true\n                    }; // $FlowFixMe[cannot-write] Flow thinks console is immutable.\n                    Object.defineProperties(console, {\n                        info: props,\n                        log: props,\n                        warn: props,\n                        error: props,\n                        group: props,\n                        groupCollapsed: props,\n                        groupEnd: props\n                    });\n                /* eslint-enable react-internal/no-production-logging */ }\n                disabledDepth++;\n            }\n        }\n        function reenableLogs() {\n            {\n                disabledDepth--;\n                if (disabledDepth === 0) {\n                    /* eslint-disable react-internal/no-production-logging */ var props = {\n                        configurable: true,\n                        enumerable: true,\n                        writable: true\n                    }; // $FlowFixMe[cannot-write] Flow thinks console is immutable.\n                    Object.defineProperties(console, {\n                        log: assign({}, props, {\n                            value: prevLog\n                        }),\n                        info: assign({}, props, {\n                            value: prevInfo\n                        }),\n                        warn: assign({}, props, {\n                            value: prevWarn\n                        }),\n                        error: assign({}, props, {\n                            value: prevError\n                        }),\n                        group: assign({}, props, {\n                            value: prevGroup\n                        }),\n                        groupCollapsed: assign({}, props, {\n                            value: prevGroupCollapsed\n                        }),\n                        groupEnd: assign({}, props, {\n                            value: prevGroupEnd\n                        })\n                    });\n                /* eslint-enable react-internal/no-production-logging */ }\n                if (disabledDepth < 0) {\n                    error(\"disabledDepth fell below zero. \" + \"This is a bug in React. Please file an issue.\");\n                }\n            }\n        }\n        var ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;\n        var prefix;\n        function describeBuiltInComponentFrame(name, source, ownerFn) {\n            {\n                if (prefix === undefined) {\n                    // Extract the VM specific prefix used by each line.\n                    try {\n                        throw Error();\n                    } catch (x) {\n                        var match = x.stack.trim().match(/\\n( *(at )?)/);\n                        prefix = match && match[1] || \"\";\n                    }\n                } // We use the prefix to ensure our stacks line up with native stack frames.\n                return \"\\n\" + prefix + name;\n            }\n        }\n        var reentry = false;\n        var componentFrameCache;\n        {\n            var PossiblyWeakMap = typeof WeakMap === \"function\" ? WeakMap : Map;\n            componentFrameCache = new PossiblyWeakMap();\n        }\n        /**\n * Leverages native browser/VM stack frames to get proper details (e.g.\n * filename, line + col number) for a single component in a component stack. We\n * do this by:\n *   (1) throwing and catching an error in the function - this will be our\n *       control error.\n *   (2) calling the component which will eventually throw an error that we'll\n *       catch - this will be our sample error.\n *   (3) diffing the control and sample error stacks to find the stack frame\n *       which represents our component.\n */ function describeNativeComponentFrame(fn, construct) {\n            // If something asked for a stack inside a fake render, it should get ignored.\n            if (!fn || reentry) {\n                return \"\";\n            }\n            {\n                var frame = componentFrameCache.get(fn);\n                if (frame !== undefined) {\n                    return frame;\n                }\n            }\n            reentry = true;\n            var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe[incompatible-type] It does accept undefined.\n            Error.prepareStackTrace = undefined;\n            var previousDispatcher;\n            {\n                previousDispatcher = ReactCurrentDispatcher.current; // Set the dispatcher in DEV because this might be call in the render function\n                // for warnings.\n                ReactCurrentDispatcher.current = null;\n                disableLogs();\n            }\n            /**\n   * Finding a common stack frame between sample and control errors can be\n   * tricky given the different types and levels of stack trace truncation from\n   * different JS VMs. So instead we'll attempt to control what that common\n   * frame should be through this object method:\n   * Having both the sample and control errors be in the function under the\n   * `DescribeNativeComponentFrameRoot` property, + setting the `name` and\n   * `displayName` properties of the function ensures that a stack\n   * frame exists that has the method name `DescribeNativeComponentFrameRoot` in\n   * it for both control and sample stacks.\n   */ var RunInRootFrame = {\n                DetermineComponentFrameRoot: function() {\n                    var control;\n                    try {\n                        // This should throw.\n                        if (construct) {\n                            // Something should be setting the props in the constructor.\n                            var Fake = function() {\n                                throw Error();\n                            }; // $FlowFixMe[prop-missing]\n                            Object.defineProperty(Fake.prototype, \"props\", {\n                                set: function() {\n                                    // We use a throwing setter instead of frozen or non-writable props\n                                    // because that won't throw in a non-strict mode function.\n                                    throw Error();\n                                }\n                            });\n                            if (typeof Reflect === \"object\" && Reflect.construct) {\n                                // We construct a different control for this case to include any extra\n                                // frames added by the construct call.\n                                try {\n                                    Reflect.construct(Fake, []);\n                                } catch (x) {\n                                    control = x;\n                                }\n                                Reflect.construct(fn, [], Fake);\n                            } else {\n                                try {\n                                    Fake.call();\n                                } catch (x) {\n                                    control = x;\n                                } // $FlowFixMe[prop-missing] found when upgrading Flow\n                                fn.call(Fake.prototype);\n                            }\n                        } else {\n                            try {\n                                throw Error();\n                            } catch (x) {\n                                control = x;\n                            } // TODO(luna): This will currently only throw if the function component\n                            // tries to access React/ReactDOM/props. We should probably make this throw\n                            // in simple components too\n                            var maybePromise = fn(); // If the function component returns a promise, it's likely an async\n                            // component, which we don't yet support. Attach a noop catch handler to\n                            // silence the error.\n                            // TODO: Implement component stacks for async client components?\n                            if (maybePromise && typeof maybePromise.catch === \"function\") {\n                                maybePromise.catch(function() {});\n                            }\n                        }\n                    } catch (sample) {\n                        // This is inlined manually because closure doesn't do it for us.\n                        if (sample && control && typeof sample.stack === \"string\") {\n                            return [\n                                sample.stack,\n                                control.stack\n                            ];\n                        }\n                    }\n                    return [\n                        null,\n                        null\n                    ];\n                }\n            }; // $FlowFixMe[prop-missing]\n            RunInRootFrame.DetermineComponentFrameRoot.displayName = \"DetermineComponentFrameRoot\";\n            var namePropDescriptor = Object.getOwnPropertyDescriptor(RunInRootFrame.DetermineComponentFrameRoot, \"name\"); // Before ES6, the `name` property was not configurable.\n            if (namePropDescriptor && namePropDescriptor.configurable) {\n                // V8 utilizes a function's `name` property when generating a stack trace.\n                Object.defineProperty(RunInRootFrame.DetermineComponentFrameRoot, // is set to `false`.\n                // $FlowFixMe[cannot-write]\n                \"name\", {\n                    value: \"DetermineComponentFrameRoot\"\n                });\n            }\n            try {\n                var _RunInRootFrame$Deter = RunInRootFrame.DetermineComponentFrameRoot(), sampleStack = _RunInRootFrame$Deter[0], controlStack = _RunInRootFrame$Deter[1];\n                if (sampleStack && controlStack) {\n                    // This extracts the first frame from the sample that isn't also in the control.\n                    // Skipping one frame that we assume is the frame that calls the two.\n                    var sampleLines = sampleStack.split(\"\\n\");\n                    var controlLines = controlStack.split(\"\\n\");\n                    var s = 0;\n                    var c = 0;\n                    while(s < sampleLines.length && !sampleLines[s].includes(\"DetermineComponentFrameRoot\")){\n                        s++;\n                    }\n                    while(c < controlLines.length && !controlLines[c].includes(\"DetermineComponentFrameRoot\")){\n                        c++;\n                    } // We couldn't find our intentionally injected common root frame, attempt\n                    // to find another common root frame by search from the bottom of the\n                    // control stack...\n                    if (s === sampleLines.length || c === controlLines.length) {\n                        s = sampleLines.length - 1;\n                        c = controlLines.length - 1;\n                        while(s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]){\n                            // We expect at least one stack frame to be shared.\n                            // Typically this will be the root most one. However, stack frames may be\n                            // cut off due to maximum stack limits. In this case, one maybe cut off\n                            // earlier than the other. We assume that the sample is longer or the same\n                            // and there for cut off earlier. So we should find the root most frame in\n                            // the sample somewhere in the control.\n                            c--;\n                        }\n                    }\n                    for(; s >= 1 && c >= 0; s--, c--){\n                        // Next we find the first one that isn't the same which should be the\n                        // frame that called our sample function and the control.\n                        if (sampleLines[s] !== controlLines[c]) {\n                            // In V8, the first line is describing the message but other VMs don't.\n                            // If we're about to return the first line, and the control is also on the same\n                            // line, that's a pretty good indicator that our sample threw at same line as\n                            // the control. I.e. before we entered the sample frame. So we ignore this result.\n                            // This can happen if you passed a class to function component, or non-function.\n                            if (s !== 1 || c !== 1) {\n                                do {\n                                    s--;\n                                    c--; // We may still have similar intermediate frames from the construct call.\n                                    // The next one that isn't the same should be our match though.\n                                    if (c < 0 || sampleLines[s] !== controlLines[c]) {\n                                        // V8 adds a \"new\" prefix for native classes. Let's remove it to make it prettier.\n                                        var _frame = \"\\n\" + sampleLines[s].replace(\" at new \", \" at \"); // If our component frame is labeled \"<anonymous>\"\n                                        // but we have a user-provided \"displayName\"\n                                        // splice it in to make the stack more readable.\n                                        if (fn.displayName && _frame.includes(\"<anonymous>\")) {\n                                            _frame = _frame.replace(\"<anonymous>\", fn.displayName);\n                                        }\n                                        if (true) {\n                                            if (typeof fn === \"function\") {\n                                                componentFrameCache.set(fn, _frame);\n                                            }\n                                        } // Return the line we found.\n                                        return _frame;\n                                    }\n                                }while (s >= 1 && c >= 0);\n                            }\n                            break;\n                        }\n                    }\n                }\n            } finally{\n                reentry = false;\n                {\n                    ReactCurrentDispatcher.current = previousDispatcher;\n                    reenableLogs();\n                }\n                Error.prepareStackTrace = previousPrepareStackTrace;\n            } // Fallback to just using the name if we couldn't make it throw.\n            var name = fn ? fn.displayName || fn.name : \"\";\n            var syntheticFrame = name ? describeBuiltInComponentFrame(name) : \"\";\n            {\n                if (typeof fn === \"function\") {\n                    componentFrameCache.set(fn, syntheticFrame);\n                }\n            }\n            return syntheticFrame;\n        }\n        function describeFunctionComponentFrame(fn, source, ownerFn) {\n            {\n                return describeNativeComponentFrame(fn, false);\n            }\n        }\n        function shouldConstruct(Component) {\n            var prototype = Component.prototype;\n            return !!(prototype && prototype.isReactComponent);\n        }\n        function describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {\n            if (type == null) {\n                return \"\";\n            }\n            if (typeof type === \"function\") {\n                {\n                    return describeNativeComponentFrame(type, shouldConstruct(type));\n                }\n            }\n            if (typeof type === \"string\") {\n                return describeBuiltInComponentFrame(type);\n            }\n            switch(type){\n                case REACT_SUSPENSE_TYPE:\n                    return describeBuiltInComponentFrame(\"Suspense\");\n                case REACT_SUSPENSE_LIST_TYPE:\n                    return describeBuiltInComponentFrame(\"SuspenseList\");\n            }\n            if (typeof type === \"object\") {\n                switch(type.$$typeof){\n                    case REACT_FORWARD_REF_TYPE:\n                        return describeFunctionComponentFrame(type.render);\n                    case REACT_MEMO_TYPE:\n                        // Memo may contain any component type so we recursively resolve it.\n                        return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);\n                    case REACT_LAZY_TYPE:\n                        {\n                            var lazyComponent = type;\n                            var payload = lazyComponent._payload;\n                            var init = lazyComponent._init;\n                            try {\n                                // Lazy may contain any component type so we recursively resolve it.\n                                return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);\n                            } catch (x) {}\n                        }\n                }\n            }\n            return \"\";\n        }\n        // $FlowFixMe[method-unbinding]\n        var hasOwnProperty = Object.prototype.hasOwnProperty;\n        var loggedTypeFailures = {};\n        var ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;\n        function setCurrentlyValidatingElement$1(element) {\n            {\n                if (element) {\n                    var owner = element._owner;\n                    var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n                    ReactDebugCurrentFrame$1.setExtraStackFrame(stack);\n                } else {\n                    ReactDebugCurrentFrame$1.setExtraStackFrame(null);\n                }\n            }\n        }\n        function checkPropTypes(typeSpecs, values, location, componentName, element) {\n            {\n                // $FlowFixMe[incompatible-use] This is okay but Flow doesn't know it.\n                var has = Function.call.bind(hasOwnProperty);\n                for(var typeSpecName in typeSpecs){\n                    if (has(typeSpecs, typeSpecName)) {\n                        var error$1 = void 0; // Prop type validation may throw. In case they do, we don't want to\n                        // fail the render phase where it didn't fail before. So we log it.\n                        // After these have been cleaned up, we'll let them throw.\n                        try {\n                            // This is intentionally an invariant that gets caught. It's the same\n                            // behavior as without this statement except with a better message.\n                            if (typeof typeSpecs[typeSpecName] !== \"function\") {\n                                // eslint-disable-next-line react-internal/prod-error-codes\n                                var err = Error((componentName || \"React class\") + \": \" + location + \" type `\" + typeSpecName + \"` is invalid; \" + \"it must be a function, usually from the `prop-types` package, but received `\" + typeof typeSpecs[typeSpecName] + \"`.\" + \"This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.\");\n                                err.name = \"Invariant Violation\";\n                                throw err;\n                            }\n                            error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, \"SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED\");\n                        } catch (ex) {\n                            error$1 = ex;\n                        }\n                        if (error$1 && !(error$1 instanceof Error)) {\n                            setCurrentlyValidatingElement$1(element);\n                            error(\"%s: type specification of %s\" + \" `%s` is invalid; the type checker \" + \"function must return `null` or an `Error` but returned a %s. \" + \"You may have forgotten to pass an argument to the type checker \" + \"creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and \" + \"shape all require an argument).\", componentName || \"React class\", location, typeSpecName, typeof error$1);\n                            setCurrentlyValidatingElement$1(null);\n                        }\n                        if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {\n                            // Only monitor this failure once because there tends to be a lot of the\n                            // same error.\n                            loggedTypeFailures[error$1.message] = true;\n                            setCurrentlyValidatingElement$1(element);\n                            error(\"Failed %s type: %s\", location, error$1.message);\n                            setCurrentlyValidatingElement$1(null);\n                        }\n                    }\n                }\n            }\n        }\n        var isArrayImpl = Array.isArray; // eslint-disable-next-line no-redeclare\n        function isArray(a) {\n            return isArrayImpl(a);\n        }\n        /*\n * The `'' + value` pattern (used in perf-sensitive code) throws for Symbol\n * and Temporal.* types. See https://github.com/facebook/react/pull/22064.\n *\n * The functions in this module will throw an easier-to-understand,\n * easier-to-debug exception with a clear errors message message explaining the\n * problem. (Instead of a confusing exception thrown inside the implementation\n * of the `value` object).\n */ // $FlowFixMe[incompatible-return] only called in DEV, so void return is not possible.\n        function typeName(value) {\n            {\n                // toStringTag is needed for namespaced types like Temporal.Instant\n                var hasToStringTag = typeof Symbol === \"function\" && Symbol.toStringTag;\n                var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || \"Object\"; // $FlowFixMe[incompatible-return]\n                return type;\n            }\n        } // $FlowFixMe[incompatible-return] only called in DEV, so void return is not possible.\n        function willCoercionThrow(value) {\n            {\n                try {\n                    testStringCoercion(value);\n                    return false;\n                } catch (e) {\n                    return true;\n                }\n            }\n        }\n        function testStringCoercion(value) {\n            // If you ended up here by following an exception call stack, here's what's\n            // happened: you supplied an object or symbol value to React (as a prop, key,\n            // DOM attribute, CSS property, string ref, etc.) and when React tried to\n            // coerce it to a string using `'' + value`, an exception was thrown.\n            //\n            // The most common types that will cause this exception are `Symbol` instances\n            // and Temporal objects like `Temporal.Instant`. But any object that has a\n            // `valueOf` or `[Symbol.toPrimitive]` method that throws will also cause this\n            // exception. (Library authors do this to prevent users from using built-in\n            // numeric operators like `+` or comparison operators like `>=` because custom\n            // methods are needed to perform accurate arithmetic or comparison.)\n            //\n            // To fix the problem, coerce this object or symbol value to a string before\n            // passing it to React. The most reliable way is usually `String(value)`.\n            //\n            // To find which value is throwing, check the browser or debugger console.\n            // Before this exception was thrown, there should be `console.error` output\n            // that shows the type (Symbol, Temporal.PlainDate, etc.) that caused the\n            // problem and how that type was used: key, atrribute, input value prop, etc.\n            // In most cases, this console output also shows the component and its\n            // ancestor components where the exception happened.\n            //\n            // eslint-disable-next-line react-internal/safe-string-coercion\n            return \"\" + value;\n        }\n        function checkKeyStringCoercion(value) {\n            {\n                if (willCoercionThrow(value)) {\n                    error(\"The provided key is an unsupported type %s.\" + \" This value must be coerced to a string before using it here.\", typeName(value));\n                    return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\n                }\n            }\n        }\n        var ReactCurrentOwner$1 = ReactSharedInternals.ReactCurrentOwner;\n        var RESERVED_PROPS = {\n            key: true,\n            ref: true,\n            __self: true,\n            __source: true\n        };\n        var specialPropKeyWarningShown;\n        var specialPropRefWarningShown;\n        var didWarnAboutStringRefs;\n        {\n            didWarnAboutStringRefs = {};\n        }\n        function hasValidRef(config) {\n            {\n                if (hasOwnProperty.call(config, \"ref\")) {\n                    var getter = Object.getOwnPropertyDescriptor(config, \"ref\").get;\n                    if (getter && getter.isReactWarning) {\n                        return false;\n                    }\n                }\n            }\n            return config.ref !== undefined;\n        }\n        function hasValidKey(config) {\n            {\n                if (hasOwnProperty.call(config, \"key\")) {\n                    var getter = Object.getOwnPropertyDescriptor(config, \"key\").get;\n                    if (getter && getter.isReactWarning) {\n                        return false;\n                    }\n                }\n            }\n            return config.key !== undefined;\n        }\n        function warnIfStringRefCannotBeAutoConverted(config, self) {\n            {\n                if (typeof config.ref === \"string\" && ReactCurrentOwner$1.current && self && ReactCurrentOwner$1.current.stateNode !== self) {\n                    var componentName = getComponentNameFromType(ReactCurrentOwner$1.current.type);\n                    if (!didWarnAboutStringRefs[componentName]) {\n                        error('Component \"%s\" contains the string ref \"%s\". ' + \"Support for string refs will be removed in a future major release. \" + \"This case cannot be automatically converted to an arrow function. \" + \"We ask you to manually fix this case by using useRef() or createRef() instead. \" + \"Learn more about using refs safely here: \" + \"https://reactjs.org/link/strict-mode-string-ref\", getComponentNameFromType(ReactCurrentOwner$1.current.type), config.ref);\n                        didWarnAboutStringRefs[componentName] = true;\n                    }\n                }\n            }\n        }\n        function defineKeyPropWarningGetter(props, displayName) {\n            {\n                var warnAboutAccessingKey = function() {\n                    if (!specialPropKeyWarningShown) {\n                        specialPropKeyWarningShown = true;\n                        error(\"%s: `key` is not a prop. Trying to access it will result \" + \"in `undefined` being returned. If you need to access the same \" + \"value within the child component, you should pass it as a different \" + \"prop. (https://reactjs.org/link/special-props)\", displayName);\n                    }\n                };\n                warnAboutAccessingKey.isReactWarning = true;\n                Object.defineProperty(props, \"key\", {\n                    get: warnAboutAccessingKey,\n                    configurable: true\n                });\n            }\n        }\n        function defineRefPropWarningGetter(props, displayName) {\n            {\n                var warnAboutAccessingRef = function() {\n                    if (!specialPropRefWarningShown) {\n                        specialPropRefWarningShown = true;\n                        error(\"%s: `ref` is not a prop. Trying to access it will result \" + \"in `undefined` being returned. If you need to access the same \" + \"value within the child component, you should pass it as a different \" + \"prop. (https://reactjs.org/link/special-props)\", displayName);\n                    }\n                };\n                warnAboutAccessingRef.isReactWarning = true;\n                Object.defineProperty(props, \"ref\", {\n                    get: warnAboutAccessingRef,\n                    configurable: true\n                });\n            }\n        }\n        /**\n * Factory method to create a new React element. This no longer adheres to\n * the class pattern, so do not use new to call it. Also, instanceof check\n * will not work. Instead test $$typeof field against Symbol.for('react.element') to check\n * if something is a React Element.\n *\n * @param {*} type\n * @param {*} props\n * @param {*} key\n * @param {string|object} ref\n * @param {*} owner\n * @param {*} self A *temporary* helper to detect places where `this` is\n * different from the `owner` when React.createElement is called, so that we\n * can warn. We want to get rid of owner and replace string `ref`s with arrow\n * functions, and as long as `this` and owner are the same, there will be no\n * change in behavior.\n * @param {*} source An annotation object (added by a transpiler or otherwise)\n * indicating filename, line number, and/or other information.\n * @internal\n */ function ReactElement(type, key, ref, self, source, owner, props) {\n            var element = {\n                // This tag allows us to uniquely identify this as a React Element\n                $$typeof: REACT_ELEMENT_TYPE,\n                // Built-in properties that belong on the element\n                type: type,\n                key: key,\n                ref: ref,\n                props: props,\n                // Record the component responsible for creating this element.\n                _owner: owner\n            };\n            {\n                // The validation flag is currently mutative. We put it on\n                // an external backing store so that we can freeze the whole object.\n                // This can be replaced with a WeakMap once they are implemented in\n                // commonly used development environments.\n                element._store = {}; // To make comparing ReactElements easier for testing purposes, we make\n                // the validation flag non-enumerable (where possible, which should\n                // include every environment we run tests in), so the test framework\n                // ignores it.\n                Object.defineProperty(element._store, \"validated\", {\n                    configurable: false,\n                    enumerable: false,\n                    writable: true,\n                    value: false\n                }); // self and source are DEV only properties.\n                Object.defineProperty(element, \"_self\", {\n                    configurable: false,\n                    enumerable: false,\n                    writable: false,\n                    value: self\n                }); // Two elements created in two different places should be considered\n                // equal for testing purposes and therefore we hide it from enumeration.\n                Object.defineProperty(element, \"_source\", {\n                    configurable: false,\n                    enumerable: false,\n                    writable: false,\n                    value: source\n                });\n                if (Object.freeze) {\n                    Object.freeze(element.props);\n                    Object.freeze(element);\n                }\n            }\n            return element;\n        }\n        /**\n * https://github.com/reactjs/rfcs/pull/107\n * @param {*} type\n * @param {object} props\n * @param {string} key\n */ function jsxDEV$1(type, config, maybeKey, source, self) {\n            {\n                var propName; // Reserved names are extracted\n                var props = {};\n                var key = null;\n                var ref = null; // Currently, key can be spread in as a prop. This causes a potential\n                // issue if key is also explicitly declared (ie. <div {...props} key=\"Hi\" />\n                // or <div key=\"Hi\" {...props} /> ). We want to deprecate key spread,\n                // but as an intermediary step, we will use jsxDEV for everything except\n                // <div {...props} key=\"Hi\" />, because we aren't currently able to tell if\n                // key is explicitly declared to be undefined or not.\n                if (maybeKey !== undefined) {\n                    {\n                        checkKeyStringCoercion(maybeKey);\n                    }\n                    key = \"\" + maybeKey;\n                }\n                if (hasValidKey(config)) {\n                    {\n                        checkKeyStringCoercion(config.key);\n                    }\n                    key = \"\" + config.key;\n                }\n                if (hasValidRef(config)) {\n                    ref = config.ref;\n                    warnIfStringRefCannotBeAutoConverted(config, self);\n                } // Remaining properties are added to a new props object\n                for(propName in config){\n                    if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n                        props[propName] = config[propName];\n                    }\n                } // Resolve default props\n                if (type && type.defaultProps) {\n                    var defaultProps = type.defaultProps;\n                    for(propName in defaultProps){\n                        if (props[propName] === undefined) {\n                            props[propName] = defaultProps[propName];\n                        }\n                    }\n                }\n                if (key || ref) {\n                    var displayName = typeof type === \"function\" ? type.displayName || type.name || \"Unknown\" : type;\n                    if (key) {\n                        defineKeyPropWarningGetter(props, displayName);\n                    }\n                    if (ref) {\n                        defineRefPropWarningGetter(props, displayName);\n                    }\n                }\n                return ReactElement(type, key, ref, self, source, ReactCurrentOwner$1.current, props);\n            }\n        }\n        var ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;\n        var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n        var REACT_CLIENT_REFERENCE = Symbol.for(\"react.client.reference\");\n        function setCurrentlyValidatingElement(element) {\n            {\n                if (element) {\n                    var owner = element._owner;\n                    var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n                    ReactDebugCurrentFrame.setExtraStackFrame(stack);\n                } else {\n                    ReactDebugCurrentFrame.setExtraStackFrame(null);\n                }\n            }\n        }\n        var propTypesMisspellWarningShown;\n        {\n            propTypesMisspellWarningShown = false;\n        }\n        /**\n * Verifies the object is a ReactElement.\n * See https://reactjs.org/docs/react-api.html#isvalidelement\n * @param {?object} object\n * @return {boolean} True if `object` is a ReactElement.\n * @final\n */ function isValidElement(object) {\n            {\n                return typeof object === \"object\" && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n            }\n        }\n        function getDeclarationErrorAddendum() {\n            {\n                if (ReactCurrentOwner.current) {\n                    var name = getComponentNameFromType(ReactCurrentOwner.current.type);\n                    if (name) {\n                        return \"\\n\\nCheck the render method of `\" + name + \"`.\";\n                    }\n                }\n                return \"\";\n            }\n        }\n        function getSourceInfoErrorAddendum(source) {\n            {\n                if (source !== undefined) {\n                    var fileName = source.fileName.replace(/^.*[\\\\\\/]/, \"\");\n                    var lineNumber = source.lineNumber;\n                    return \"\\n\\nCheck your code at \" + fileName + \":\" + lineNumber + \".\";\n                }\n                return \"\";\n            }\n        }\n        /**\n * Warn if there's no key explicitly set on dynamic arrays of children or\n * object keys are not valid. This allows us to keep track of children between\n * updates.\n */ var ownerHasKeyUseWarning = {};\n        function getCurrentComponentErrorInfo(parentType) {\n            {\n                var info = getDeclarationErrorAddendum();\n                if (!info) {\n                    var parentName = getComponentNameFromType(parentType);\n                    if (parentName) {\n                        info = \"\\n\\nCheck the top-level render call using <\" + parentName + \">.\";\n                    }\n                }\n                return info;\n            }\n        }\n        /**\n * Warn if the element doesn't have an explicit key assigned to it.\n * This element is in an array. The array could grow and shrink or be\n * reordered. All children that haven't already been validated are required to\n * have a \"key\" property assigned to it. Error statuses are cached so a warning\n * will only be shown once.\n *\n * @internal\n * @param {ReactElement} element Element that requires a key.\n * @param {*} parentType element's parent's type.\n */ function validateExplicitKey(element, parentType) {\n            {\n                if (!element._store || element._store.validated || element.key != null) {\n                    return;\n                }\n                element._store.validated = true;\n                var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);\n                if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {\n                    return;\n                }\n                ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a\n                // property, it may be the creator of the child that's responsible for\n                // assigning it a key.\n                var childOwner = \"\";\n                if (element && element._owner && element._owner !== ReactCurrentOwner.current) {\n                    // Give the component that originally created this child.\n                    childOwner = \" It was passed a child from \" + getComponentNameFromType(element._owner.type) + \".\";\n                }\n                setCurrentlyValidatingElement(element);\n                error('Each child in a list should have a unique \"key\" prop.' + \"%s%s See https://reactjs.org/link/warning-keys for more information.\", currentComponentErrorInfo, childOwner);\n                setCurrentlyValidatingElement(null);\n            }\n        }\n        /**\n * Ensure that every element either is passed in a static location, in an\n * array with an explicit keys property defined, or in an object literal\n * with valid key property.\n *\n * @internal\n * @param {ReactNode} node Statically passed child of any type.\n * @param {*} parentType node's parent's type.\n */ function validateChildKeys(node, parentType) {\n            {\n                if (typeof node !== \"object\" || !node) {\n                    return;\n                }\n                if (node.$$typeof === REACT_CLIENT_REFERENCE) ;\n                else if (isArray(node)) {\n                    for(var i = 0; i < node.length; i++){\n                        var child = node[i];\n                        if (isValidElement(child)) {\n                            validateExplicitKey(child, parentType);\n                        }\n                    }\n                } else if (isValidElement(node)) {\n                    // This element was passed in a valid location.\n                    if (node._store) {\n                        node._store.validated = true;\n                    }\n                } else {\n                    var iteratorFn = getIteratorFn(node);\n                    if (typeof iteratorFn === \"function\") {\n                        // Entry iterators used to provide implicit keys,\n                        // but now we print a separate warning for them later.\n                        if (iteratorFn !== node.entries) {\n                            var iterator = iteratorFn.call(node);\n                            var step;\n                            while(!(step = iterator.next()).done){\n                                if (isValidElement(step.value)) {\n                                    validateExplicitKey(step.value, parentType);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        /**\n * Given an element, validate that its props follow the propTypes definition,\n * provided by the type.\n *\n * @param {ReactElement} element\n */ function validatePropTypes(element) {\n            {\n                var type = element.type;\n                if (type === null || type === undefined || typeof type === \"string\") {\n                    return;\n                }\n                if (type.$$typeof === REACT_CLIENT_REFERENCE) {\n                    return;\n                }\n                var propTypes;\n                if (typeof type === \"function\") {\n                    propTypes = type.propTypes;\n                } else if (typeof type === \"object\" && (type.$$typeof === REACT_FORWARD_REF_TYPE || // Note: Memo only checks outer props here.\n                // Inner props are checked in the reconciler.\n                type.$$typeof === REACT_MEMO_TYPE)) {\n                    propTypes = type.propTypes;\n                } else {\n                    return;\n                }\n                if (propTypes) {\n                    // Intentionally inside to avoid triggering lazy initializers:\n                    var name = getComponentNameFromType(type);\n                    checkPropTypes(propTypes, element.props, \"prop\", name, element);\n                } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {\n                    propTypesMisspellWarningShown = true; // Intentionally inside to avoid triggering lazy initializers:\n                    var _name = getComponentNameFromType(type);\n                    error(\"Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?\", _name || \"Unknown\");\n                }\n                if (typeof type.getDefaultProps === \"function\" && !type.getDefaultProps.isReactClassApproved) {\n                    error(\"getDefaultProps is only used on classic React.createClass \" + \"definitions. Use a static property named `defaultProps` instead.\");\n                }\n            }\n        }\n        /**\n * Given a fragment, validate that it can only be provided with fragment props\n * @param {ReactElement} fragment\n */ function validateFragmentProps(fragment) {\n            {\n                var keys = Object.keys(fragment.props);\n                for(var i = 0; i < keys.length; i++){\n                    var key = keys[i];\n                    if (key !== \"children\" && key !== \"key\") {\n                        setCurrentlyValidatingElement(fragment);\n                        error(\"Invalid prop `%s` supplied to `React.Fragment`. \" + \"React.Fragment can only have `key` and `children` props.\", key);\n                        setCurrentlyValidatingElement(null);\n                        break;\n                    }\n                }\n                if (fragment.ref !== null) {\n                    setCurrentlyValidatingElement(fragment);\n                    error(\"Invalid attribute `ref` supplied to `React.Fragment`.\");\n                    setCurrentlyValidatingElement(null);\n                }\n            }\n        }\n        var didWarnAboutKeySpread = {};\n        function jsxWithValidation(type, props, key, isStaticChildren, source, self) {\n            {\n                var validType = isValidElementType(type); // We warn in this case but don't throw. We expect the element creation to\n                // succeed and there will likely be errors in render.\n                if (!validType) {\n                    var info = \"\";\n                    if (type === undefined || typeof type === \"object\" && type !== null && Object.keys(type).length === 0) {\n                        info += \" You likely forgot to export your component from the file \" + \"it's defined in, or you might have mixed up default and named imports.\";\n                    }\n                    var sourceInfo = getSourceInfoErrorAddendum(source);\n                    if (sourceInfo) {\n                        info += sourceInfo;\n                    } else {\n                        info += getDeclarationErrorAddendum();\n                    }\n                    var typeString;\n                    if (type === null) {\n                        typeString = \"null\";\n                    } else if (isArray(type)) {\n                        typeString = \"array\";\n                    } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {\n                        typeString = \"<\" + (getComponentNameFromType(type.type) || \"Unknown\") + \" />\";\n                        info = \" Did you accidentally export a JSX literal instead of a component?\";\n                    } else {\n                        typeString = typeof type;\n                    }\n                    error(\"React.jsx: type is invalid -- expected a string (for \" + \"built-in components) or a class/function (for composite \" + \"components) but got: %s.%s\", typeString, info);\n                }\n                var element = jsxDEV$1(type, props, key, source, self); // The result can be nullish if a mock or a custom function is used.\n                // TODO: Drop this when these are no longer allowed as the type argument.\n                if (element == null) {\n                    return element;\n                } // Skip key warning if the type isn't valid since our key validation logic\n                // doesn't expect a non-string/function type and can throw confusing errors.\n                // We don't want exception behavior to differ between dev and prod.\n                // (Rendering will throw with a helpful message and as soon as the type is\n                // fixed, the key warnings will appear.)\n                if (validType) {\n                    var children = props.children;\n                    if (children !== undefined) {\n                        if (isStaticChildren) {\n                            if (isArray(children)) {\n                                for(var i = 0; i < children.length; i++){\n                                    validateChildKeys(children[i], type);\n                                }\n                                if (Object.freeze) {\n                                    Object.freeze(children);\n                                }\n                            } else {\n                                error(\"React.jsx: Static children should always be an array. \" + \"You are likely explicitly calling React.jsxs or React.jsxDEV. \" + \"Use the Babel transform instead.\");\n                            }\n                        } else {\n                            validateChildKeys(children, type);\n                        }\n                    }\n                }\n                if (hasOwnProperty.call(props, \"key\")) {\n                    var componentName = getComponentNameFromType(type);\n                    var keys = Object.keys(props).filter(function(k) {\n                        return k !== \"key\";\n                    });\n                    var beforeExample = keys.length > 0 ? \"{key: someKey, \" + keys.join(\": ..., \") + \": ...}\" : \"{key: someKey}\";\n                    if (!didWarnAboutKeySpread[componentName + beforeExample]) {\n                        var afterExample = keys.length > 0 ? \"{\" + keys.join(\": ..., \") + \": ...}\" : \"{}\";\n                        error('A props object containing a \"key\" prop is being spread into JSX:\\n' + \"  let props = %s;\\n\" + \"  <%s {...props} />\\n\" + \"React keys must be passed directly to JSX without using spread:\\n\" + \"  let props = %s;\\n\" + \"  <%s key={someKey} {...props} />\", beforeExample, componentName, afterExample, componentName);\n                        didWarnAboutKeySpread[componentName + beforeExample] = true;\n                    }\n                }\n                if (type === REACT_FRAGMENT_TYPE) {\n                    validateFragmentProps(element);\n                } else {\n                    validatePropTypes(element);\n                }\n                return element;\n            }\n        } // These two functions exist to still get child warnings in dev\n        var jsxDEV = jsxWithValidation;\n        exports.Fragment = REACT_FRAGMENT_TYPE;\n        exports.jsxDEV = jsxDEV;\n    })();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js":
/*!******************************************************************!*\
  !*** ./node_modules/next/dist/compiled/react/jsx-dev-runtime.js ***!
  \******************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nif (false) {} else {\n    module.exports = __webpack_require__(/*! ./cjs/react-jsx-dev-runtime.development.js */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY29tcGlsZWQvcmVhY3QvanN4LWRldi1ydW50aW1lLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBRUEsSUFBSUEsS0FBeUIsRUFBYyxFQUUxQyxNQUFNO0lBQ0xHLDhMQUF5QjtBQUMzQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NvbXBpbGVkL3JlYWN0L2pzeC1kZXYtcnVudGltZS5qcz9jYTIwIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC1qc3gtZGV2LXJ1bnRpbWUucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtanN4LWRldi1ydW50aW1lLmRldmVsb3BtZW50LmpzJyk7XG59XG4iXSwibmFtZXMiOlsicHJvY2VzcyIsImVudiIsIk5PREVfRU5WIiwibW9kdWxlIiwiZXhwb3J0cyIsInJlcXVpcmUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/use-debounce/dist/index.module.js":
/*!********************************************************!*\
  !*** ./node_modules/use-debounce/dist/index.module.js ***!
  \********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useDebounce: function() { return /* binding */ a; },\n/* harmony export */   useDebouncedCallback: function() { return /* binding */ c; },\n/* harmony export */   useThrottledCallback: function() { return /* binding */ o; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n\nfunction c(e, u, c) {\n    var i = this, a = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null), o = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(0), f = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null), l = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)([]), v = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(), m = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(), d = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(e), g = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(!0);\n    d.current = e;\n    var p = \"undefined\" != \"object\", w = !u && 0 !== u && p;\n    if (\"function\" != typeof e) throw new TypeError(\"Expected a function\");\n    u = +u || 0;\n    var s = !!(c = c || {}).leading, x = !(\"trailing\" in c) || !!c.trailing, h = \"maxWait\" in c, y = \"debounceOnServer\" in c && !!c.debounceOnServer, F = h ? Math.max(+c.maxWait || 0, u) : null;\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function() {\n        return g.current = !0, function() {\n            g.current = !1;\n        };\n    }, []);\n    var A = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(function() {\n        var r = function(r) {\n            var n = l.current, t = v.current;\n            return l.current = v.current = null, o.current = r, m.current = d.current.apply(t, n);\n        }, n = function(r, n) {\n            w && cancelAnimationFrame(f.current), f.current = w ? requestAnimationFrame(r) : setTimeout(r, n);\n        }, t = function(r) {\n            if (!g.current) return !1;\n            var n = r - a.current;\n            return !a.current || n >= u || n < 0 || h && r - o.current >= F;\n        }, e = function(n) {\n            return f.current = null, x && l.current ? r(n) : (l.current = v.current = null, m.current);\n        }, c = function r() {\n            var c = Date.now();\n            if (t(c)) return e(c);\n            if (g.current) {\n                var i = u - (c - a.current), f = h ? Math.min(i, F - (c - o.current)) : i;\n                n(r, f);\n            }\n        }, A = function() {\n            if (p || y) {\n                var e = Date.now(), d = t(e);\n                if (l.current = [].slice.call(arguments), v.current = i, a.current = e, d) {\n                    if (!f.current && g.current) return o.current = a.current, n(c, u), s ? r(a.current) : m.current;\n                    if (h) return n(c, u), r(a.current);\n                }\n                return f.current || n(c, u), m.current;\n            }\n        };\n        return A.cancel = function() {\n            f.current && (w ? cancelAnimationFrame(f.current) : clearTimeout(f.current)), o.current = 0, l.current = a.current = v.current = f.current = null;\n        }, A.isPending = function() {\n            return !!f.current;\n        }, A.flush = function() {\n            return f.current ? e(Date.now()) : m.current;\n        }, A;\n    }, [\n        s,\n        h,\n        u,\n        F,\n        x,\n        w,\n        p,\n        y\n    ]);\n    return A;\n}\nfunction i(r, n) {\n    return r === n;\n}\nfunction a(n, t, a) {\n    var o = a && a.equalityFn || i, f = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(n), l = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)({})[1], v = c((0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function(r) {\n        f.current = r, l({});\n    }, [\n        l\n    ]), t, a), m = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(n);\n    return o(m.current, n) || (v(n), m.current = n), [\n        f.current,\n        v\n    ];\n}\nfunction o(r, n, t) {\n    var e = void 0 === t ? {} : t, u = e.leading, i = e.trailing;\n    return c(r, n, {\n        maxWait: n,\n        leading: void 0 === u || u,\n        trailing: void 0 === i || i\n    });\n}\n //# sourceMappingURL=index.module.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/use-debounce/dist/index.module.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./app/components/ChartWithControls.tsx":
/*!**********************************************!*\
  !*** ./app/components/ChartWithControls.tsx ***!
  \**********************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ ChartWithControls; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _StockChart__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./StockChart */ \"(app-pages-browser)/./app/components/StockChart.tsx\");\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\n\nfunction ChartWithControls(param) {\n    let { timeSeriesData, significantMoves } = param;\n    _s();\n    const [isPlaying, setIsPlaying] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [playbackSpeed, setPlaybackSpeed] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(100);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_StockChart__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n                data: timeSeriesData,\n                significantMoves: significantMoves,\n                isPlaying: isPlaying,\n                playbackSpeed: playbackSpeed,\n                onAnimationComplete: ()=>setIsPlaying(false)\n            }, void 0, false, {\n                fileName: \"/home/trascastefan/ai-video2/app/components/ChartWithControls.tsx\",\n                lineNumber: 22,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"flex items-center gap-4 justify-center mt-4\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                        onClick: ()=>setIsPlaying(!isPlaying),\n                        className: \"px-4 py-2 rounded-lg bg-blue-600 text-white hover:bg-blue-700 transition-colors\",\n                        children: isPlaying ? \"Pause\" : \"Play\"\n                    }, void 0, false, {\n                        fileName: \"/home/trascastefan/ai-video2/app/components/ChartWithControls.tsx\",\n                        lineNumber: 32,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"flex items-center gap-2\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"label\", {\n                                htmlFor: \"speed\",\n                                className: \"text-sm text-gray-600\",\n                                children: \"Speed:\"\n                            }, void 0, false, {\n                                fileName: \"/home/trascastefan/ai-video2/app/components/ChartWithControls.tsx\",\n                                lineNumber: 39,\n                                columnNumber: 11\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"select\", {\n                                id: \"speed\",\n                                value: playbackSpeed,\n                                onChange: (e)=>setPlaybackSpeed(Number(e.target.value)),\n                                className: \"rounded-lg border border-gray-300 px-2 py-1\",\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"option\", {\n                                        value: \"200\",\n                                        children: \"Slow\"\n                                    }, void 0, false, {\n                                        fileName: \"/home/trascastefan/ai-video2/app/components/ChartWithControls.tsx\",\n                                        lineNumber: 46,\n                                        columnNumber: 13\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"option\", {\n                                        value: \"100\",\n                                        children: \"Normal\"\n                                    }, void 0, false, {\n                                        fileName: \"/home/trascastefan/ai-video2/app/components/ChartWithControls.tsx\",\n                                        lineNumber: 47,\n                                        columnNumber: 13\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"option\", {\n                                        value: \"50\",\n                                        children: \"Fast\"\n                                    }, void 0, false, {\n                                        fileName: \"/home/trascastefan/ai-video2/app/components/ChartWithControls.tsx\",\n                                        lineNumber: 48,\n                                        columnNumber: 13\n                                    }, this)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"/home/trascastefan/ai-video2/app/components/ChartWithControls.tsx\",\n                                lineNumber: 40,\n                                columnNumber: 11\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/home/trascastefan/ai-video2/app/components/ChartWithControls.tsx\",\n                        lineNumber: 38,\n                        columnNumber: 9\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"/home/trascastefan/ai-video2/app/components/ChartWithControls.tsx\",\n                lineNumber: 31,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true);\n}\n_s(ChartWithControls, \"G7DijBfSLTaDnG+nPLPWqREWgJM=\");\n_c = ChartWithControls;\nvar _c;\n$RefreshReg$(_c, \"ChartWithControls\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2FwcC9jb21wb25lbnRzL0NoYXJ0V2l0aENvbnRyb2xzLnRzeCIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBRXdDO0FBQ0Y7QUFRdkIsU0FBU0csa0JBQWtCLEtBR2pCO1FBSGlCLEVBQ3hDQyxjQUFjLEVBQ2RDLGdCQUFnQixFQUNPLEdBSGlCOztJQUl4QyxNQUFNLENBQUNDLFdBQVdDLGFBQWEsR0FBR04sK0NBQVFBLENBQUM7SUFDM0MsTUFBTSxDQUFDTyxlQUFlQyxpQkFBaUIsR0FBR1IsK0NBQVFBLENBQUM7SUFFbkQscUJBQ0U7OzBCQUVFLDhEQUFDQyxtREFBVUE7Z0JBQ1RRLE1BQU1OO2dCQUNOQyxrQkFBa0JBO2dCQUNsQkMsV0FBV0E7Z0JBQ1hFLGVBQWVBO2dCQUNmRyxxQkFBcUIsSUFBTUosYUFBYTs7Ozs7OzBCQUkxQyw4REFBQ0s7Z0JBQUlDLFdBQVU7O2tDQUNiLDhEQUFDQzt3QkFDQ0MsU0FBUyxJQUFNUixhQUFhLENBQUNEO3dCQUM3Qk8sV0FBVTtrQ0FFVFAsWUFBWSxVQUFVOzs7Ozs7a0NBRXpCLDhEQUFDTTt3QkFBSUMsV0FBVTs7MENBQ2IsOERBQUNHO2dDQUFNQyxTQUFRO2dDQUFRSixXQUFVOzBDQUF3Qjs7Ozs7OzBDQUN6RCw4REFBQ0s7Z0NBQ0NDLElBQUc7Z0NBQ0hDLE9BQU9aO2dDQUNQYSxVQUFVLENBQUNDLElBQU1iLGlCQUFpQmMsT0FBT0QsRUFBRUUsTUFBTSxDQUFDSixLQUFLO2dDQUN2RFAsV0FBVTs7a0RBRVYsOERBQUNZO3dDQUFPTCxPQUFNO2tEQUFNOzs7Ozs7a0RBQ3BCLDhEQUFDSzt3Q0FBT0wsT0FBTTtrREFBTTs7Ozs7O2tEQUNwQiw4REFBQ0s7d0NBQU9MLE9BQU07a0RBQUs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBTS9CO0dBMUN3QmpCO0tBQUFBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL2FwcC9jb21wb25lbnRzL0NoYXJ0V2l0aENvbnRyb2xzLnRzeD83MjExIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2UgY2xpZW50JztcblxuaW1wb3J0IFJlYWN0LCB7IHVzZVN0YXRlIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IFN0b2NrQ2hhcnQgZnJvbSAnLi9TdG9ja0NoYXJ0JztcbmltcG9ydCB7IFRpbWVTZXJpZXNEYXRhLCBTaWduaWZpY2FudE1vdmUgfSBmcm9tICcuL1ZvbHVtZUFuYWx5c2lzJztcblxuaW50ZXJmYWNlIENoYXJ0V2l0aENvbnRyb2xzUHJvcHMge1xuICB0aW1lU2VyaWVzRGF0YTogVGltZVNlcmllc0RhdGFbXTtcbiAgc2lnbmlmaWNhbnRNb3ZlczogU2lnbmlmaWNhbnRNb3ZlW107XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIENoYXJ0V2l0aENvbnRyb2xzKHsgXG4gIHRpbWVTZXJpZXNEYXRhLCBcbiAgc2lnbmlmaWNhbnRNb3ZlcyBcbn06IENoYXJ0V2l0aENvbnRyb2xzUHJvcHMpIHtcbiAgY29uc3QgW2lzUGxheWluZywgc2V0SXNQbGF5aW5nXSA9IHVzZVN0YXRlKGZhbHNlKTtcbiAgY29uc3QgW3BsYXliYWNrU3BlZWQsIHNldFBsYXliYWNrU3BlZWRdID0gdXNlU3RhdGUoMTAwKTtcblxuICByZXR1cm4gKFxuICAgIDw+XG4gICAgICB7LyogRGlzcGxheSB0aGUgU3RvY2tDaGFydCB3aXRoIGlQaG9uZSBtb2NrdXAgKi99XG4gICAgICA8U3RvY2tDaGFydFxuICAgICAgICBkYXRhPXt0aW1lU2VyaWVzRGF0YX1cbiAgICAgICAgc2lnbmlmaWNhbnRNb3Zlcz17c2lnbmlmaWNhbnRNb3Zlc31cbiAgICAgICAgaXNQbGF5aW5nPXtpc1BsYXlpbmd9XG4gICAgICAgIHBsYXliYWNrU3BlZWQ9e3BsYXliYWNrU3BlZWR9XG4gICAgICAgIG9uQW5pbWF0aW9uQ29tcGxldGU9eygpID0+IHNldElzUGxheWluZyhmYWxzZSl9XG4gICAgICAvPlxuICAgICAgXG4gICAgICB7LyogUGxheSBjb250cm9scyAqL31cbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZmxleCBpdGVtcy1jZW50ZXIgZ2FwLTQganVzdGlmeS1jZW50ZXIgbXQtNFwiPlxuICAgICAgICA8YnV0dG9uXG4gICAgICAgICAgb25DbGljaz17KCkgPT4gc2V0SXNQbGF5aW5nKCFpc1BsYXlpbmcpfVxuICAgICAgICAgIGNsYXNzTmFtZT1cInB4LTQgcHktMiByb3VuZGVkLWxnIGJnLWJsdWUtNjAwIHRleHQtd2hpdGUgaG92ZXI6YmctYmx1ZS03MDAgdHJhbnNpdGlvbi1jb2xvcnNcIlxuICAgICAgICA+XG4gICAgICAgICAge2lzUGxheWluZyA/ICdQYXVzZScgOiAnUGxheSd9XG4gICAgICAgIDwvYnV0dG9uPlxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImZsZXggaXRlbXMtY2VudGVyIGdhcC0yXCI+XG4gICAgICAgICAgPGxhYmVsIGh0bWxGb3I9XCJzcGVlZFwiIGNsYXNzTmFtZT1cInRleHQtc20gdGV4dC1ncmF5LTYwMFwiPlNwZWVkOjwvbGFiZWw+XG4gICAgICAgICAgPHNlbGVjdFxuICAgICAgICAgICAgaWQ9XCJzcGVlZFwiXG4gICAgICAgICAgICB2YWx1ZT17cGxheWJhY2tTcGVlZH1cbiAgICAgICAgICAgIG9uQ2hhbmdlPXsoZSkgPT4gc2V0UGxheWJhY2tTcGVlZChOdW1iZXIoZS50YXJnZXQudmFsdWUpKX1cbiAgICAgICAgICAgIGNsYXNzTmFtZT1cInJvdW5kZWQtbGcgYm9yZGVyIGJvcmRlci1ncmF5LTMwMCBweC0yIHB5LTFcIlxuICAgICAgICAgID5cbiAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9XCIyMDBcIj5TbG93PC9vcHRpb24+XG4gICAgICAgICAgICA8b3B0aW9uIHZhbHVlPVwiMTAwXCI+Tm9ybWFsPC9vcHRpb24+XG4gICAgICAgICAgICA8b3B0aW9uIHZhbHVlPVwiNTBcIj5GYXN0PC9vcHRpb24+XG4gICAgICAgICAgPC9zZWxlY3Q+XG4gICAgICAgIDwvZGl2PlxuICAgICAgPC9kaXY+XG4gICAgPC8+XG4gICk7XG59XG4iXSwibmFtZXMiOlsiUmVhY3QiLCJ1c2VTdGF0ZSIsIlN0b2NrQ2hhcnQiLCJDaGFydFdpdGhDb250cm9scyIsInRpbWVTZXJpZXNEYXRhIiwic2lnbmlmaWNhbnRNb3ZlcyIsImlzUGxheWluZyIsInNldElzUGxheWluZyIsInBsYXliYWNrU3BlZWQiLCJzZXRQbGF5YmFja1NwZWVkIiwiZGF0YSIsIm9uQW5pbWF0aW9uQ29tcGxldGUiLCJkaXYiLCJjbGFzc05hbWUiLCJidXR0b24iLCJvbkNsaWNrIiwibGFiZWwiLCJodG1sRm9yIiwic2VsZWN0IiwiaWQiLCJ2YWx1ZSIsIm9uQ2hhbmdlIiwiZSIsIk51bWJlciIsInRhcmdldCIsIm9wdGlvbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/components/ChartWithControls.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./app/components/CompanyInfo.tsx":
/*!****************************************!*\
  !*** ./app/components/CompanyInfo.tsx ***!
  \****************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ CompanyInfo; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n\n\nfunction formatNumber(num) {\n    if (num >= 1e12) return (num / 1e12).toFixed(2) + \"T\";\n    if (num >= 1e9) return (num / 1e9).toFixed(2) + \"B\";\n    if (num >= 1e6) return (num / 1e6).toFixed(2) + \"M\";\n    if (num >= 1e3) return (num / 1e3).toFixed(2) + \"K\";\n    return num.toString();\n}\nfunction CompanyInfo(param) {\n    let { symbol, companyData, isLoading } = param;\n    if (isLoading) {\n        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            className: \"animate-pulse\",\n            children: [\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"h-8 bg-gray-200 rounded w-1/3 mb-4\"\n                }, void 0, false, {\n                    fileName: \"/home/trascastefan/ai-video2/app/components/CompanyInfo.tsx\",\n                    lineNumber: 28,\n                    columnNumber: 9\n                }, this),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"h-24 bg-gray-200 rounded mb-4\"\n                }, void 0, false, {\n                    fileName: \"/home/trascastefan/ai-video2/app/components/CompanyInfo.tsx\",\n                    lineNumber: 29,\n                    columnNumber: 9\n                }, this),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"grid grid-cols-2 gap-4\",\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"h-12 bg-gray-200 rounded\"\n                        }, void 0, false, {\n                            fileName: \"/home/trascastefan/ai-video2/app/components/CompanyInfo.tsx\",\n                            lineNumber: 31,\n                            columnNumber: 11\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"h-12 bg-gray-200 rounded\"\n                        }, void 0, false, {\n                            fileName: \"/home/trascastefan/ai-video2/app/components/CompanyInfo.tsx\",\n                            lineNumber: 32,\n                            columnNumber: 11\n                        }, this)\n                    ]\n                }, void 0, true, {\n                    fileName: \"/home/trascastefan/ai-video2/app/components/CompanyInfo.tsx\",\n                    lineNumber: 30,\n                    columnNumber: 9\n                }, this)\n            ]\n        }, void 0, true, {\n            fileName: \"/home/trascastefan/ai-video2/app/components/CompanyInfo.tsx\",\n            lineNumber: 27,\n            columnNumber: 7\n        }, this);\n    }\n    if (!companyData) {\n        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            className: \"text-gray-500 text-center py-8\",\n            children: symbol ? \"No company information available\" : \"Select a company to view details\"\n        }, void 0, false, {\n            fileName: \"/home/trascastefan/ai-video2/app/components/CompanyInfo.tsx\",\n            lineNumber: 40,\n            columnNumber: 7\n        }, this);\n    }\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"space-y-6\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h2\", {\n                        className: \"text-2xl font-bold mb-2\",\n                        children: companyData.name\n                    }, void 0, false, {\n                        fileName: \"/home/trascastefan/ai-video2/app/components/CompanyInfo.tsx\",\n                        lineNumber: 49,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                        className: \"text-gray-600\",\n                        children: companyData.description\n                    }, void 0, false, {\n                        fileName: \"/home/trascastefan/ai-video2/app/components/CompanyInfo.tsx\",\n                        lineNumber: 50,\n                        columnNumber: 9\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"/home/trascastefan/ai-video2/app/components/CompanyInfo.tsx\",\n                lineNumber: 48,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"grid grid-cols-2 gap-6\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"bg-gray-50 p-4 rounded-lg\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"text-sm text-gray-500 mb-1\",\n                                children: \"Market Cap\"\n                            }, void 0, false, {\n                                fileName: \"/home/trascastefan/ai-video2/app/components/CompanyInfo.tsx\",\n                                lineNumber: 55,\n                                columnNumber: 11\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"text-xl font-semibold\",\n                                children: [\n                                    \"$\",\n                                    formatNumber(companyData.marketCap)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"/home/trascastefan/ai-video2/app/components/CompanyInfo.tsx\",\n                                lineNumber: 56,\n                                columnNumber: 11\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/home/trascastefan/ai-video2/app/components/CompanyInfo.tsx\",\n                        lineNumber: 54,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"bg-gray-50 p-4 rounded-lg\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"text-sm text-gray-500 mb-1\",\n                                children: \"Volume\"\n                            }, void 0, false, {\n                                fileName: \"/home/trascastefan/ai-video2/app/components/CompanyInfo.tsx\",\n                                lineNumber: 59,\n                                columnNumber: 11\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"text-xl font-semibold\",\n                                children: formatNumber(companyData.volume)\n                            }, void 0, false, {\n                                fileName: \"/home/trascastefan/ai-video2/app/components/CompanyInfo.tsx\",\n                                lineNumber: 60,\n                                columnNumber: 11\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/home/trascastefan/ai-video2/app/components/CompanyInfo.tsx\",\n                        lineNumber: 58,\n                        columnNumber: 9\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"/home/trascastefan/ai-video2/app/components/CompanyInfo.tsx\",\n                lineNumber: 53,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"grid grid-cols-2 gap-6\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"text-sm text-gray-500 mb-1\",\n                                children: \"Sector\"\n                            }, void 0, false, {\n                                fileName: \"/home/trascastefan/ai-video2/app/components/CompanyInfo.tsx\",\n                                lineNumber: 66,\n                                columnNumber: 11\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"font-medium\",\n                                children: companyData.sector\n                            }, void 0, false, {\n                                fileName: \"/home/trascastefan/ai-video2/app/components/CompanyInfo.tsx\",\n                                lineNumber: 67,\n                                columnNumber: 11\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/home/trascastefan/ai-video2/app/components/CompanyInfo.tsx\",\n                        lineNumber: 65,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"text-sm text-gray-500 mb-1\",\n                                children: \"Industry\"\n                            }, void 0, false, {\n                                fileName: \"/home/trascastefan/ai-video2/app/components/CompanyInfo.tsx\",\n                                lineNumber: 70,\n                                columnNumber: 11\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"font-medium\",\n                                children: companyData.industry\n                            }, void 0, false, {\n                                fileName: \"/home/trascastefan/ai-video2/app/components/CompanyInfo.tsx\",\n                                lineNumber: 71,\n                                columnNumber: 11\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/home/trascastefan/ai-video2/app/components/CompanyInfo.tsx\",\n                        lineNumber: 69,\n                        columnNumber: 9\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"/home/trascastefan/ai-video2/app/components/CompanyInfo.tsx\",\n                lineNumber: 64,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"/home/trascastefan/ai-video2/app/components/CompanyInfo.tsx\",\n        lineNumber: 47,\n        columnNumber: 5\n    }, this);\n}\n_c = CompanyInfo;\nvar _c;\n$RefreshReg$(_c, \"CompanyInfo\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2FwcC9jb21wb25lbnRzL0NvbXBhbnlJbmZvLnRzeCIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUEwQjtBQWUxQixTQUFTQyxhQUFhQyxHQUFXO0lBQy9CLElBQUlBLE9BQU8sTUFBTSxPQUFPLENBQUNBLE1BQU0sSUFBRyxFQUFHQyxPQUFPLENBQUMsS0FBSztJQUNsRCxJQUFJRCxPQUFPLEtBQUssT0FBTyxDQUFDQSxNQUFNLEdBQUUsRUFBR0MsT0FBTyxDQUFDLEtBQUs7SUFDaEQsSUFBSUQsT0FBTyxLQUFLLE9BQU8sQ0FBQ0EsTUFBTSxHQUFFLEVBQUdDLE9BQU8sQ0FBQyxLQUFLO0lBQ2hELElBQUlELE9BQU8sS0FBSyxPQUFPLENBQUNBLE1BQU0sR0FBRSxFQUFHQyxPQUFPLENBQUMsS0FBSztJQUNoRCxPQUFPRCxJQUFJRSxRQUFRO0FBQ3JCO0FBRWUsU0FBU0MsWUFBWSxLQUFvRDtRQUFwRCxFQUFFQyxNQUFNLEVBQUVDLFdBQVcsRUFBRUMsU0FBUyxFQUFvQixHQUFwRDtJQUNsQyxJQUFJQSxXQUFXO1FBQ2IscUJBQ0UsOERBQUNDO1lBQUlDLFdBQVU7OzhCQUNiLDhEQUFDRDtvQkFBSUMsV0FBVTs7Ozs7OzhCQUNmLDhEQUFDRDtvQkFBSUMsV0FBVTs7Ozs7OzhCQUNmLDhEQUFDRDtvQkFBSUMsV0FBVTs7c0NBQ2IsOERBQUNEOzRCQUFJQyxXQUFVOzs7Ozs7c0NBQ2YsOERBQUNEOzRCQUFJQyxXQUFVOzs7Ozs7Ozs7Ozs7Ozs7Ozs7SUFJdkI7SUFFQSxJQUFJLENBQUNILGFBQWE7UUFDaEIscUJBQ0UsOERBQUNFO1lBQUlDLFdBQVU7c0JBQ1pKLFNBQVMscUNBQXFDOzs7Ozs7SUFHckQ7SUFFQSxxQkFDRSw4REFBQ0c7UUFBSUMsV0FBVTs7MEJBQ2IsOERBQUNEOztrQ0FDQyw4REFBQ0U7d0JBQUdELFdBQVU7a0NBQTJCSCxZQUFZSyxJQUFJOzs7Ozs7a0NBQ3pELDhEQUFDQzt3QkFBRUgsV0FBVTtrQ0FBaUJILFlBQVlPLFdBQVc7Ozs7Ozs7Ozs7OzswQkFHdkQsOERBQUNMO2dCQUFJQyxXQUFVOztrQ0FDYiw4REFBQ0Q7d0JBQUlDLFdBQVU7OzBDQUNiLDhEQUFDRDtnQ0FBSUMsV0FBVTswQ0FBNkI7Ozs7OzswQ0FDNUMsOERBQUNEO2dDQUFJQyxXQUFVOztvQ0FBd0I7b0NBQUVULGFBQWFNLFlBQVlRLFNBQVM7Ozs7Ozs7Ozs7Ozs7a0NBRTdFLDhEQUFDTjt3QkFBSUMsV0FBVTs7MENBQ2IsOERBQUNEO2dDQUFJQyxXQUFVOzBDQUE2Qjs7Ozs7OzBDQUM1Qyw4REFBQ0Q7Z0NBQUlDLFdBQVU7MENBQXlCVCxhQUFhTSxZQUFZUyxNQUFNOzs7Ozs7Ozs7Ozs7Ozs7Ozs7MEJBSTNFLDhEQUFDUDtnQkFBSUMsV0FBVTs7a0NBQ2IsOERBQUNEOzswQ0FDQyw4REFBQ0E7Z0NBQUlDLFdBQVU7MENBQTZCOzs7Ozs7MENBQzVDLDhEQUFDRDtnQ0FBSUMsV0FBVTswQ0FBZUgsWUFBWVUsTUFBTTs7Ozs7Ozs7Ozs7O2tDQUVsRCw4REFBQ1I7OzBDQUNDLDhEQUFDQTtnQ0FBSUMsV0FBVTswQ0FBNkI7Ozs7OzswQ0FDNUMsOERBQUNEO2dDQUFJQyxXQUFVOzBDQUFlSCxZQUFZVyxRQUFROzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFLNUQ7S0FwRHdCYiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9hcHAvY29tcG9uZW50cy9Db21wYW55SW5mby50c3g/ZTU3OCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuXG5pbnRlcmZhY2UgQ29tcGFueUluZm9Qcm9wcyB7XG4gIHN5bWJvbDogc3RyaW5nO1xuICBjb21wYW55RGF0YT86IHtcbiAgICBuYW1lOiBzdHJpbmc7XG4gICAgZGVzY3JpcHRpb246IHN0cmluZztcbiAgICBtYXJrZXRDYXA6IG51bWJlcjtcbiAgICB2b2x1bWU6IG51bWJlcjtcbiAgICBzZWN0b3I6IHN0cmluZztcbiAgICBpbmR1c3RyeTogc3RyaW5nO1xuICB9O1xuICBpc0xvYWRpbmc6IGJvb2xlYW47XG59XG5cbmZ1bmN0aW9uIGZvcm1hdE51bWJlcihudW06IG51bWJlcik6IHN0cmluZyB7XG4gIGlmIChudW0gPj0gMWUxMikgcmV0dXJuIChudW0gLyAxZTEyKS50b0ZpeGVkKDIpICsgJ1QnO1xuICBpZiAobnVtID49IDFlOSkgcmV0dXJuIChudW0gLyAxZTkpLnRvRml4ZWQoMikgKyAnQic7XG4gIGlmIChudW0gPj0gMWU2KSByZXR1cm4gKG51bSAvIDFlNikudG9GaXhlZCgyKSArICdNJztcbiAgaWYgKG51bSA+PSAxZTMpIHJldHVybiAobnVtIC8gMWUzKS50b0ZpeGVkKDIpICsgJ0snO1xuICByZXR1cm4gbnVtLnRvU3RyaW5nKCk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIENvbXBhbnlJbmZvKHsgc3ltYm9sLCBjb21wYW55RGF0YSwgaXNMb2FkaW5nIH06IENvbXBhbnlJbmZvUHJvcHMpIHtcbiAgaWYgKGlzTG9hZGluZykge1xuICAgIHJldHVybiAoXG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cImFuaW1hdGUtcHVsc2VcIj5cbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJoLTggYmctZ3JheS0yMDAgcm91bmRlZCB3LTEvMyBtYi00XCI+PC9kaXY+XG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiaC0yNCBiZy1ncmF5LTIwMCByb3VuZGVkIG1iLTRcIj48L2Rpdj5cbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJncmlkIGdyaWQtY29scy0yIGdhcC00XCI+XG4gICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJoLTEyIGJnLWdyYXktMjAwIHJvdW5kZWRcIj48L2Rpdj5cbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImgtMTIgYmctZ3JheS0yMDAgcm91bmRlZFwiPjwvZGl2PlxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvZGl2PlxuICAgICk7XG4gIH1cblxuICBpZiAoIWNvbXBhbnlEYXRhKSB7XG4gICAgcmV0dXJuIChcbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwidGV4dC1ncmF5LTUwMCB0ZXh0LWNlbnRlciBweS04XCI+XG4gICAgICAgIHtzeW1ib2wgPyAnTm8gY29tcGFueSBpbmZvcm1hdGlvbiBhdmFpbGFibGUnIDogJ1NlbGVjdCBhIGNvbXBhbnkgdG8gdmlldyBkZXRhaWxzJ31cbiAgICAgIDwvZGl2PlxuICAgICk7XG4gIH1cblxuICByZXR1cm4gKFxuICAgIDxkaXYgY2xhc3NOYW1lPVwic3BhY2UteS02XCI+XG4gICAgICA8ZGl2PlxuICAgICAgICA8aDIgY2xhc3NOYW1lPVwidGV4dC0yeGwgZm9udC1ib2xkIG1iLTJcIj57Y29tcGFueURhdGEubmFtZX08L2gyPlxuICAgICAgICA8cCBjbGFzc05hbWU9XCJ0ZXh0LWdyYXktNjAwXCI+e2NvbXBhbnlEYXRhLmRlc2NyaXB0aW9ufTwvcD5cbiAgICAgIDwvZGl2PlxuXG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cImdyaWQgZ3JpZC1jb2xzLTIgZ2FwLTZcIj5cbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJiZy1ncmF5LTUwIHAtNCByb3VuZGVkLWxnXCI+XG4gICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJ0ZXh0LXNtIHRleHQtZ3JheS01MDAgbWItMVwiPk1hcmtldCBDYXA8L2Rpdj5cbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInRleHQteGwgZm9udC1zZW1pYm9sZFwiPiR7Zm9ybWF0TnVtYmVyKGNvbXBhbnlEYXRhLm1hcmtldENhcCl9PC9kaXY+XG4gICAgICAgIDwvZGl2PlxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImJnLWdyYXktNTAgcC00IHJvdW5kZWQtbGdcIj5cbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInRleHQtc20gdGV4dC1ncmF5LTUwMCBtYi0xXCI+Vm9sdW1lPC9kaXY+XG4gICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJ0ZXh0LXhsIGZvbnQtc2VtaWJvbGRcIj57Zm9ybWF0TnVtYmVyKGNvbXBhbnlEYXRhLnZvbHVtZSl9PC9kaXY+XG4gICAgICAgIDwvZGl2PlxuICAgICAgPC9kaXY+XG5cbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZ3JpZCBncmlkLWNvbHMtMiBnYXAtNlwiPlxuICAgICAgICA8ZGl2PlxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwidGV4dC1zbSB0ZXh0LWdyYXktNTAwIG1iLTFcIj5TZWN0b3I8L2Rpdj5cbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImZvbnQtbWVkaXVtXCI+e2NvbXBhbnlEYXRhLnNlY3Rvcn08L2Rpdj5cbiAgICAgICAgPC9kaXY+XG4gICAgICAgIDxkaXY+XG4gICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJ0ZXh0LXNtIHRleHQtZ3JheS01MDAgbWItMVwiPkluZHVzdHJ5PC9kaXY+XG4gICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJmb250LW1lZGl1bVwiPntjb21wYW55RGF0YS5pbmR1c3RyeX08L2Rpdj5cbiAgICAgICAgPC9kaXY+XG4gICAgICA8L2Rpdj5cbiAgICA8L2Rpdj5cbiAgKTtcbn0gIl0sIm5hbWVzIjpbIlJlYWN0IiwiZm9ybWF0TnVtYmVyIiwibnVtIiwidG9GaXhlZCIsInRvU3RyaW5nIiwiQ29tcGFueUluZm8iLCJzeW1ib2wiLCJjb21wYW55RGF0YSIsImlzTG9hZGluZyIsImRpdiIsImNsYXNzTmFtZSIsImgyIiwibmFtZSIsInAiLCJkZXNjcmlwdGlvbiIsIm1hcmtldENhcCIsInZvbHVtZSIsInNlY3RvciIsImluZHVzdHJ5Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/components/CompanyInfo.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./app/components/IPhoneMockup.tsx":
/*!*****************************************!*\
  !*** ./app/components/IPhoneMockup.tsx ***!
  \*****************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ IPhoneMockup; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n\n\nfunction IPhoneMockup(param) {\n    let { children } = param;\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"flex justify-center items-center\",\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            className: \"relative w-[320px] h-[650px] bg-black rounded-[50px] border-[14px] border-black shadow-xl overflow-hidden\",\n            children: [\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"absolute top-0 left-1/2 transform -translate-x-1/2 w-[150px] h-[30px] bg-black rounded-b-[14px] z-10\"\n                }, void 0, false, {\n                    fileName: \"/home/trascastefan/ai-video2/app/components/IPhoneMockup.tsx\",\n                    lineNumber: 12,\n                    columnNumber: 9\n                }, this),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"relative w-full h-full bg-white overflow-hidden rounded-[36px] flex flex-col\",\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"h-[40px] bg-black text-white flex justify-between items-center px-6 text-xs\",\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    children: \"9:41\"\n                                }, void 0, false, {\n                                    fileName: \"/home/trascastefan/ai-video2/app/components/IPhoneMockup.tsx\",\n                                    lineNumber: 18,\n                                    columnNumber: 13\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    className: \"flex space-x-2\",\n                                    children: [\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                            children: \"5G\"\n                                        }, void 0, false, {\n                                            fileName: \"/home/trascastefan/ai-video2/app/components/IPhoneMockup.tsx\",\n                                            lineNumber: 20,\n                                            columnNumber: 15\n                                        }, this),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                            children: \"100%\"\n                                        }, void 0, false, {\n                                            fileName: \"/home/trascastefan/ai-video2/app/components/IPhoneMockup.tsx\",\n                                            lineNumber: 21,\n                                            columnNumber: 15\n                                        }, this)\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"/home/trascastefan/ai-video2/app/components/IPhoneMockup.tsx\",\n                                    lineNumber: 19,\n                                    columnNumber: 13\n                                }, this)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/home/trascastefan/ai-video2/app/components/IPhoneMockup.tsx\",\n                            lineNumber: 17,\n                            columnNumber: 11\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"flex-1 overflow-hidden\",\n                            children: children\n                        }, void 0, false, {\n                            fileName: \"/home/trascastefan/ai-video2/app/components/IPhoneMockup.tsx\",\n                            lineNumber: 26,\n                            columnNumber: 11\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"h-[5px] flex justify-center items-center pb-1\",\n                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"w-[134px] h-[5px] bg-gray-400 rounded-full\"\n                            }, void 0, false, {\n                                fileName: \"/home/trascastefan/ai-video2/app/components/IPhoneMockup.tsx\",\n                                lineNumber: 32,\n                                columnNumber: 13\n                            }, this)\n                        }, void 0, false, {\n                            fileName: \"/home/trascastefan/ai-video2/app/components/IPhoneMockup.tsx\",\n                            lineNumber: 31,\n                            columnNumber: 11\n                        }, this)\n                    ]\n                }, void 0, true, {\n                    fileName: \"/home/trascastefan/ai-video2/app/components/IPhoneMockup.tsx\",\n                    lineNumber: 15,\n                    columnNumber: 9\n                }, this)\n            ]\n        }, void 0, true, {\n            fileName: \"/home/trascastefan/ai-video2/app/components/IPhoneMockup.tsx\",\n            lineNumber: 10,\n            columnNumber: 7\n        }, this)\n    }, void 0, false, {\n        fileName: \"/home/trascastefan/ai-video2/app/components/IPhoneMockup.tsx\",\n        lineNumber: 9,\n        columnNumber: 5\n    }, this);\n}\n_c = IPhoneMockup;\nvar _c;\n$RefreshReg$(_c, \"IPhoneMockup\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2FwcC9jb21wb25lbnRzL0lQaG9uZU1vY2t1cC50c3giLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBeUM7QUFNMUIsU0FBU0MsYUFBYSxLQUErQjtRQUEvQixFQUFFQyxRQUFRLEVBQXFCLEdBQS9CO0lBQ25DLHFCQUNFLDhEQUFDQztRQUFJQyxXQUFVO2tCQUNiLDRFQUFDRDtZQUFJQyxXQUFVOzs4QkFFYiw4REFBQ0Q7b0JBQUlDLFdBQVU7Ozs7Ozs4QkFHZiw4REFBQ0Q7b0JBQUlDLFdBQVU7O3NDQUViLDhEQUFDRDs0QkFBSUMsV0FBVTs7OENBQ2IsOERBQUNEOzhDQUFJOzs7Ozs7OENBQ0wsOERBQUNBO29DQUFJQyxXQUFVOztzREFDYiw4REFBQ0M7c0RBQUs7Ozs7OztzREFDTiw4REFBQ0E7c0RBQUs7Ozs7Ozs7Ozs7Ozs7Ozs7OztzQ0FLViw4REFBQ0Y7NEJBQUlDLFdBQVU7c0NBQ1pGOzs7Ozs7c0NBSUgsOERBQUNDOzRCQUFJQyxXQUFVO3NDQUNiLDRFQUFDRDtnQ0FBSUMsV0FBVTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQU0zQjtLQS9Cd0JIIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL2FwcC9jb21wb25lbnRzL0lQaG9uZU1vY2t1cC50c3g/ZWIzMSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHsgUmVhY3ROb2RlIH0gZnJvbSAncmVhY3QnO1xuXG5pbnRlcmZhY2UgSVBob25lTW9ja3VwUHJvcHMge1xuICBjaGlsZHJlbjogUmVhY3ROb2RlO1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBJUGhvbmVNb2NrdXAoeyBjaGlsZHJlbiB9OiBJUGhvbmVNb2NrdXBQcm9wcykge1xuICByZXR1cm4gKFxuICAgIDxkaXYgY2xhc3NOYW1lPVwiZmxleCBqdXN0aWZ5LWNlbnRlciBpdGVtcy1jZW50ZXJcIj5cbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwicmVsYXRpdmUgdy1bMzIwcHhdIGgtWzY1MHB4XSBiZy1ibGFjayByb3VuZGVkLVs1MHB4XSBib3JkZXItWzE0cHhdIGJvcmRlci1ibGFjayBzaGFkb3cteGwgb3ZlcmZsb3ctaGlkZGVuXCI+XG4gICAgICAgIHsvKiBpUGhvbmUgbm90Y2ggKi99XG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiYWJzb2x1dGUgdG9wLTAgbGVmdC0xLzIgdHJhbnNmb3JtIC10cmFuc2xhdGUteC0xLzIgdy1bMTUwcHhdIGgtWzMwcHhdIGJnLWJsYWNrIHJvdW5kZWQtYi1bMTRweF0gei0xMFwiPjwvZGl2PlxuICAgICAgICBcbiAgICAgICAgey8qIGlQaG9uZSBzY3JlZW4gKi99XG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPVwicmVsYXRpdmUgdy1mdWxsIGgtZnVsbCBiZy13aGl0ZSBvdmVyZmxvdy1oaWRkZW4gcm91bmRlZC1bMzZweF0gZmxleCBmbGV4LWNvbFwiPlxuICAgICAgICAgIHsvKiBTdGF0dXMgYmFyICovfVxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiaC1bNDBweF0gYmctYmxhY2sgdGV4dC13aGl0ZSBmbGV4IGp1c3RpZnktYmV0d2VlbiBpdGVtcy1jZW50ZXIgcHgtNiB0ZXh0LXhzXCI+XG4gICAgICAgICAgICA8ZGl2Pjk6NDE8L2Rpdj5cbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZmxleCBzcGFjZS14LTJcIj5cbiAgICAgICAgICAgICAgPHNwYW4+NUc8L3NwYW4+XG4gICAgICAgICAgICAgIDxzcGFuPjEwMCU8L3NwYW4+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICBcbiAgICAgICAgICB7LyogQ29udGVudCBhcmVhICovfVxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZmxleC0xIG92ZXJmbG93LWhpZGRlblwiPlxuICAgICAgICAgICAge2NoaWxkcmVufVxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIFxuICAgICAgICAgIHsvKiBIb21lIGluZGljYXRvciAqL31cbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImgtWzVweF0gZmxleCBqdXN0aWZ5LWNlbnRlciBpdGVtcy1jZW50ZXIgcGItMVwiPlxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJ3LVsxMzRweF0gaC1bNXB4XSBiZy1ncmF5LTQwMCByb3VuZGVkLWZ1bGxcIj48L2Rpdj5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgPC9kaXY+XG4gICAgICA8L2Rpdj5cbiAgICA8L2Rpdj5cbiAgKTtcbn1cbiJdLCJuYW1lcyI6WyJSZWFjdCIsIklQaG9uZU1vY2t1cCIsImNoaWxkcmVuIiwiZGl2IiwiY2xhc3NOYW1lIiwic3BhbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/components/IPhoneMockup.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./app/components/StockChart.tsx":
/*!***************************************!*\
  !*** ./app/components/StockChart.tsx ***!
  \***************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ StockChart; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var next_dynamic__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dynamic */ \"(app-pages-browser)/./node_modules/next/dist/api/app-dynamic.js\");\n/* harmony import */ var _IPhoneMockup__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./IPhoneMockup */ \"(app-pages-browser)/./app/components/IPhoneMockup.tsx\");\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\n\n\n// Use a more robust dynamic import config with fallback and improved loading strategy\nconst Chart = (0,next_dynamic__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(()=>__webpack_require__.e(/*! import() */ \"_app-pages-browser_node_modules_react-apexcharts_dist_react-apexcharts_min_js\").then(__webpack_require__.bind(__webpack_require__, /*! react-apexcharts */ \"(app-pages-browser)/./node_modules/react-apexcharts/dist/react-apexcharts.min.js\")).then((mod)=>{\n        // Ensure the component is properly loaded\n        return mod.default || mod;\n    }), {\n    loadableGenerated: {\n        modules: [\n            \"/home/trascastefan/ai-video2/app/components/StockChart.tsx -> \" + \"react-apexcharts\"\n        ]\n    },\n    ssr: false,\n    loading: ()=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            className: \"h-[500px] flex items-center justify-center\",\n            children: \"Loading chart...\"\n        }, void 0, false, {\n            fileName: \"/home/trascastefan/ai-video2/app/components/StockChart.tsx\",\n            lineNumber: 17,\n            columnNumber: 20\n        }, undefined)\n});\n_c = Chart;\n// Helper function to format volume numbers\nconst formatVolume = (volume)=>{\n    if (volume >= 1e9) return (volume / 1e9).toFixed(2) + \"B\";\n    if (volume >= 1e6) return (volume / 1e6).toFixed(2) + \"M\";\n    if (volume >= 1e3) return (volume / 1e3).toFixed(2) + \"K\";\n    return volume.toString();\n};\nfunction StockChart(param) {\n    let { data = [], significantMoves = [], isPlaying, playbackSpeed = 100, onAnimationComplete } = param;\n    var _chartOptions_xaxis, _chartMetadata_sortedData_, _chartMetadata_sortedData_1, _chartMetadata_sortedData_2, _chartMetadata_sortedData_3, _chartMetadata_sortedData_4;\n    _s();\n    const [visibleDataPoints, setVisibleDataPoints] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [currentTickPrice, setCurrentTickPrice] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [chartMetadata, setChartMetadata] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [chartInitialized, setChartInitialized] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const animationRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)();\n    const currentIndexRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(0);\n    const [activeTooltip, setActiveTooltip] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const tooltipRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const currentCandleIndexRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(0);\n    const currentTickIndexRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(0);\n    // Reset animation when data changes\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        setVisibleDataPoints([]);\n        setChartInitialized(false);\n        currentIndexRef.current = -1;\n        // Process data and generate chart metadata when data changes\n        if (data.length > 0) {\n            calculateChartMetadata();\n        }\n    }, [\n        data\n    ]);\n    // Step 1-4: Calculate chart metadata including total days, non-trading days, display days, min/max prices\n    const calculateChartMetadata = ()=>{\n        if (!(data === null || data === void 0 ? void 0 : data.length)) return;\n        // Filter out invalid data points and sort chronologically\n        const validData = data.filter((d)=>d && d.date && d.open && d.high && d.low && d.close);\n        const sortedData = [\n            ...validData\n        ].sort((a, b)=>new Date(a.date).getTime() - new Date(b.date).getTime());\n        // Since we'll only show trading days with data (no weekend gaps):\n        // We're not using calendar days anymore, just the actual trading days\n        const startDate = new Date(sortedData[0].date);\n        const endDate = new Date(sortedData[sortedData.length - 1].date);\n        // We still calculate these for informational purposes, but they don't affect the chart display\n        const totalCalendarDays = Math.round((endDate.getTime() - startDate.getTime()) / (1000 * 60 * 60 * 24)) + 1;\n        const nonTradingDays = totalCalendarDays - sortedData.length;\n        // Calculate price range with padding\n        const minPrice = Math.min(...sortedData.map((d)=>d.low));\n        const maxPrice = Math.max(...sortedData.map((d)=>d.high));\n        const priceRange = maxPrice - minPrice;\n        const priceMargin = priceRange * 0.15; // 15% margin for better visualization\n        // Generate realistic tick data for each candle\n        const dataWithTicks = sortedData.map((point)=>{\n            const tickData = generateRealisticTickData(point);\n            return {\n                ...point,\n                opacity: 0,\n                tickData\n            };\n        });\n        // Create metadata for chart rendering\n        const metadata = {\n            totalCalendarDays,\n            nonTradingDays,\n            displayDays: sortedData.length,\n            minPrice: minPrice - priceMargin,\n            maxPrice: maxPrice + priceMargin,\n            startDate: startDate.getTime(),\n            endDate: endDate.getTime(),\n            sortedData: dataWithTicks\n        };\n        console.log(\"Chart metadata calculated:\", {\n            totalCalendarDays: metadata.totalCalendarDays,\n            nonTradingDays: metadata.nonTradingDays,\n            displayDays: metadata.displayDays,\n            priceRange: [\n                metadata.minPrice,\n                metadata.maxPrice\n            ]\n        });\n        setChartMetadata(metadata);\n        // Initialize chart with empty candles\n        initializeEmptyChart(metadata);\n    };\n    // Function to generate realistic tick data for a candlestick with various market patterns\n    const generateRealisticTickData = (candle)=>{\n        const { open, high, low, close } = candle;\n        const priceRange = high - low; // Renamed to avoid duplicate declaration\n        // Adaptive tick count with increased data points for more detailed intra-day evolution\n        let numTicks = 150; // Significantly more data points for richer intra-day details\n        // For more volatile candles, use even more ticks to show the movement better\n        if (priceRange > 0.05 * open) {\n            numTicks = 200; // Much higher resolution for volatile candles\n        } else if (priceRange < 0.01 * open) {\n            numTicks = 120; // Fewer ticks but still detailed enough for low volatility\n        }\n        const tickData = [];\n        // Determine if this is an uptrend or downtrend candle\n        const isUptrend = close > open;\n        const isDoji = Math.abs(close - open) < (high - low) * 0.1;\n        const candleDate = new Date(candle.date);\n        const openTime = candleDate.getTime();\n        const closeTime = openTime + 24 * 60 * 60 * 1000 - 1; // End of day\n        // Calculate price ranges for context\n        const range = high - low;\n        const bodyRange = Math.abs(close - open);\n        const upperWick = isUptrend ? high - close : high - open;\n        const lowerWick = isUptrend ? open - low : close - low;\n        // Select a realistic market pattern based on candlestick characteristics\n        // Each stock and each day has different behavior patterns\n        let patternType;\n        if (isDoji) {\n            // For doji candlesticks (small body)\n            const patternTypes = [\n                \"consolidation\",\n                \"volatileRange\",\n                \"testingLevels\"\n            ];\n            patternType = patternTypes[Math.floor(Math.random() * patternTypes.length)];\n        } else if (isUptrend) {\n            // For bullish candlesticks\n            if (upperWick > bodyRange * 0.8) {\n                // Large upper wick - attempted breakout but failed\n                const patternTypes = [\n                    \"failedBreakout\",\n                    \"morningRun\",\n                    \"lateReversal\"\n                ];\n                patternType = patternTypes[Math.floor(Math.random() * patternTypes.length)];\n            } else if (lowerWick > bodyRange * 0.8) {\n                // Large lower wick - tested support and bounced\n                const patternTypes = [\n                    \"supportBounce\",\n                    \"vRecovery\",\n                    \"slowClimb\"\n                ];\n                patternType = patternTypes[Math.floor(Math.random() * patternTypes.length)];\n            } else {\n                // Strong bullish candle\n                const patternTypes = [\n                    \"steadyUptrend\",\n                    \"acceleratingRally\",\n                    \"buyingClimax\"\n                ];\n                patternType = patternTypes[Math.floor(Math.random() * patternTypes.length)];\n            }\n        } else {\n            // For bearish candlesticks\n            if (upperWick > bodyRange * 0.8) {\n                // Large upper wick - tested resistance and dropped\n                const patternTypes = [\n                    \"resistanceFailure\",\n                    \"morningDrop\",\n                    \"failedRally\"\n                ];\n                patternType = patternTypes[Math.floor(Math.random() * patternTypes.length)];\n            } else if (lowerWick > bodyRange * 0.8) {\n                // Large lower wick - attempted breakdown but recovered some\n                const patternTypes = [\n                    \"weakBreakdown\",\n                    \"lunchDip\",\n                    \"lateSupport\"\n                ];\n                patternType = patternTypes[Math.floor(Math.random() * patternTypes.length)];\n            } else {\n                // Strong bearish candle\n                const patternTypes = [\n                    \"steadyDowntrend\",\n                    \"acceleratingDrops\",\n                    \"sellingPanic\"\n                ];\n                patternType = patternTypes[Math.floor(Math.random() * patternTypes.length)];\n            }\n        }\n        console.log(\"Generating \".concat(isUptrend ? \"bullish\" : \"bearish\", \" candlestick with '\").concat(patternType, \"' pattern\"));\n        // Generate price actions based on the selected pattern\n        const priceActions = [];\n        // Normalize prices relative to open (0)\n        const normalizedOpen = 0;\n        const normalizedClose = isUptrend ? 1 : -1; // Normalize direction\n        const normalizedHigh = (high - open) / range;\n        const normalizedLow = (low - open) / range;\n        // Calculate where in the candle range the close is (percentage from low to high)\n        // This helps with determining gradual price paths\n        const relativeClosePosition = isUptrend ? (close - low) / (high - low) : (high - close) / (high - low); // For downtrend: how far down from high\n        // Helper functions for smooth price transitions\n        const smoothStep = (x)=>x * x * (3 - 2 * x);\n        const smootherStep = (x)=>x * x * x * (x * (x * 6 - 15) + 10);\n        const easeInOutQuad = (t)=>t < 0.5 ? 2 * t * t : 1 - Math.pow(-2 * t + 2, 2) / 2;\n        const easeInOutCubic = (t)=>t < 0.5 ? 4 * t * t * t : 1 - Math.pow(-2 * t + 2, 3) / 2;\n        const easeOutElastic = (t)=>{\n            const c4 = 2 * Math.PI / 3;\n            return t === 0 ? 0 : t === 1 ? 1 : Math.pow(2, -10 * t) * Math.sin((t * 10 - 0.75) * c4) + 1;\n        };\n        // Enhanced price momentum system with stronger inertia and limited movement per frame\n        let priceVelocity = 0; // Initial velocity is zero\n        let lastPrice = normalizedOpen; // Start at the open price\n        let previousPrice = normalizedOpen; // Track previous price for limiting changes\n        // Function to apply enhanced momentum-based price evolution with strict limits on change per frame\n        const applyMomentum = (targetPrice, t)=>{\n            // Parameters controlling momentum behavior\n            const inertia = 0.94; // Increased inertia for more persistent continuation (was 0.88)\n            const attraction = 0.06; // Reduced attraction for more gradual changes (was 0.10)\n            const maxAcceleration = 0.04; // Lower acceleration limit for gentler changes (was 0.06)\n            const finalBias = 0.15 * t; // Bias toward final price as we approach end\n            // Store previous price before updating\n            previousPrice = lastPrice;\n            // Calculate force toward target price with increasing bias toward close as we progress\n            const targetBias = t < 0.8 ? targetPrice : targetPrice * (1 - finalBias) + normalizedClose * finalBias;\n            // Apply a force toward the target\n            const force = (targetBias - lastPrice) * attraction;\n            // Limit the maximum acceleration to prevent abrupt changes\n            const clampedForce = Math.max(-maxAcceleration, Math.min(maxAcceleration, force));\n            // Update velocity with stronger inertia and new force\n            priceVelocity = priceVelocity * inertia + clampedForce;\n            // Calculate the new potential position based on velocity\n            const potentialNewPrice = lastPrice + priceVelocity;\n            // CRITICAL: Limit change to maximum 10% of the day's high-low range per frame\n            // First convert to the absolute scale\n            const maxChangePerFrame = 0.10; // 10% of day's range maximum change\n            const normalizedMaxChange = Math.abs(normalizedHigh - normalizedLow) * maxChangePerFrame;\n            // Limit the change between frames\n            const change = potentialNewPrice - previousPrice;\n            const limitedChange = Math.max(-normalizedMaxChange, Math.min(normalizedMaxChange, change));\n            // Apply the limited change\n            lastPrice = previousPrice + limitedChange;\n            // Ensure we don't exceed extreme values\n            lastPrice = Math.max(normalizedLow * 1.02, Math.min(normalizedHigh * 0.98, lastPrice));\n            return lastPrice;\n        };\n        // Function to get price based on the selected pattern\n        const generatePatternPrice = (tickIndex)=>{\n            const t = tickIndex / (numTicks - 1); // Normalized time 0 to 1\n            let normalizedPrice = 0;\n            switch(patternType){\n                // Bullish patterns\n                case \"steadyUptrend\":\n                    // Gradual, consistent rise with mini-cycles\n                    normalizedPrice = normalizedOpen + t * normalizedClose;\n                    // Add small gentle waves that don't reverse the main trend\n                    normalizedPrice += Math.sin(t * Math.PI * 5) * 0.08 * (1 - t);\n                    // Add smaller random jitters for micro-realism\n                    normalizedPrice += (Math.random() - 0.5) * 0.1 * t;\n                    break;\n                case \"acceleratingRally\":\n                    // Starts slow, accelerates upward\n                    normalizedPrice = normalizedOpen + smootherStep(t) * normalizedClose;\n                    // More volatility as it rises\n                    normalizedPrice += (Math.random() - 0.4) * 0.3 * t;\n                    break;\n                case \"buyingClimax\":\n                    // Rapid rise to climax then slight pullback\n                    if (t < 0.7) {\n                        normalizedPrice = normalizedOpen + t / 0.7 * 1.1 * normalizedClose;\n                    } else {\n                        normalizedPrice = normalizedOpen + (1.1 - 0.2 * ((t - 0.7) / 0.3)) * normalizedClose;\n                    }\n                    normalizedPrice += (Math.random() - 0.5) * 0.25;\n                    break;\n                case \"morningRun\":\n                    // Early strength then consolidation\n                    if (t < 0.4) {\n                        normalizedPrice = normalizedOpen + t / 0.4 * normalizedHigh;\n                    } else {\n                        // Fade from high toward close\n                        normalizedPrice = normalizedHigh - (t - 0.4) * (normalizedHigh - normalizedClose) / 0.6;\n                    }\n                    normalizedPrice += (Math.random() - 0.5) * 0.2;\n                    break;\n                case \"supportBounce\":\n                    // Drops to support then bounces strongly\n                    if (t < 0.3) {\n                        normalizedPrice = normalizedOpen - t * (normalizedOpen - normalizedLow) / 0.3;\n                    } else {\n                        normalizedPrice = normalizedLow + (t - 0.3) * (normalizedClose - normalizedLow) / 0.7;\n                    }\n                    normalizedPrice += (Math.random() - 0.5) * 0.15;\n                    break;\n                case \"vRecovery\":\n                    // V-shaped recovery\n                    if (t < 0.5) {\n                        normalizedPrice = normalizedOpen - t * (normalizedOpen - normalizedLow) / 0.5;\n                    } else {\n                        normalizedPrice = normalizedLow + (t - 0.5) * (normalizedClose - normalizedLow) / 0.5;\n                    }\n                    normalizedPrice += (Math.random() - 0.5) * 0.1;\n                    break;\n                // Bearish patterns\n                case \"steadyDowntrend\":\n                    // Gradual, consistent decline\n                    normalizedPrice = normalizedOpen + t * normalizedClose;\n                    // Add small random jitters for realism\n                    normalizedPrice += (Math.random() - 0.5) * 0.2 * t;\n                    break;\n                case \"acceleratingDrops\":\n                    // Starts slow, accelerates downward\n                    normalizedPrice = normalizedOpen + smootherStep(t) * normalizedClose;\n                    // More volatility as it falls\n                    normalizedPrice += (Math.random() - 0.6) * 0.3 * t;\n                    break;\n                case \"sellingPanic\":\n                    // Gradual then panic selling\n                    if (t < 0.5) {\n                        normalizedPrice = normalizedOpen + t * 0.3 * normalizedClose;\n                    } else {\n                        normalizedPrice = normalizedOpen + (0.3 + 0.7 * (t - 0.5) / 0.5) * normalizedClose;\n                    }\n                    normalizedPrice += (Math.random() - 0.5) * 0.25 * t;\n                    break;\n                case \"resistanceFailure\":\n                    // Tests resistance then fails\n                    if (t < 0.3) {\n                        normalizedPrice = normalizedOpen + t * (normalizedHigh - normalizedOpen) / 0.3;\n                    } else {\n                        normalizedPrice = normalizedHigh + (t - 0.3) * (normalizedClose - normalizedHigh) / 0.7;\n                    }\n                    normalizedPrice += (Math.random() - 0.5) * 0.15;\n                    break;\n                case \"failedRally\":\n                    // Attempts rally but fails\n                    if (t < 0.4) {\n                        normalizedPrice = normalizedOpen + smoothStep(t / 0.4) * 0.5 * normalizedHigh;\n                    } else if (t < 0.6) {\n                        normalizedPrice = normalizedOpen + 0.5 * normalizedHigh - (t - 0.4) * 0.2 * normalizedHigh / 0.2;\n                    } else {\n                        normalizedPrice = normalizedOpen + 0.3 * normalizedHigh + (t - 0.6) * (normalizedClose - normalizedOpen - 0.3 * normalizedHigh) / 0.4;\n                    }\n                    normalizedPrice += (Math.random() - 0.5) * 0.2;\n                    break;\n                // Consolidation patterns (often doji candles)\n                case \"consolidation\":\n                    // Price moves in a tight range\n                    normalizedPrice = normalizedOpen + (Math.random() - 0.5) * 0.6 * range / (high - low);\n                    // Drift toward close over time\n                    normalizedPrice += t * (normalizedClose - normalizedOpen) * 0.7;\n                    break;\n                case \"volatileRange\":\n                    // Volatile but range-bound\n                    normalizedPrice = normalizedOpen + Math.sin(t * Math.PI * 3) * 0.4 * range / (high - low);\n                    // Drift toward close\n                    normalizedPrice += t * (normalizedClose - normalizedOpen);\n                    normalizedPrice += (Math.random() - 0.5) * 0.3;\n                    break;\n                case \"testingLevels\":\n                    // Tests both high and low levels but closes near open\n                    if (t < 0.3) {\n                        normalizedPrice = normalizedOpen + t * (normalizedHigh - normalizedOpen) / 0.3 * 0.8;\n                    } else if (t < 0.7) {\n                        normalizedPrice = normalizedOpen + 0.8 * normalizedHigh - (t - 0.3) * (0.8 * normalizedHigh + Math.abs(normalizedLow)) / 0.4;\n                    } else {\n                        normalizedPrice = normalizedOpen - Math.abs(normalizedLow) * 0.8 + (t - 0.7) * (normalizedClose - normalizedOpen + Math.abs(normalizedLow) * 0.8) / 0.3;\n                    }\n                    normalizedPrice += (Math.random() - 0.5) * 0.15;\n                    break;\n                // Default to a simple random walk\n                default:\n                    normalizedPrice = normalizedOpen + t * (normalizedClose - normalizedOpen);\n                    normalizedPrice += (Math.random() - 0.5) * 0.3;\n            }\n            // Convert normalized price back to actual price\n            let actualPrice = open + normalizedPrice * range;\n            // Ensure we stay within bounds\n            actualPrice = Math.min(high, Math.max(low, actualPrice));\n            return actualPrice;\n        };\n        // Generate tick data with momentum system for more gradual, continuous price evolution\n        // Reset momentum system before starting\n        priceVelocity = 0;\n        lastPrice = normalizedOpen;\n        for(let i = 0; i < numTicks; i++){\n            // Calculate time based on position in the day\n            const timestamp = openTime + Math.floor((closeTime - openTime) * (i / (numTicks - 1)));\n            const t = i / (numTicks - 1); // Normalized time 0 to 1\n            // Get raw target price from pattern\n            const rawPatternPrice = generatePatternPrice(i);\n            // For critical points, use exact values\n            if (i === 0) {\n                // First tick is always open\n                tickData.push({\n                    price: open,\n                    timestamp\n                });\n                // Reset momentum system for new candle\n                priceVelocity = 0;\n                lastPrice = normalizedOpen;\n                previousPrice = normalizedOpen;\n            } else if (i === numTicks - 1) {\n                // Last tick is always close\n                tickData.push({\n                    price: close,\n                    timestamp\n                });\n            } else {\n                // Convert normalized pattern price back to the normalized scale for momentum\n                const normalizedTarget = (rawPatternPrice - open) / range;\n                // Apply enhanced momentum with strict limits on per-frame changes\n                // This ensures extremely gradual and continuous price evolution\n                const momentumPrice = applyMomentum(normalizedTarget, t);\n                // Convert back to actual price\n                const smoothedPrice = open + momentumPrice * range;\n                // Add to tick data\n                tickData.push({\n                    price: smoothedPrice,\n                    timestamp\n                });\n                // Verify the change between this and previous frame (for debugging)\n                if (i > 1) {\n                    const prevPrice = tickData[i - 1].price;\n                    const currentPrice = smoothedPrice;\n                    const actualChange = Math.abs(currentPrice - prevPrice);\n                    const maxAllowedChange = range * 0.10; // 10% of day's range\n                    // Log if we exceed the limit (shouldn't happen with our limiter)\n                    if (actualChange > maxAllowedChange) {\n                        console.log(\"Warning: Price change of \".concat(actualChange, \" exceeds \").concat(maxAllowedChange, \" (\").concat(actualChange / range * 100, \"% of range)\"));\n                    }\n                }\n            }\n        }\n        // Make sure the first and last ticks match open and close exactly\n        if (tickData.length > 0) {\n            tickData[0].price = open;\n            tickData[tickData.length - 1].price = close;\n        }\n        // Ensure high and low are properly represented\n        // Find lowest and highest points (excluding first and last points which are fixed)\n        let lowestTickIndex = 0;\n        let highestTickIndex = 0;\n        let lowestValue = Number.MAX_VALUE;\n        let highestValue = Number.MIN_VALUE;\n        // Find the natural low and high points (where the curve would naturally go lowest/highest)\n        for(let i = 1; i < tickData.length - 1; i++){\n            if (tickData[i].price < lowestValue) {\n                lowestValue = tickData[i].price;\n                lowestTickIndex = i;\n            }\n            if (tickData[i].price > highestValue) {\n                highestValue = tickData[i].price;\n                highestTickIndex = i;\n            }\n        }\n        // Set these points to match the exact low and high\n        // This preserves the natural rhythm of the price action\n        if (lowestTickIndex > 0 && lowestTickIndex < tickData.length - 1) {\n            tickData[lowestTickIndex].price = low;\n        }\n        if (highestTickIndex > 0 && highestTickIndex < tickData.length - 1) {\n            tickData[highestTickIndex].price = high;\n        }\n        // Track these ticks to preserve them during smoothing\n        const lowestTick = tickData[lowestTickIndex];\n        const highestTick = tickData[highestTickIndex];\n        // Function to apply smoothing to the price transitions - define before using\n        const smoothPriceTransitions = (priceData)=>{\n            if (priceData.length < 5) return; // Not enough points to smooth\n            // 1. Preserve key points that must stay fixed\n            const keyPoints = [\n                {\n                    index: 0,\n                    price: open\n                },\n                {\n                    index: priceData.length - 1,\n                    price: close\n                },\n                {\n                    index: lowestTick === priceData[0] || lowestTick === priceData[priceData.length - 1] ? Math.floor(priceData.length * 0.3) : priceData.indexOf(lowestTick),\n                    price: low\n                },\n                {\n                    index: highestTick === priceData[0] || highestTick === priceData[priceData.length - 1] ? Math.floor(priceData.length * 0.7) : priceData.indexOf(highestTick),\n                    price: high\n                } // High price\n            ];\n            // 2. Sort key points by index for proper interpolation\n            keyPoints.sort((a, b)=>a.index - b.index);\n            // 3. Filter out any duplicate indices\n            const uniqueKeyPoints = keyPoints.filter((point, index, self)=>index === 0 || point.index !== self[index - 1].index);\n            // Apply a double-pass smoothing process\n            // First pass: Apply Catmull-Rom spline interpolation between key points\n            for(let i = 0; i < uniqueKeyPoints.length - 1; i++){\n                const start = uniqueKeyPoints[i];\n                const end = uniqueKeyPoints[i + 1];\n                // Skip if points are adjacent\n                if (end.index - start.index <= 1) continue;\n                // Get control points for tension\n                const prevPoint = i > 0 ? uniqueKeyPoints[i - 1] : {\n                    index: start.index - 1,\n                    price: start.price\n                };\n                const nextPoint = i < uniqueKeyPoints.length - 2 ? uniqueKeyPoints[i + 2] : {\n                    index: end.index + 1,\n                    price: end.price\n                };\n                // Apply spline interpolation to points between key points\n                for(let j = start.index + 1; j < end.index; j++){\n                    const t = (j - start.index) / (end.index - start.index);\n                    // Smooth the t value for more natural easing\n                    const smoothedT = easeInOutCubic(t);\n                    // Catmull-Rom interpolation with tension\n                    const tension = 0.3; // Lower tension (0.3) for smoother, more gradual curves\n                    // Calculate intermediate points with Catmull-Rom\n                    const t0 = 0;\n                    const t1 = t0 + Math.sqrt(Math.pow(prevPoint.price - start.price, 2));\n                    const t2 = t1 + Math.sqrt(Math.pow(start.price - end.price, 2));\n                    const t3 = t2 + Math.sqrt(Math.pow(end.price - nextPoint.price, 2));\n                    const t1mk = 1 - tension;\n                    const t2mk = 1 - tension;\n                    // Adjusted t value for better control over the curve\n                    const tNorm = smoothedT * (t2 - t1) + t1;\n                    // Compute coefficients\n                    const a1 = t1mk * (tNorm - t0) / (t1 - t0) * start.price + t2mk * (t1 - tNorm) / (t1 - t0) * prevPoint.price;\n                    const a2 = t1mk * (t2 - tNorm) / (t2 - t1) * end.price + t2mk * (tNorm - t1) / (t2 - t1) * start.price;\n                    const a3 = t1mk * (t3 - tNorm) / (t3 - t2) * nextPoint.price + t2mk * (tNorm - t2) / (t3 - t2) * end.price;\n                    // Combine coefficients for final value with additional micro-volatility\n                    const b1 = t1mk * (tNorm - t0) / (t2 - t0) * a2 + t2mk * (t2 - tNorm) / (t2 - t0) * a1;\n                    const b2 = t1mk * (t3 - tNorm) / (t3 - t1) * a3 + t2mk * (tNorm - t1) / (t3 - t1) * a2;\n                    let interpolatedPrice = t1mk * (tNorm - t1) / (t2 - t1) * b2 + t2mk * (t2 - tNorm) / (t2 - t1) * b1;\n                    // Add directionally-biased micro-volatility that favors continuations\n                    // Calculate the gradient (trend direction) of the curve\n                    const gradientMagnitude = Math.abs(end.price - start.price) / (end.index - start.index);\n                    const trendDirection = Math.sign(end.price - start.price); // +1 for up, -1 for down\n                    // Inverse relationship - more gradient = less volatility\n                    const volatilityFactor = 0.0002 / (gradientMagnitude + 0.0001);\n                    // Biased random noise that's more likely to continue in current direction\n                    // Random noise but with a bias in the direction of the current trend\n                    const biasedRandom = (Math.random() - 0.4) * trendDirection;\n                    const microVolatility = biasedRandom * range * Math.min(Math.max(volatilityFactor, 0.0001), 0.0003);\n                    interpolatedPrice += microVolatility;\n                    // Ensure we stay within high/low bounds\n                    interpolatedPrice = Math.min(high, Math.max(low, interpolatedPrice));\n                    // Update the price data\n                    priceData[j].price = interpolatedPrice;\n                }\n            }\n            // Apply a second pass with moving average smoothing\n            const windowSize = Math.max(3, Math.floor(priceData.length / 20)); // Adaptive window size\n            const smoothedPrices = [\n                ...priceData.map((p)=>p.price)\n            ]; // Copy original prices\n            // Apply moving average smoothing except at critical points\n            for(let i = 0; i < priceData.length; i++){\n                // Skip the key points (open, close, high, low)\n                if (i === 0 || i === priceData.length - 1 || priceData[i] === lowestTick || priceData[i] === highestTick) {\n                    continue;\n                }\n                // Calculate window boundaries\n                const windowStart = Math.max(0, i - Math.floor(windowSize / 2));\n                const windowEnd = Math.min(priceData.length - 1, i + Math.floor(windowSize / 2));\n                // Calculate weighted moving average\n                let totalWeight = 0;\n                let weightedSum = 0;\n                for(let j = windowStart; j <= windowEnd; j++){\n                    // Gaussian-like weight - more weight to center points\n                    const distance = Math.abs(j - i);\n                    const weight = Math.exp(-(distance * distance) / (windowSize / 2));\n                    weightedSum += smoothedPrices[j] * weight;\n                    totalWeight += weight;\n                }\n                // Update with weighted average\n                if (totalWeight > 0) {\n                    // Roll back some of the extreme smoothing for more natural price evolution\n                    const blendFactor = 0.65; // 65% smoothed, 35% original - better balance\n                    priceData[i].price = blendFactor * (weightedSum / totalWeight) + (1 - blendFactor) * priceData[i].price;\n                }\n            }\n            // 5. Ensure a final pass to maintain OHLC values exactly\n            priceData[0].price = open;\n            priceData[priceData.length - 1].price = close;\n            lowestTick.price = low;\n            highestTick.price = high;\n            // Final micro-adjustments to ensure continuous first derivatives (no sharp changes)\n            for(let i = 1; i < priceData.length - 1; i++){\n                const prev = priceData[i - 1].price;\n                const current = priceData[i].price;\n                const next = priceData[i + 1].price;\n                // If there's a sudden direction change, smooth it out\n                if (current > prev && current > next || current < prev && current < next) {\n                    // How extreme is the turning point?\n                    const sharpness = Math.abs(current - prev - (next - current)) / range;\n                    // Less aggressive smoothing of sharp points to preserve some market characteristics\n                    if (sharpness > 0.01) {\n                        // Blend with average of neighbors\n                        const targetValue = (prev + next) / 2;\n                        const blendFactor = Math.min(0.5, sharpness * 10); // Less aggressive: max 50% blend\n                        // Only apply if it doesn't violate high/low constraints\n                        const newValue = current * (1 - blendFactor) + targetValue * blendFactor;\n                        if (newValue >= low && newValue <= high) {\n                            priceData[i].price = newValue;\n                        }\n                    }\n                }\n            }\n        };\n        // Apply multi-pass smoothing for extraordinary smoothness\n        // First pass - basic smoothing\n        smoothPriceTransitions(tickData);\n        // Second pass - fine tune the curve (we can do this because our function preserves OHLC values)\n        smoothPriceTransitions(tickData);\n        // Apply Bezier smoothing as a final touch\n        const bezierSmooth = (priceData)=>{\n            if (priceData.length < 5) return;\n            const tempPrices = [\n                ...priceData.map((p)=>p.price)\n            ];\n            // Use one-dimensional Bezier smoothing on small segments\n            for(let i = 2; i < priceData.length - 2; i++){\n                // Skip key points (open, close, high, low)\n                if (i === 0 || i === priceData.length - 1 || priceData[i].price === low || priceData[i].price === high) {\n                    continue;\n                }\n                // Control points\n                const p0 = tempPrices[i - 2];\n                const p1 = tempPrices[i - 1];\n                const p2 = tempPrices[i];\n                const p3 = tempPrices[i + 1];\n                const p4 = tempPrices[i + 2];\n                // Calculate Bezier control points\n                const t = 0.5; // Center position\n                // De Casteljau's algorithm - 5 point Bezier evaluation at t\n                const q0 = p0 * (1 - t) + p1 * t;\n                const q1 = p1 * (1 - t) + p2 * t;\n                const q2 = p2 * (1 - t) + p3 * t;\n                const q3 = p3 * (1 - t) + p4 * t;\n                const r0 = q0 * (1 - t) + q1 * t;\n                const r1 = q1 * (1 - t) + q2 * t;\n                const r2 = q2 * (1 - t) + q3 * t;\n                const s0 = r0 * (1 - t) + r1 * t;\n                const s1 = r1 * (1 - t) + r2 * t;\n                // Final point on the Bezier curve\n                const bezierPoint = s0 * (1 - t) + s1 * t;\n                // Subtle blend with original - apply only 30% of the Bezier smoothing\n                const blendFactor = 0.3;\n                priceData[i].price = priceData[i].price * (1 - blendFactor) + bezierPoint * blendFactor;\n            }\n        };\n        // Apply Bezier smoothing\n        bezierSmooth(tickData);\n        return tickData;\n    };\n    // Step 5: Render full graph with no visible candles\n    const initializeEmptyChart = (metadata)=>{\n        setVisibleDataPoints(metadata.sortedData.map((point)=>({\n                ...point,\n                opacity: 0 // All candles hidden but positioned correctly\n            })));\n        setChartInitialized(true);\n    };\n    // Step 6: Start animation to add candles chronologically with realistic tick updates\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        // Only start animation if playing is true and chart is initialized\n        if (isPlaying && chartMetadata && chartInitialized) {\n            // Reset animation state\n            currentIndexRef.current = -1;\n            // Animation speed: about 0.75 seconds per candle with a total cap\n            const totalCandles = chartMetadata.sortedData.length;\n            const baseDuration = Math.min(totalCandles * 750, 30000); // Faster animation, cap at 30 seconds\n            const speedFactor = playbackSpeed / 100;\n            const candleIntervalStep = baseDuration / totalCandles / speedFactor;\n            // Set the animation to exactly 90 frames per second\n            const fps = 90; // 90 frames per second\n            const frameDuration = 1000 / fps; // milliseconds per frame (11.11ms)\n            // Calculate number of frames per candle based on the desired candle duration\n            // Reduce the number of frames per candle to speed up the animation\n            const framesPerCandle = Math.round(candleIntervalStep / frameDuration);\n            // Ensure we're using the exact frame duration for perfect 90fps\n            const tickIntervalStep = frameDuration; // exactly 11.11ms per frame\n            const ticksPerCandle = Math.max(30, Math.min(framesPerCandle, 60)); // Cap frames between 30-60 for consistent speed\n            console.log(\"Starting animation: \".concat(totalCandles, \" candles, \").concat(candleIntervalStep, \"ms per candle, \").concat(framesPerCandle, \" frames per candle, \").concat(tickIntervalStep, \"ms per frame (\").concat(fps, \"fps)\"));\n            // Track which candle we're currently animating and which tick within that candle\n            // Using refs to ensure animation state persists between renders\n            let currentActiveCandles = [];\n            // Reset animation counters when starting a new animation (but not when restarting animation)\n            if (currentIndexRef.current === -1) {\n                currentCandleIndexRef.current = 0;\n                currentTickIndexRef.current = 0;\n            }\n            // Initialize animation state - first candle with its first tick\n            if (chartMetadata.sortedData.length > 0) {\n                // Only initialize the data points if we're starting a new animation\n                if (currentIndexRef.current === -1) {\n                    const initialDataPoints = chartMetadata.sortedData.map((point, index)=>{\n                        if (index === 0) {\n                            var _point_tickData;\n                            // First candle is visible with its first tick\n                            const firstTick = (_point_tickData = point.tickData) === null || _point_tickData === void 0 ? void 0 : _point_tickData[0];\n                            return {\n                                ...point,\n                                opacity: 1,\n                                // Start with open values\n                                open: (firstTick === null || firstTick === void 0 ? void 0 : firstTick.price) || point.open,\n                                high: (firstTick === null || firstTick === void 0 ? void 0 : firstTick.price) || point.open,\n                                low: (firstTick === null || firstTick === void 0 ? void 0 : firstTick.price) || point.open,\n                                close: (firstTick === null || firstTick === void 0 ? void 0 : firstTick.price) || point.open,\n                                currentTick: 0\n                            };\n                        }\n                        return {\n                            ...point,\n                            opacity: 0\n                        };\n                    });\n                    currentActiveCandles = initialDataPoints;\n                    setVisibleDataPoints(initialDataPoints);\n                }\n            }\n            // Function to update the current candle with the next tick\n            const updateActiveCandleWithTick = ()=>{\n                // Use refs to ensure animation state is maintained\n                if (currentCandleIndexRef.current >= chartMetadata.sortedData.length) {\n                    return false; // Animation complete\n                }\n                const currentCandle = chartMetadata.sortedData[currentCandleIndexRef.current];\n                const tickData = currentCandle.tickData || [];\n                // If we've shown all ticks for this candle, move to the next candle\n                if (currentTickIndexRef.current >= ticksPerCandle) {\n                    var _nextCandle_tickData;\n                    // Reset tick index and move to next candle\n                    currentTickIndexRef.current = 0;\n                    currentCandleIndexRef.current++;\n                    // If we're out of candles, animation is complete\n                    if (currentCandleIndexRef.current >= chartMetadata.sortedData.length) {\n                        return false; // Animation complete\n                    }\n                    // Make the next candle visible with its first tick\n                    const nextCandle = chartMetadata.sortedData[currentCandleIndexRef.current];\n                    const firstTick = (_nextCandle_tickData = nextCandle.tickData) === null || _nextCandle_tickData === void 0 ? void 0 : _nextCandle_tickData[0];\n                    // Update all active candles\n                    currentActiveCandles = chartMetadata.sortedData.map((point, index)=>{\n                        if (index < currentCandleIndexRef.current) {\n                            // Previous candles are fully formed\n                            return {\n                                ...point,\n                                opacity: 1\n                            };\n                        } else if (index === currentCandleIndexRef.current) {\n                            // New candle starts with open values\n                            return {\n                                ...point,\n                                opacity: 1,\n                                // Start with open values\n                                open: (firstTick === null || firstTick === void 0 ? void 0 : firstTick.price) || point.open,\n                                high: (firstTick === null || firstTick === void 0 ? void 0 : firstTick.price) || point.open,\n                                low: (firstTick === null || firstTick === void 0 ? void 0 : firstTick.price) || point.open,\n                                close: (firstTick === null || firstTick === void 0 ? void 0 : firstTick.price) || point.open,\n                                currentTick: 0\n                            };\n                        }\n                        return {\n                            ...point,\n                            opacity: 0\n                        };\n                    });\n                    setVisibleDataPoints(currentActiveCandles);\n                    return true; // Continue animation\n                }\n                // Calculate tick index in the full tick data array\n                // Use a precise linear mapping to ensure smooth 90fps animation\n                // We want to map our 90fps frames to the available tick data\n                const normalizedPos = currentTickIndexRef.current / ticksPerCandle; // 0 to 1\n                // Use an even gentler easing to preserve strong inertia\n                // The smoother timing curve means less abrupt visual changes between frames\n                const easedPos = normalizedPos < 0.5 ? 2 * Math.pow(normalizedPos, 1.5) : 1 - 2 * Math.pow(1 - normalizedPos, 1.5);\n                const actualTickIndex = Math.floor(easedPos * (tickData.length - 1));\n                if (actualTickIndex >= tickData.length) return true; // Skip to next candle if out of ticks\n                const currentTickData = tickData[actualTickIndex];\n                // Update the active candle with the current tick\n                currentActiveCandles = chartMetadata.sortedData.map((point, index)=>{\n                    if (index < currentCandleIndexRef.current) {\n                        // Previous candles are fully formed and remain unchanged\n                        return {\n                            ...point,\n                            opacity: 1\n                        };\n                    } else if (index === currentCandleIndexRef.current) {\n                        // Current candle updates with the new tick\n                        const originalOpen = chartMetadata.sortedData[currentCandleIndexRef.current].open;\n                        const updatedCandle = {\n                            ...point,\n                            opacity: 1\n                        };\n                        // Keep the original open price\n                        updatedCandle.open = originalOpen;\n                        // Current tick price becomes the close\n                        const tickPrice = (currentTickData === null || currentTickData === void 0 ? void 0 : currentTickData.price) || point.close;\n                        updatedCandle.close = tickPrice;\n                        // Store the current tick price for the tick price line visualization\n                        setCurrentTickPrice(tickPrice);\n                        // Update high and low if necessary\n                        if (actualTickIndex === 0) {\n                            // On first tick, high and low are the same as open\n                            updatedCandle.high = originalOpen;\n                            updatedCandle.low = originalOpen;\n                        } else {\n                            // Otherwise, update high and low if needed\n                            updatedCandle.high = Math.max(updatedCandle.high, tickPrice);\n                            updatedCandle.low = Math.min(updatedCandle.low, tickPrice);\n                        }\n                        return updatedCandle;\n                    }\n                    // Future candles remain hidden\n                    return {\n                        ...point,\n                        opacity: 0\n                    };\n                });\n                // Increment tick counter\n                currentTickIndexRef.current++;\n                // Update the UI\n                setVisibleDataPoints(currentActiveCandles);\n                return true; // Continue animation\n            };\n            // Start the animation loop at exactly 90 FPS (11.11ms per frame)\n            const tickInterval = setInterval(()=>{\n                const continueAnimation = updateActiveCandleWithTick();\n                if (!continueAnimation) {\n                    // Animation complete\n                    clearInterval(tickInterval);\n                    console.log(\"Animation completed\");\n                    // Reset the current tick price\n                    setCurrentTickPrice(null);\n                    // Show all candles in their final state\n                    const finalDataPoints = chartMetadata.sortedData.map((point)=>({\n                            ...point,\n                            opacity: 1 // Make all visible with final OHLC values\n                        }));\n                    setVisibleDataPoints(finalDataPoints);\n                    // Notify parent component\n                    if (onAnimationComplete) {\n                        onAnimationComplete();\n                    }\n                }\n            }, tickIntervalStep);\n            return ()=>{\n                clearInterval(tickInterval);\n                console.log(\"Animation stopped\");\n            };\n        } else if (!isPlaying && chartMetadata) {\n            // When stopping, show all data points in their final state\n            setVisibleDataPoints(chartMetadata.sortedData.map((point)=>({\n                    ...point,\n                    opacity: 1 // Make all visible with final OHLC values\n                })));\n        }\n    }, [\n        isPlaying,\n        chartMetadata,\n        chartInitialized,\n        playbackSpeed\n    ]);\n    // Initialize custom tooltip\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if ( true && !tooltipRef.current) {\n            // Add custom styles for tooltip container\n            const style = document.createElement(\"style\");\n            style.textContent = \"\\n        .stock-chart-tooltip {\\n          position: fixed;\\n          z-index: 10000;\\n          pointer-events: none;\\n          opacity: 0;\\n          transform: translateY(5px);\\n          transition: opacity 0.2s ease, transform 0.2s ease;\\n          background: white;\\n          border-radius: 4px;\\n          box-shadow: 0 2px 10px rgba(0,0,0,0.2);\\n          padding: 10px;\\n          min-width: 250px;\\n          max-width: 300px;\\n        }\\n        .stock-chart-tooltip.active {\\n          opacity: 1;\\n          transform: translateY(0);\\n        }\\n        .news-marker {\\n          cursor: pointer !important;\\n        }\\n      \";\n            document.head.appendChild(style);\n            // Create tooltip container once\n            const tooltipContainer = document.createElement(\"div\");\n            tooltipContainer.className = \"stock-chart-tooltip\";\n            document.body.appendChild(tooltipContainer);\n            tooltipRef.current = tooltipContainer;\n            return ()=>{\n                // Safely remove elements by checking if they still exist in the DOM\n                if (style.parentNode === document.head) {\n                    document.head.removeChild(style);\n                }\n                if (tooltipContainer.parentNode === document.body) {\n                    document.body.removeChild(tooltipContainer);\n                }\n                tooltipRef.current = null;\n            };\n        }\n    }, []);\n    // Update tooltip visibility and position - separated from creation\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        const tooltipContainer = tooltipRef.current;\n        if (!tooltipContainer) return;\n        if (activeTooltip) {\n            tooltipContainer.innerHTML = activeTooltip.content;\n            tooltipContainer.style.left = \"\".concat(activeTooltip.x, \"px\");\n            tooltipContainer.style.top = \"\".concat(activeTooltip.y, \"px\");\n            // Use requestAnimationFrame to avoid layout thrashing\n            requestAnimationFrame(()=>{\n                tooltipContainer.classList.add(\"active\");\n            });\n        } else {\n            tooltipContainer.classList.remove(\"active\");\n        }\n    }, [\n        activeTooltip\n    ]);\n    // Listen for chart marker hover events\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        const handleMarkerMouseOver = (event)=>{\n            const target = event.target;\n            if (target.closest(\".news-marker\")) {\n                var _target_closest;\n                const markerId = (_target_closest = target.closest(\".news-marker\")) === null || _target_closest === void 0 ? void 0 : _target_closest.getAttribute(\"data-markerId\");\n                if (!markerId) return;\n                // Find the matching marker in significantMoves\n                const moveIndex = parseInt(markerId, 10);\n                if (isNaN(moveIndex) || moveIndex < 0 || moveIndex >= significantMoves.length) return;\n                const move = significantMoves[moveIndex];\n                // Generate tooltip content\n                const newsHeadlines = move.news && move.news.length > 0 ? move.news.map((item)=>\"• \".concat(item.title)).join(\"<br>\") : \"No news available\";\n                let eventLabel = \"News Event\";\n                let labelColor = \"#FF4560\";\n                // Determine event type based on price movement\n                if (move.percentageChange > 3) {\n                    eventLabel = \"Major Rally\";\n                    labelColor = \"#00B746\";\n                } else if (move.percentageChange > 1) {\n                    eventLabel = \"Price Rise\";\n                    labelColor = \"#26C281\";\n                } else if (move.percentageChange < -3) {\n                    eventLabel = \"Major Drop\";\n                    labelColor = \"#FF4560\";\n                } else if (move.percentageChange < -1) {\n                    eventLabel = \"Price Drop\";\n                    labelColor = \"#FF9800\";\n                }\n                // Check for specific news types\n                if (move.news && move.news.length > 0) {\n                    const headlines = move.news.map((item)=>item.title.toLowerCase());\n                    if (headlines.some((h)=>h.includes(\"earnings\") || h.includes(\"report\"))) {\n                        eventLabel = \"Earnings\";\n                    } else if (headlines.some((h)=>h.includes(\"acquisition\") || h.includes(\"merger\") || h.includes(\"buys\"))) {\n                        eventLabel = \"M&A News\";\n                    } else if (headlines.some((h)=>h.includes(\"product\") || h.includes(\"launch\") || h.includes(\"announce\"))) {\n                        eventLabel = \"Product News\";\n                    } else if (headlines.some((h)=>h.includes(\"lawsuit\") || h.includes(\"legal\"))) {\n                        eventLabel = \"Legal News\";\n                    }\n                }\n                const tooltipContent = '\\n          <div class=\"news-tooltip\">\\n            <div style=\"font-weight: bold; margin-bottom: 6px; color: '.concat(labelColor, ';\">').concat(eventLabel, '</div>\\n            <div style=\"margin-bottom: 6px;\">\\n              <span style=\"color: ').concat(move.percentageChange >= 0 ? \"#26C281\" : \"#FF4560\", '; font-weight: bold;\">\\n                ').concat(move.percentageChange >= 0 ? \"▲\" : \"▼\", \" \").concat(Math.abs(move.percentageChange).toFixed(2), '%\\n              </span>\\n              <span style=\"color: #666; margin-left: 4px;\">').concat(move.date, '</span>\\n            </div>\\n            <div style=\"border-top: 1px solid #eee; padding-top: 6px; margin-top: 4px;\">\\n              <div style=\"font-weight: bold; margin-bottom: 4px;\">Headlines:</div>\\n              <div style=\"color: #333; max-height: 120px; overflow-y: auto;\">\\n                ').concat(newsHeadlines, \"\\n              </div>\\n            </div>\\n          </div>\\n        \");\n                // Calculate tooltip position\n                const rect = target.getBoundingClientRect();\n                setActiveTooltip({\n                    content: tooltipContent,\n                    x: rect.right + 10,\n                    y: rect.top - 10\n                });\n            }\n        };\n        const handleMarkerMouseOut = (event)=>{\n            const target = event.target;\n            if (target.closest(\".news-marker\")) {\n                setActiveTooltip(null);\n            }\n        };\n        // Use event delegation on chart container to reduce listeners\n        const chartContainer = document.querySelector(\".apexcharts-canvas\");\n        if (chartContainer) {\n            chartContainer.addEventListener(\"mouseover\", handleMarkerMouseOver);\n            chartContainer.addEventListener(\"mouseout\", handleMarkerMouseOut);\n            return ()=>{\n                chartContainer.removeEventListener(\"mouseover\", handleMarkerMouseOver);\n                chartContainer.removeEventListener(\"mouseout\", handleMarkerMouseOut);\n            };\n        }\n    }, [\n        significantMoves\n    ]);\n    // If no data is available, show a loading or empty state\n    if (!(data === null || data === void 0 ? void 0 : data.length)) {\n        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            className: \"bg-white rounded-lg shadow p-4\",\n            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"h-[500px] flex items-center justify-center text-gray-500\",\n                children: \"No data available\"\n            }, void 0, false, {\n                fileName: \"/home/trascastefan/ai-video2/app/components/StockChart.tsx\",\n                lineNumber: 1174,\n                columnNumber: 9\n            }, this)\n        }, void 0, false, {\n            fileName: \"/home/trascastefan/ai-video2/app/components/StockChart.tsx\",\n            lineNumber: 1173,\n            columnNumber: 7\n        }, this);\n    }\n    // Use visibleDataPoints for display which are controlled by the animation\n    const displayData = visibleDataPoints.length > 0 ? visibleDataPoints : [];\n    // Ensure we have valid data before creating the chart\n    if (!(displayData === null || displayData === void 0 ? void 0 : displayData.length)) {\n        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            className: \"bg-white rounded-lg shadow p-4\",\n            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"h-[500px] flex items-center justify-center text-gray-500\",\n                children: \"Loading data...\"\n            }, void 0, false, {\n                fileName: \"/home/trascastefan/ai-video2/app/components/StockChart.tsx\",\n                lineNumber: 1188,\n                columnNumber: 9\n            }, this)\n        }, void 0, false, {\n            fileName: \"/home/trascastefan/ai-video2/app/components/StockChart.tsx\",\n            lineNumber: 1187,\n            columnNumber: 7\n        }, this);\n    }\n    // Validate data points before creating series\n    const validDataPoints = displayData.filter((point)=>point && point.date && typeof point.open === \"number\" && typeof point.high === \"number\" && typeof point.low === \"number\" && typeof point.close === \"number\");\n    if (!validDataPoints.length) {\n        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            className: \"bg-white rounded-lg shadow p-4\",\n            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"h-[500px] flex items-center justify-center text-gray-500\",\n                children: \"Invalid data format\"\n            }, void 0, false, {\n                fileName: \"/home/trascastefan/ai-video2/app/components/StockChart.tsx\",\n                lineNumber: 1208,\n                columnNumber: 9\n            }, this)\n        }, void 0, false, {\n            fileName: \"/home/trascastefan/ai-video2/app/components/StockChart.tsx\",\n            lineNumber: 1207,\n            columnNumber: 7\n        }, this);\n    }\n    // Create annotation points for significant volume dates\n    const annotations = {\n        points: significantMoves.map((move, index)=>{\n            // Add index as marker ID for event handling\n            return {\n                x: new Date(move.date).getTime(),\n                y: move.high,\n                marker: {\n                    size: 10,\n                    fillColor: move.percentageChange >= 0 ? \"#26C281\" : \"#FF4560\",\n                    strokeColor: \"#fff\",\n                    strokeWidth: 2,\n                    shape: \"circle\",\n                    radius: 2,\n                    cssClass: \"news-marker marker-\".concat(index),\n                    dataMarkerId: index.toString()\n                },\n                label: {\n                    borderColor: move.percentageChange >= 0 ? \"#26C281\" : \"#FF4560\",\n                    style: {\n                        color: \"#fff\",\n                        background: move.percentageChange >= 0 ? \"#26C281\" : \"#FF4560\"\n                    },\n                    text: move.percentageChange >= 0 ? \"Event ▲\" : \"Event ▼\",\n                    orientation: \"horizontal\",\n                    offsetY: -15\n                }\n            };\n        })\n    };\n    const chartOptions = {\n        chart: {\n            type: \"candlestick\",\n            height: 500,\n            animations: {\n                enabled: false // Disable animations to prevent flickering\n            },\n            redrawOnParentResize: false,\n            redrawOnWindowResize: false,\n            selection: {\n                enabled: false\n            },\n            events: {\n                mounted: function(chart) {\n                    // Disable ApexCharts animations once the chart is mounted\n                    // to prevent flickering when adding new data points\n                    chart.w.config.chart.animations.enabled = false;\n                }\n            },\n            toolbar: {\n                show: false // Hide the toolbar completely\n            },\n            zoom: {\n                enabled: false // Disable zoom feature\n            }\n        },\n        title: {\n            text: \"\",\n            align: \"left\"\n        },\n        annotations: annotations,\n        tooltip: {\n            enabled: true,\n            shared: false,\n            intersect: true,\n            custom: (param)=>{\n                let { seriesIndex, dataPointIndex, w } = param;\n                // Only apply custom tooltips for candles, not for annotations\n                if (seriesIndex === 0 && dataPointIndex !== -1) {\n                    const o = w.globals.seriesCandleO[0][dataPointIndex];\n                    const h = w.globals.seriesCandleH[0][dataPointIndex];\n                    const l = w.globals.seriesCandleL[0][dataPointIndex];\n                    const c = w.globals.seriesCandleC[0][dataPointIndex];\n                    // Get the original date from series data if available\n                    const seriesData = chartSeries[0].data[dataPointIndex];\n                    // Check if seriesData is an object with originalDate property\n                    const hasOriginalDate = seriesData && typeof seriesData === \"object\" && \"originalDate\" in seriesData;\n                    const originalDate = hasOriginalDate ? seriesData.originalDate : null;\n                    // Format the date nicely for the tooltip\n                    const formattedDate = originalDate ? new Date(originalDate).toLocaleDateString(\"en-US\", {\n                        weekday: \"short\",\n                        year: \"numeric\",\n                        month: \"short\",\n                        day: \"numeric\"\n                    }) : w.globals.categoryLabels[dataPointIndex];\n                    return '<div class=\"apexcharts-tooltip-box apexcharts-tooltip-candlestick\">\\n            <div class=\"font-bold\">'.concat(formattedDate, '</div>\\n            <div>Open: <span class=\"text-gray-800\">').concat(o.toFixed(2), '</span></div>\\n            <div>High: <span class=\"text-gray-800\">').concat(h.toFixed(2), '</span></div>\\n            <div>Low: <span class=\"text-gray-800\">').concat(l.toFixed(2), '</span></div>\\n            <div>Close: <span class=\"text-gray-800\">').concat(c.toFixed(2), \"</span></div>\\n          </div>\");\n                }\n                return undefined;\n            },\n            theme: \"light\"\n        },\n        xaxis: {\n            type: \"category\",\n            categories: validDataPoints.map((point)=>{\n                const date = new Date(point.date);\n                return date.toLocaleDateString(\"en-US\", {\n                    month: \"short\",\n                    day: \"numeric\",\n                    year: date.getFullYear() !== new Date().getFullYear() ? \"numeric\" : undefined\n                });\n            }),\n            position: \"top\",\n            axisTicks: {\n                show: false\n            },\n            axisBorder: {\n                show: false\n            },\n            labels: {\n                show: false\n            },\n            tooltip: {\n                enabled: false\n            },\n            crosshairs: {\n                show: false\n            }\n        },\n        yaxis: {\n            show: false\n        },\n        grid: {\n            show: false\n        },\n        plotOptions: {\n            candlestick: {\n                colors: {\n                    upward: \"#00C176\",\n                    downward: \"#FF4560\" // Brighter red for better visibility\n                },\n                wick: {\n                    useFillColor: true\n                }\n            },\n            bar: {\n                columnWidth: \"70%\" // Slightly wider candles for better visibility\n            }\n        }\n    };\n    // Don't use a hook for the tick price line data, just compute it directly\n    let tickPriceLineData = [];\n    const canShowTickLine = isPlaying && currentIndexRef.current >= 0 && currentTickPrice !== null && chartMetadata !== null;\n    if (canShowTickLine && Array.isArray(data)) {\n        // Create data points for all candles to show a horizontal line at the current tick price\n        tickPriceLineData = data.map((point, idx)=>{\n            // Only show the tick price line for the current candle being animated\n            return idx === currentIndexRef.current ? currentTickPrice : null;\n        });\n    }\n    const chartSeries = [\n        {\n            name: \"\",\n            type: \"candlestick\",\n            data: validDataPoints.map((point)=>{\n                const date = new Date(point.date);\n                // Format the date consistently with the xaxis categories\n                const formattedDate = date.toLocaleDateString(\"en-US\", {\n                    month: \"short\",\n                    day: \"numeric\",\n                    year: date.getFullYear() !== new Date().getFullYear() ? \"numeric\" : undefined\n                });\n                return {\n                    // Using category xaxis, so x value must match the category\n                    x: formattedDate,\n                    y: [\n                        point.open,\n                        point.high,\n                        point.low,\n                        point.close\n                    ],\n                    fillColor: point.opacity === 0 ? \"transparent\" : undefined,\n                    strokeColor: point.opacity === 0 ? \"transparent\" : undefined,\n                    // Store the original date for tooltips\n                    originalDate: point.date\n                };\n            })\n        },\n        // Add a line series to show the current tick price movement\n        ...canShowTickLine ? [\n            {\n                name: \"\",\n                type: \"line\",\n                data: tickPriceLineData,\n                color: \"#FFA500\",\n                dashStyle: \"dash\",\n                lineWidth: 2,\n                marker: {\n                    size: 5,\n                    fillColor: \"#FFA500\",\n                    strokeColor: \"#fff\",\n                    strokeWidth: 2\n                }\n            }\n        ] : []\n    ];\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"bg-white rounded-lg shadow p-4\",\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_IPhoneMockup__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"flex flex-col h-full\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"h-1/2 relative\",\n                        children: [\n                             true && validDataPoints.length > 0 && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(Chart, {\n                                options: {\n                                    ...chartOptions,\n                                    chart: {\n                                        ...chartOptions.chart,\n                                        height: \"100%\",\n                                        toolbar: {\n                                            show: false\n                                        },\n                                        background: \"#f8f9fa\"\n                                    },\n                                    title: {\n                                        text: \"\",\n                                        style: {\n                                            fontSize: \"0px\" // Make font size 0 to ensure it doesn't show\n                                        }\n                                    },\n                                    xaxis: {\n                                        ...chartOptions.xaxis,\n                                        labels: {\n                                            ...(_chartOptions_xaxis = chartOptions.xaxis) === null || _chartOptions_xaxis === void 0 ? void 0 : _chartOptions_xaxis.labels,\n                                            style: {\n                                                fontSize: \"8px\",\n                                                colors: \"#333\"\n                                            }\n                                        }\n                                    }\n                                },\n                                series: chartSeries,\n                                type: \"candlestick\",\n                                height: \"100%\"\n                            }, void 0, false, {\n                                fileName: \"/home/trascastefan/ai-video2/app/components/StockChart.tsx\",\n                                lineNumber: 1420,\n                                columnNumber: 15\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"absolute bottom-0 left-0 right-0 flex justify-center items-center pb-2\",\n                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    className: \"relative\",\n                                    children: [\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                            className: \"text-2xl font-bold text-white px-4 py-1 bg-gradient-to-r from-blue-600 to-purple-600 rounded-lg shadow-lg\",\n                                            children: [\n                                                \"$\",\n                                                currentTickPrice ? currentTickPrice.toFixed(2) : ((chartMetadata === null || chartMetadata === void 0 ? void 0 : (_chartMetadata_sortedData_ = chartMetadata.sortedData[0]) === null || _chartMetadata_sortedData_ === void 0 ? void 0 : _chartMetadata_sortedData_.open) || 0).toFixed(2)\n                                            ]\n                                        }, void 0, true, {\n                                            fileName: \"/home/trascastefan/ai-video2/app/components/StockChart.tsx\",\n                                            lineNumber: 1457,\n                                            columnNumber: 17\n                                        }, this),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                            className: \"absolute -inset-1 rounded-lg bg-white opacity-20 blur-sm\"\n                                        }, void 0, false, {\n                                            fileName: \"/home/trascastefan/ai-video2/app/components/StockChart.tsx\",\n                                            lineNumber: 1460,\n                                            columnNumber: 17\n                                        }, this),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                            className: \"absolute -inset-0.5 rounded-lg border-2 border-white\"\n                                        }, void 0, false, {\n                                            fileName: \"/home/trascastefan/ai-video2/app/components/StockChart.tsx\",\n                                            lineNumber: 1461,\n                                            columnNumber: 17\n                                        }, this)\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"/home/trascastefan/ai-video2/app/components/StockChart.tsx\",\n                                    lineNumber: 1456,\n                                    columnNumber: 15\n                                }, this)\n                            }, void 0, false, {\n                                fileName: \"/home/trascastefan/ai-video2/app/components/StockChart.tsx\",\n                                lineNumber: 1455,\n                                columnNumber: 13\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/home/trascastefan/ai-video2/app/components/StockChart.tsx\",\n                        lineNumber: 1418,\n                        columnNumber: 11\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"h-[2px] bg-gray-300 w-full shadow-sm\"\n                    }, void 0, false, {\n                        fileName: \"/home/trascastefan/ai-video2/app/components/StockChart.tsx\",\n                        lineNumber: 1467,\n                        columnNumber: 11\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"h-1/2 flex flex-col justify-between p-4 bg-gray-50\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"mb-4\",\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h3\", {\n                                        className: \"text-lg font-bold mb-2\",\n                                        children: \"Stock Analysis\"\n                                    }, void 0, false, {\n                                        fileName: \"/home/trascastefan/ai-video2/app/components/StockChart.tsx\",\n                                        lineNumber: 1473,\n                                        columnNumber: 15\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        className: \"text-sm text-gray-600 mb-1\",\n                                        children: \"Current Price\"\n                                    }, void 0, false, {\n                                        fileName: \"/home/trascastefan/ai-video2/app/components/StockChart.tsx\",\n                                        lineNumber: 1474,\n                                        columnNumber: 15\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        className: \"text-3xl font-bold text-blue-600\",\n                                        children: [\n                                            \"$\",\n                                            currentTickPrice ? currentTickPrice.toFixed(2) : ((chartMetadata === null || chartMetadata === void 0 ? void 0 : (_chartMetadata_sortedData_1 = chartMetadata.sortedData[0]) === null || _chartMetadata_sortedData_1 === void 0 ? void 0 : _chartMetadata_sortedData_1.open) || 0).toFixed(2)\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"/home/trascastefan/ai-video2/app/components/StockChart.tsx\",\n                                        lineNumber: 1475,\n                                        columnNumber: 15\n                                    }, this)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"/home/trascastefan/ai-video2/app/components/StockChart.tsx\",\n                                lineNumber: 1472,\n                                columnNumber: 13\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"grid grid-cols-2 gap-4\",\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        className: \"bg-white p-3 rounded-lg shadow-sm\",\n                                        children: [\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                className: \"text-xs text-gray-500\",\n                                                children: \"Volume\"\n                                            }, void 0, false, {\n                                                fileName: \"/home/trascastefan/ai-video2/app/components/StockChart.tsx\",\n                                                lineNumber: 1483,\n                                                columnNumber: 17\n                                            }, this),\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                className: \"text-sm font-semibold\",\n                                                children: (chartMetadata === null || chartMetadata === void 0 ? void 0 : (_chartMetadata_sortedData_2 = chartMetadata.sortedData[0]) === null || _chartMetadata_sortedData_2 === void 0 ? void 0 : _chartMetadata_sortedData_2.volume) ? formatVolume(chartMetadata.sortedData[0].volume) : \"N/A\"\n                                            }, void 0, false, {\n                                                fileName: \"/home/trascastefan/ai-video2/app/components/StockChart.tsx\",\n                                                lineNumber: 1484,\n                                                columnNumber: 17\n                                            }, this)\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"/home/trascastefan/ai-video2/app/components/StockChart.tsx\",\n                                        lineNumber: 1482,\n                                        columnNumber: 15\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        className: \"bg-white p-3 rounded-lg shadow-sm\",\n                                        children: [\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                className: \"text-xs text-gray-500\",\n                                                children: \"Change\"\n                                            }, void 0, false, {\n                                                fileName: \"/home/trascastefan/ai-video2/app/components/StockChart.tsx\",\n                                                lineNumber: 1490,\n                                                columnNumber: 17\n                                            }, this),\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                className: \"text-sm font-semibold \".concat(((chartMetadata === null || chartMetadata === void 0 ? void 0 : (_chartMetadata_sortedData_3 = chartMetadata.sortedData[0]) === null || _chartMetadata_sortedData_3 === void 0 ? void 0 : _chartMetadata_sortedData_3.percentageChange) || 0) >= 0 ? \"text-green-600\" : \"text-red-600\"),\n                                                children: (chartMetadata === null || chartMetadata === void 0 ? void 0 : (_chartMetadata_sortedData_4 = chartMetadata.sortedData[0]) === null || _chartMetadata_sortedData_4 === void 0 ? void 0 : _chartMetadata_sortedData_4.percentageChange) ? \"\".concat(chartMetadata.sortedData[0].percentageChange >= 0 ? \"+\" : \"\").concat(chartMetadata.sortedData[0].percentageChange.toFixed(2), \"%\") : \"N/A\"\n                                            }, void 0, false, {\n                                                fileName: \"/home/trascastefan/ai-video2/app/components/StockChart.tsx\",\n                                                lineNumber: 1491,\n                                                columnNumber: 17\n                                            }, this)\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"/home/trascastefan/ai-video2/app/components/StockChart.tsx\",\n                                        lineNumber: 1489,\n                                        columnNumber: 15\n                                    }, this)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"/home/trascastefan/ai-video2/app/components/StockChart.tsx\",\n                                lineNumber: 1481,\n                                columnNumber: 13\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/home/trascastefan/ai-video2/app/components/StockChart.tsx\",\n                        lineNumber: 1470,\n                        columnNumber: 11\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"/home/trascastefan/ai-video2/app/components/StockChart.tsx\",\n                lineNumber: 1416,\n                columnNumber: 9\n            }, this)\n        }, void 0, false, {\n            fileName: \"/home/trascastefan/ai-video2/app/components/StockChart.tsx\",\n            lineNumber: 1415,\n            columnNumber: 7\n        }, this)\n    }, void 0, false, {\n        fileName: \"/home/trascastefan/ai-video2/app/components/StockChart.tsx\",\n        lineNumber: 1414,\n        columnNumber: 5\n    }, this);\n}\n_s(StockChart, \"BYpb1TgZw3en2xd96I90yhBYk38=\");\n_c1 = StockChart;\nvar _c, _c1;\n$RefreshReg$(_c, \"Chart\");\n$RefreshReg$(_c1, \"StockChart\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/components/StockChart.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./app/components/StockSelector.tsx":
/*!******************************************!*\
  !*** ./app/components/StockSelector.tsx ***!
  \******************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ StockSelector; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var use_debounce__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! use-debounce */ \"(app-pages-browser)/./node_modules/use-debounce/dist/index.module.js\");\n/* harmony import */ var _app_utils_cache__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/app/utils/cache */ \"(app-pages-browser)/./app/utils/cache.ts\");\n/* harmony import */ var _app_utils_db__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/app/utils/db */ \"(app-pages-browser)/./app/utils/db.ts\");\n\nvar _s = $RefreshSig$();\n\n\n\n // Import the IndexedDB database\n// Cache for search results\nconst searchCache = new Map();\nfunction StockSelector(param) {\n    let { onSelect } = param;\n    _s();\n    const [search, setSearch] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    const [debouncedSearch] = (0,use_debounce__WEBPACK_IMPORTED_MODULE_4__.useDebounce)(search, 300);\n    const [suggestions, setSuggestions] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [isLoading, setIsLoading] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [isOpen, setIsOpen] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [rateLimited, setRateLimited] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(_app_utils_cache__WEBPACK_IMPORTED_MODULE_2__.isRateLimited);\n    const [recentStocks, setRecentStocks] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    // Effect to check rate limit status\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        setRateLimited(_app_utils_cache__WEBPACK_IMPORTED_MODULE_2__.isRateLimited);\n    }, [\n        _app_utils_cache__WEBPACK_IMPORTED_MODULE_2__.isRateLimited\n    ]);\n    // Load recent stocks from IndexedDB\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        const loadRecentStocks = async ()=>{\n            try {\n                const recent = await _app_utils_db__WEBPACK_IMPORTED_MODULE_3__.stockDB.getRecentStocks(5);\n                setRecentStocks(recent);\n            } catch (error) {\n                console.error(\"Error loading recent stocks:\", error);\n            }\n        };\n        loadRecentStocks();\n    }, []);\n    const fetchSuggestions = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(async (query)=>{\n        // Check cache first\n        const cacheKey = query.toLowerCase();\n        if (searchCache.has(cacheKey)) {\n            return searchCache.get(cacheKey);\n        }\n        // If rate limited, only show cached companies\n        if (rateLimited && !query) {\n            try {\n                // Try to get company profiles from IndexedDB first\n                const profiles = await _app_utils_db__WEBPACK_IMPORTED_MODULE_3__.stockDB.getAllCompanyProfiles();\n                if (profiles.length > 0) {\n                    return profiles.map((profile)=>({\n                            symbol: profile.symbol,\n                            name: profile.name || profile.symbol,\n                            marketCap: profile.marketCap,\n                            sector: profile.sector || \"Unknown\"\n                        }));\n                }\n            } catch (error) {\n                console.error(\"Error getting company profiles from IndexedDB:\", error);\n            }\n            // Fall back to memory cache if IndexedDB fails\n            const cachedCompanies = _app_utils_cache__WEBPACK_IMPORTED_MODULE_2__.companyDataCache.getAll();\n            return cachedCompanies.map((company)=>({\n                    symbol: company.symbol,\n                    name: company.name || company.symbol,\n                    marketCap: 0,\n                    sector: \"Unknown\" // We don't have this info from the cache\n                }));\n        }\n        // If rate limited and query exists, filter cached companies\n        if (rateLimited && query) {\n            try {\n                // Try to get and filter company profiles from IndexedDB first\n                const profiles = await _app_utils_db__WEBPACK_IMPORTED_MODULE_3__.stockDB.getAllCompanyProfiles();\n                if (profiles.length > 0) {\n                    const filteredProfiles = profiles.filter((profile)=>profile.symbol.toLowerCase().includes(query.toLowerCase()) || profile.name && profile.name.toLowerCase().includes(query.toLowerCase()));\n                    return filteredProfiles.map((profile)=>({\n                            symbol: profile.symbol,\n                            name: profile.name,\n                            marketCap: profile.marketCap,\n                            sector: profile.sector || \"Unknown\"\n                        }));\n                }\n            } catch (error) {\n                console.error(\"Error filtering company profiles from IndexedDB:\", error);\n            }\n            // Fall back to memory cache if IndexedDB fails\n            const cachedCompanies = _app_utils_cache__WEBPACK_IMPORTED_MODULE_2__.companyDataCache.getAll();\n            const filteredCompanies = cachedCompanies.filter((company)=>company.symbol.toLowerCase().includes(query.toLowerCase()) || company.name && company.name.toLowerCase().includes(query.toLowerCase()));\n            return filteredCompanies.map((company)=>({\n                    symbol: company.symbol,\n                    name: company.name || company.symbol,\n                    marketCap: 0,\n                    sector: \"Unknown\"\n                }));\n        }\n        // Not rate limited, proceed with normal API call\n        const response = await fetch(\"/api/search?query=\".concat(encodeURIComponent(query)));\n        if (!response.ok) {\n            throw new Error(\"Failed to fetch suggestions\");\n        }\n        const data = await response.json();\n        // Cache the results\n        searchCache.set(cacheKey, data);\n        return data;\n    }, [\n        rateLimited\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        const getSuggestions = async ()=>{\n            if (!debouncedSearch && !rateLimited) {\n                setSuggestions([]);\n                return;\n            }\n            setIsLoading(true);\n            try {\n                const data = await fetchSuggestions(debouncedSearch);\n                setSuggestions(data);\n            } catch (error) {\n                console.error(\"Error fetching suggestions:\", error);\n                setSuggestions([]);\n            } finally{\n                setIsLoading(false);\n            }\n        };\n        getSuggestions();\n    }, [\n        debouncedSearch,\n        fetchSuggestions,\n        rateLimited\n    ]);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"relative w-full\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                type: \"text\",\n                className: \"w-full px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\",\n                placeholder: rateLimited ? \"Search recently used stocks...\" : \"Search for a company or ticker...\",\n                value: search,\n                onChange: (e)=>{\n                    setSearch(e.target.value);\n                    setIsOpen(true);\n                },\n                onFocus: ()=>setIsOpen(true)\n            }, void 0, false, {\n                fileName: \"/home/trascastefan/ai-video2/app/components/StockSelector.tsx\",\n                lineNumber: 149,\n                columnNumber: 7\n            }, this),\n            rateLimited && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"text-xs text-orange-500 mt-1\",\n                children: \"API rate limited - showing recently used stocks only\"\n            }, void 0, false, {\n                fileName: \"/home/trascastefan/ai-video2/app/components/StockSelector.tsx\",\n                lineNumber: 162,\n                columnNumber: 9\n            }, this),\n            isOpen && (search || rateLimited || isLoading) && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"absolute w-full mt-1 bg-white border border-gray-300 rounded-lg shadow-lg max-h-60 overflow-y-auto z-50\",\n                children: isLoading ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"p-4 text-center text-gray-500\",\n                    children: \"Loading...\"\n                }, void 0, false, {\n                    fileName: \"/home/trascastefan/ai-video2/app/components/StockSelector.tsx\",\n                    lineNumber: 170,\n                    columnNumber: 13\n                }, this) : suggestions.length > 0 ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"ul\", {\n                    children: suggestions.map((stock)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"li\", {\n                            className: \"px-4 py-2 hover:bg-gray-100 cursor-pointer\",\n                            onClick: ()=>{\n                                onSelect(stock.symbol);\n                                setSearch(\"\".concat(stock.name, \" (\").concat(stock.symbol, \")\"));\n                                setIsOpen(false);\n                            },\n                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"flex justify-between items-center\",\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        children: [\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                className: \"font-medium\",\n                                                children: stock.name\n                                            }, void 0, false, {\n                                                fileName: \"/home/trascastefan/ai-video2/app/components/StockSelector.tsx\",\n                                                lineNumber: 187,\n                                                columnNumber: 23\n                                            }, this),\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                className: \"text-gray-500 ml-2\",\n                                                children: [\n                                                    \"(\",\n                                                    stock.symbol,\n                                                    \")\"\n                                                ]\n                                            }, void 0, true, {\n                                                fileName: \"/home/trascastefan/ai-video2/app/components/StockSelector.tsx\",\n                                                lineNumber: 188,\n                                                columnNumber: 23\n                                            }, this)\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"/home/trascastefan/ai-video2/app/components/StockSelector.tsx\",\n                                        lineNumber: 186,\n                                        columnNumber: 21\n                                    }, this),\n                                    stock.sector !== \"Unknown\" && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                        className: \"text-sm text-gray-500\",\n                                        children: stock.sector\n                                    }, void 0, false, {\n                                        fileName: \"/home/trascastefan/ai-video2/app/components/StockSelector.tsx\",\n                                        lineNumber: 191,\n                                        columnNumber: 23\n                                    }, this)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"/home/trascastefan/ai-video2/app/components/StockSelector.tsx\",\n                                lineNumber: 185,\n                                columnNumber: 19\n                            }, this)\n                        }, stock.symbol, false, {\n                            fileName: \"/home/trascastefan/ai-video2/app/components/StockSelector.tsx\",\n                            lineNumber: 176,\n                            columnNumber: 17\n                        }, this))\n                }, void 0, false, {\n                    fileName: \"/home/trascastefan/ai-video2/app/components/StockSelector.tsx\",\n                    lineNumber: 174,\n                    columnNumber: 13\n                }, this) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"p-4 text-center text-gray-500\",\n                    children: rateLimited ? \"No recent stocks found\" : \"No results found\"\n                }, void 0, false, {\n                    fileName: \"/home/trascastefan/ai-video2/app/components/StockSelector.tsx\",\n                    lineNumber: 198,\n                    columnNumber: 13\n                }, this)\n            }, void 0, false, {\n                fileName: \"/home/trascastefan/ai-video2/app/components/StockSelector.tsx\",\n                lineNumber: 168,\n                columnNumber: 9\n            }, this),\n            !search && recentStocks.length > 0 && !isOpen && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"mt-2\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"text-xs text-gray-500 mb-1\",\n                        children: \"Recently viewed:\"\n                    }, void 0, false, {\n                        fileName: \"/home/trascastefan/ai-video2/app/components/StockSelector.tsx\",\n                        lineNumber: 209,\n                        columnNumber: 11\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"flex flex-wrap gap-1\",\n                        children: recentStocks.map((symbol)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                onClick: ()=>onSelect(symbol),\n                                className: \"px-2 py-1 text-xs bg-gray-100 hover:bg-gray-200 rounded-md transition\",\n                                children: symbol\n                            }, symbol, false, {\n                                fileName: \"/home/trascastefan/ai-video2/app/components/StockSelector.tsx\",\n                                lineNumber: 212,\n                                columnNumber: 15\n                            }, this))\n                    }, void 0, false, {\n                        fileName: \"/home/trascastefan/ai-video2/app/components/StockSelector.tsx\",\n                        lineNumber: 210,\n                        columnNumber: 11\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"/home/trascastefan/ai-video2/app/components/StockSelector.tsx\",\n                lineNumber: 208,\n                columnNumber: 9\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"/home/trascastefan/ai-video2/app/components/StockSelector.tsx\",\n        lineNumber: 148,\n        columnNumber: 5\n    }, this);\n}\n_s(StockSelector, \"dcPlGKfOSVlv2nkNQ+3CZirmgVM=\", false, function() {\n    return [\n        use_debounce__WEBPACK_IMPORTED_MODULE_4__.useDebounce\n    ];\n});\n_c = StockSelector;\nvar _c;\n$RefreshReg$(_c, \"StockSelector\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/components/StockSelector.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./app/components/TimeframeSelector.tsx":
/*!**********************************************!*\
  !*** ./app/components/TimeframeSelector.tsx ***!
  \**********************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ TimeframeSelector; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n\n\nconst timeframes = [\n    {\n        label: \"1 Week\",\n        value: \"1w\"\n    },\n    {\n        label: \"1 Month\",\n        value: \"1m\"\n    },\n    {\n        label: \"3 Months\",\n        value: \"3m\"\n    },\n    {\n        label: \"1 Year\",\n        value: \"1y\"\n    },\n    {\n        label: \"5 Years\",\n        value: \"5y\"\n    }\n];\nfunction TimeframeSelector(param) {\n    let { value, onChange } = param;\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"flex gap-2\",\n        children: timeframes.map((timeframe)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                className: \"px-4 py-2 rounded-lg transition-colors \".concat(value === timeframe.value ? \"bg-blue-600 text-white\" : \"bg-gray-100 text-gray-700 hover:bg-gray-200\"),\n                onClick: ()=>onChange(timeframe.value),\n                children: timeframe.label\n            }, timeframe.value, false, {\n                fileName: \"/home/trascastefan/ai-video2/app/components/TimeframeSelector.tsx\",\n                lineNumber: 22,\n                columnNumber: 9\n            }, this))\n    }, void 0, false, {\n        fileName: \"/home/trascastefan/ai-video2/app/components/TimeframeSelector.tsx\",\n        lineNumber: 20,\n        columnNumber: 5\n    }, this);\n}\n_c = TimeframeSelector;\nvar _c;\n$RefreshReg$(_c, \"TimeframeSelector\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2FwcC9jb21wb25lbnRzL1RpbWVmcmFtZVNlbGVjdG9yLnRzeCIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUEwQjtBQVMxQixNQUFNQyxhQUFvRDtJQUN4RDtRQUFFQyxPQUFPO1FBQVVDLE9BQU87SUFBSztJQUMvQjtRQUFFRCxPQUFPO1FBQVdDLE9BQU87SUFBSztJQUNoQztRQUFFRCxPQUFPO1FBQVlDLE9BQU87SUFBSztJQUNqQztRQUFFRCxPQUFPO1FBQVVDLE9BQU87SUFBSztJQUMvQjtRQUFFRCxPQUFPO1FBQVdDLE9BQU87SUFBSztDQUNqQztBQUVjLFNBQVNDLGtCQUFrQixLQUEyQztRQUEzQyxFQUFFRCxLQUFLLEVBQUVFLFFBQVEsRUFBMEIsR0FBM0M7SUFDeEMscUJBQ0UsOERBQUNDO1FBQUlDLFdBQVU7a0JBQ1pOLFdBQVdPLEdBQUcsQ0FBQyxDQUFDQywwQkFDZiw4REFBQ0M7Z0JBRUNILFdBQVcsMENBSVYsT0FIQ0osVUFBVU0sVUFBVU4sS0FBSyxHQUNyQiwyQkFDQTtnQkFFTlEsU0FBUyxJQUFNTixTQUFTSSxVQUFVTixLQUFLOzBCQUV0Q00sVUFBVVAsS0FBSztlQVJYTyxVQUFVTixLQUFLOzs7Ozs7Ozs7O0FBYTlCO0tBbEJ3QkMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vYXBwL2NvbXBvbmVudHMvVGltZWZyYW1lU2VsZWN0b3IudHN4P2YxOGUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcblxuZXhwb3J0IHR5cGUgVGltZWZyYW1lID0gJzF3JyB8ICcxbScgfCAnM20nIHwgJzF5JyB8ICc1eSc7XG5cbmludGVyZmFjZSBUaW1lZnJhbWVTZWxlY3RvclByb3BzIHtcbiAgdmFsdWU6IFRpbWVmcmFtZTtcbiAgb25DaGFuZ2U6ICh0aW1lZnJhbWU6IFRpbWVmcmFtZSkgPT4gdm9pZDtcbn1cblxuY29uc3QgdGltZWZyYW1lczogeyBsYWJlbDogc3RyaW5nOyB2YWx1ZTogVGltZWZyYW1lIH1bXSA9IFtcbiAgeyBsYWJlbDogJzEgV2VlaycsIHZhbHVlOiAnMXcnIH0sXG4gIHsgbGFiZWw6ICcxIE1vbnRoJywgdmFsdWU6ICcxbScgfSxcbiAgeyBsYWJlbDogJzMgTW9udGhzJywgdmFsdWU6ICczbScgfSxcbiAgeyBsYWJlbDogJzEgWWVhcicsIHZhbHVlOiAnMXknIH0sXG4gIHsgbGFiZWw6ICc1IFllYXJzJywgdmFsdWU6ICc1eScgfSxcbl07XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIFRpbWVmcmFtZVNlbGVjdG9yKHsgdmFsdWUsIG9uQ2hhbmdlIH06IFRpbWVmcmFtZVNlbGVjdG9yUHJvcHMpIHtcbiAgcmV0dXJuIChcbiAgICA8ZGl2IGNsYXNzTmFtZT1cImZsZXggZ2FwLTJcIj5cbiAgICAgIHt0aW1lZnJhbWVzLm1hcCgodGltZWZyYW1lKSA9PiAoXG4gICAgICAgIDxidXR0b25cbiAgICAgICAgICBrZXk9e3RpbWVmcmFtZS52YWx1ZX1cbiAgICAgICAgICBjbGFzc05hbWU9e2BweC00IHB5LTIgcm91bmRlZC1sZyB0cmFuc2l0aW9uLWNvbG9ycyAke1xuICAgICAgICAgICAgdmFsdWUgPT09IHRpbWVmcmFtZS52YWx1ZVxuICAgICAgICAgICAgICA/ICdiZy1ibHVlLTYwMCB0ZXh0LXdoaXRlJ1xuICAgICAgICAgICAgICA6ICdiZy1ncmF5LTEwMCB0ZXh0LWdyYXktNzAwIGhvdmVyOmJnLWdyYXktMjAwJ1xuICAgICAgICAgIH1gfVxuICAgICAgICAgIG9uQ2xpY2s9eygpID0+IG9uQ2hhbmdlKHRpbWVmcmFtZS52YWx1ZSl9XG4gICAgICAgID5cbiAgICAgICAgICB7dGltZWZyYW1lLmxhYmVsfVxuICAgICAgICA8L2J1dHRvbj5cbiAgICAgICkpfVxuICAgIDwvZGl2PlxuICApO1xufSAiXSwibmFtZXMiOlsiUmVhY3QiLCJ0aW1lZnJhbWVzIiwibGFiZWwiLCJ2YWx1ZSIsIlRpbWVmcmFtZVNlbGVjdG9yIiwib25DaGFuZ2UiLCJkaXYiLCJjbGFzc05hbWUiLCJtYXAiLCJ0aW1lZnJhbWUiLCJidXR0b24iLCJvbkNsaWNrIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/components/TimeframeSelector.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./app/components/VolumeAnalysis.tsx":
/*!*******************************************!*\
  !*** ./app/components/VolumeAnalysis.tsx ***!
  \*******************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ VolumeAnalysis; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _ChartWithControls__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ChartWithControls */ \"(app-pages-browser)/./app/components/ChartWithControls.tsx\");\n\n\n\nfunction formatDate(dateStr) {\n    return new Date(dateStr).toLocaleDateString(\"en-US\", {\n        weekday: \"short\",\n        year: \"numeric\",\n        month: \"short\",\n        day: \"numeric\"\n    });\n}\nfunction formatNumber(num) {\n    if (num >= 1e9) return (num / 1e9).toFixed(2) + \"B\";\n    if (num >= 1e6) return (num / 1e6).toFixed(2) + \"M\";\n    if (num >= 1e3) return (num / 1e3).toFixed(2) + \"K\";\n    return num.toString();\n}\nfunction VolumeAnalysis(param) {\n    let { symbol, timeSeriesData, significantMoves, isLoading, onGenerateScript, isGenerating, generatedScript } = param;\n    if (isLoading) {\n        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            className: \"animate-pulse space-y-4\",\n            children: [\n                ...Array(5)\n            ].map((_, i)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"bg-gray-200 h-24 rounded-lg\"\n                }, i, false, {\n                    fileName: \"/home/trascastefan/ai-video2/app/components/VolumeAnalysis.tsx\",\n                    lineNumber: 76,\n                    columnNumber: 11\n                }, this))\n        }, void 0, false, {\n            fileName: \"/home/trascastefan/ai-video2/app/components/VolumeAnalysis.tsx\",\n            lineNumber: 74,\n            columnNumber: 7\n        }, this);\n    }\n    if (!(timeSeriesData === null || timeSeriesData === void 0 ? void 0 : timeSeriesData.length)) {\n        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            className: \"text-gray-500 text-center py-8\",\n            children: \"No volume analysis available\"\n        }, void 0, false, {\n            fileName: \"/home/trascastefan/ai-video2/app/components/VolumeAnalysis.tsx\",\n            lineNumber: 84,\n            columnNumber: 7\n        }, this);\n    }\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"space-y-6\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"flex justify-between items-center\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h2\", {\n                        className: \"text-xl font-semibold\",\n                        children: \"Volume Analysis\"\n                    }, void 0, false, {\n                        fileName: \"/home/trascastefan/ai-video2/app/components/VolumeAnalysis.tsx\",\n                        lineNumber: 93,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                        onClick: onGenerateScript,\n                        disabled: isGenerating || !symbol,\n                        className: \"px-4 py-2 rounded-lg transition-colors \".concat(isGenerating || !symbol ? \"bg-gray-300 cursor-not-allowed\" : \"bg-blue-600 hover:bg-blue-700 text-white\"),\n                        children: isGenerating ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                            className: \"flex items-center\",\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                                    className: \"animate-spin -ml-1 mr-2 h-4 w-4 text-white\",\n                                    xmlns: \"http://www.w3.org/2000/svg\",\n                                    fill: \"none\",\n                                    viewBox: \"0 0 24 24\",\n                                    children: [\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"circle\", {\n                                            className: \"opacity-25\",\n                                            cx: \"12\",\n                                            cy: \"12\",\n                                            r: \"10\",\n                                            stroke: \"currentColor\",\n                                            strokeWidth: \"4\"\n                                        }, void 0, false, {\n                                            fileName: \"/home/trascastefan/ai-video2/app/components/VolumeAnalysis.tsx\",\n                                            lineNumber: 106,\n                                            columnNumber: 17\n                                        }, this),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                                            className: \"opacity-75\",\n                                            fill: \"currentColor\",\n                                            d: \"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n                                        }, void 0, false, {\n                                            fileName: \"/home/trascastefan/ai-video2/app/components/VolumeAnalysis.tsx\",\n                                            lineNumber: 107,\n                                            columnNumber: 17\n                                        }, this)\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"/home/trascastefan/ai-video2/app/components/VolumeAnalysis.tsx\",\n                                    lineNumber: 105,\n                                    columnNumber: 15\n                                }, this),\n                                \"Generating...\"\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/home/trascastefan/ai-video2/app/components/VolumeAnalysis.tsx\",\n                            lineNumber: 104,\n                            columnNumber: 13\n                        }, this) : \"Generate Script\"\n                    }, void 0, false, {\n                        fileName: \"/home/trascastefan/ai-video2/app/components/VolumeAnalysis.tsx\",\n                        lineNumber: 94,\n                        columnNumber: 9\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"/home/trascastefan/ai-video2/app/components/VolumeAnalysis.tsx\",\n                lineNumber: 92,\n                columnNumber: 7\n            }, this),\n            timeSeriesData.length > 0 && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"space-y-4\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_ChartWithControls__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n                    timeSeriesData: timeSeriesData,\n                    significantMoves: significantMoves\n                }, void 0, false, {\n                    fileName: \"/home/trascastefan/ai-video2/app/components/VolumeAnalysis.tsx\",\n                    lineNumber: 119,\n                    columnNumber: 11\n                }, this)\n            }, void 0, false, {\n                fileName: \"/home/trascastefan/ai-video2/app/components/VolumeAnalysis.tsx\",\n                lineNumber: 118,\n                columnNumber: 9\n            }, this),\n            generatedScript && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"bg-gray-50 rounded-lg p-6 space-y-4\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h3\", {\n                        className: \"text-lg font-medium\",\n                        children: \"Generated Script\"\n                    }, void 0, false, {\n                        fileName: \"/home/trascastefan/ai-video2/app/components/VolumeAnalysis.tsx\",\n                        lineNumber: 128,\n                        columnNumber: 11\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"prose max-w-none\",\n                        children: generatedScript.split(\"\\n\").map((line, index)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                className: \"my-2\",\n                                children: line\n                            }, index, false, {\n                                fileName: \"/home/trascastefan/ai-video2/app/components/VolumeAnalysis.tsx\",\n                                lineNumber: 131,\n                                columnNumber: 15\n                            }, this))\n                    }, void 0, false, {\n                        fileName: \"/home/trascastefan/ai-video2/app/components/VolumeAnalysis.tsx\",\n                        lineNumber: 129,\n                        columnNumber: 11\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"/home/trascastefan/ai-video2/app/components/VolumeAnalysis.tsx\",\n                lineNumber: 127,\n                columnNumber: 9\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"overflow-x-auto\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"table\", {\n                    className: \"min-w-full divide-y divide-gray-200\",\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"thead\", {\n                            className: \"bg-gray-50\",\n                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"tr\", {\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"th\", {\n                                        className: \"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n                                        children: \"Date\"\n                                    }, void 0, false, {\n                                        fileName: \"/home/trascastefan/ai-video2/app/components/VolumeAnalysis.tsx\",\n                                        lineNumber: 141,\n                                        columnNumber: 15\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"th\", {\n                                        className: \"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n                                        children: \"Volume\"\n                                    }, void 0, false, {\n                                        fileName: \"/home/trascastefan/ai-video2/app/components/VolumeAnalysis.tsx\",\n                                        lineNumber: 142,\n                                        columnNumber: 15\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"th\", {\n                                        className: \"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n                                        children: \"Price Range\"\n                                    }, void 0, false, {\n                                        fileName: \"/home/trascastefan/ai-video2/app/components/VolumeAnalysis.tsx\",\n                                        lineNumber: 143,\n                                        columnNumber: 15\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"th\", {\n                                        className: \"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n                                        children: \"Close\"\n                                    }, void 0, false, {\n                                        fileName: \"/home/trascastefan/ai-video2/app/components/VolumeAnalysis.tsx\",\n                                        lineNumber: 144,\n                                        columnNumber: 15\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"th\", {\n                                        className: \"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n                                        children: \"Change %\"\n                                    }, void 0, false, {\n                                        fileName: \"/home/trascastefan/ai-video2/app/components/VolumeAnalysis.tsx\",\n                                        lineNumber: 145,\n                                        columnNumber: 15\n                                    }, this)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"/home/trascastefan/ai-video2/app/components/VolumeAnalysis.tsx\",\n                                lineNumber: 140,\n                                columnNumber: 13\n                            }, this)\n                        }, void 0, false, {\n                            fileName: \"/home/trascastefan/ai-video2/app/components/VolumeAnalysis.tsx\",\n                            lineNumber: 139,\n                            columnNumber: 11\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"tbody\", {\n                            className: \"bg-white divide-y divide-gray-200\",\n                            children: significantMoves.map((move)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((react__WEBPACK_IMPORTED_MODULE_1___default().Fragment), {\n                                    children: [\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"tr\", {\n                                            className: \"hover:bg-gray-50\",\n                                            children: [\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"td\", {\n                                                    className: \"px-4 py-4 whitespace-nowrap text-sm font-medium text-gray-900\",\n                                                    children: formatDate(move.date)\n                                                }, void 0, false, {\n                                                    fileName: \"/home/trascastefan/ai-video2/app/components/VolumeAnalysis.tsx\",\n                                                    lineNumber: 152,\n                                                    columnNumber: 19\n                                                }, this),\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"td\", {\n                                                    className: \"px-4 py-4 whitespace-nowrap text-sm text-gray-500\",\n                                                    children: typeof move.volume === \"number\" ? formatNumber(move.volume) : \"N/A\"\n                                                }, void 0, false, {\n                                                    fileName: \"/home/trascastefan/ai-video2/app/components/VolumeAnalysis.tsx\",\n                                                    lineNumber: 155,\n                                                    columnNumber: 19\n                                                }, this),\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"td\", {\n                                                    className: \"px-4 py-4 whitespace-nowrap text-sm text-gray-500\",\n                                                    children: [\n                                                        \"$\",\n                                                        typeof move.low === \"number\" ? move.low.toFixed(2) : \"0.00\",\n                                                        \" - $\",\n                                                        typeof move.high === \"number\" ? move.high.toFixed(2) : \"0.00\"\n                                                    ]\n                                                }, void 0, true, {\n                                                    fileName: \"/home/trascastefan/ai-video2/app/components/VolumeAnalysis.tsx\",\n                                                    lineNumber: 158,\n                                                    columnNumber: 19\n                                                }, this),\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"td\", {\n                                                    className: \"px-4 py-4 whitespace-nowrap text-sm text-gray-500\",\n                                                    children: [\n                                                        \"$\",\n                                                        typeof move.price === \"number\" ? move.price.toFixed(2) : \"0.00\"\n                                                    ]\n                                                }, void 0, true, {\n                                                    fileName: \"/home/trascastefan/ai-video2/app/components/VolumeAnalysis.tsx\",\n                                                    lineNumber: 161,\n                                                    columnNumber: 19\n                                                }, this),\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"td\", {\n                                                    className: \"px-4 py-4 whitespace-nowrap text-sm \".concat((move.percentageChange || 0) >= 0 ? \"text-green-600\" : \"text-red-600\"),\n                                                    children: [\n                                                        (move.percentageChange || 0) >= 0 ? \"+\" : \"\",\n                                                        typeof move.percentageChange === \"number\" ? move.percentageChange.toFixed(2) : \"0.00\",\n                                                        \"%\"\n                                                    ]\n                                                }, void 0, true, {\n                                                    fileName: \"/home/trascastefan/ai-video2/app/components/VolumeAnalysis.tsx\",\n                                                    lineNumber: 164,\n                                                    columnNumber: 19\n                                                }, this)\n                                            ]\n                                        }, void 0, true, {\n                                            fileName: \"/home/trascastefan/ai-video2/app/components/VolumeAnalysis.tsx\",\n                                            lineNumber: 151,\n                                            columnNumber: 17\n                                        }, this),\n                                        move.news && move.news.length > 0 && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"tr\", {\n                                            className: \"bg-gray-50\",\n                                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"td\", {\n                                                colSpan: 5,\n                                                className: \"px-4 py-4\",\n                                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                    className: \"space-y-4\",\n                                                    children: move.news && move.news.map((item, index)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                            className: \"text-sm\",\n                                                            children: [\n                                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                                    className: \"flex items-center gap-2 text-gray-500 text-xs mb-1\",\n                                                                    children: [\n                                                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                                            children: formatDate(item.date)\n                                                                        }, void 0, false, {\n                                                                            fileName: \"/home/trascastefan/ai-video2/app/components/VolumeAnalysis.tsx\",\n                                                                            lineNumber: 177,\n                                                                            columnNumber: 31\n                                                                        }, this),\n                                                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                                            children: \"•\"\n                                                                        }, void 0, false, {\n                                                                            fileName: \"/home/trascastefan/ai-video2/app/components/VolumeAnalysis.tsx\",\n                                                                            lineNumber: 178,\n                                                                            columnNumber: 31\n                                                                        }, this),\n                                                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                                            children: item.source\n                                                                        }, void 0, false, {\n                                                                            fileName: \"/home/trascastefan/ai-video2/app/components/VolumeAnalysis.tsx\",\n                                                                            lineNumber: 179,\n                                                                            columnNumber: 31\n                                                                        }, this)\n                                                                    ]\n                                                                }, void 0, true, {\n                                                                    fileName: \"/home/trascastefan/ai-video2/app/components/VolumeAnalysis.tsx\",\n                                                                    lineNumber: 176,\n                                                                    columnNumber: 29\n                                                                }, this),\n                                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"a\", {\n                                                                    href: item.url,\n                                                                    target: \"_blank\",\n                                                                    rel: \"noopener noreferrer\",\n                                                                    className: \"text-blue-600 hover:underline font-medium block mb-1\",\n                                                                    children: item.title\n                                                                }, void 0, false, {\n                                                                    fileName: \"/home/trascastefan/ai-video2/app/components/VolumeAnalysis.tsx\",\n                                                                    lineNumber: 181,\n                                                                    columnNumber: 29\n                                                                }, this),\n                                                                item.summary && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                                                    className: \"text-gray-600 text-sm line-clamp-2\",\n                                                                    children: item.summary\n                                                                }, void 0, false, {\n                                                                    fileName: \"/home/trascastefan/ai-video2/app/components/VolumeAnalysis.tsx\",\n                                                                    lineNumber: 190,\n                                                                    columnNumber: 31\n                                                                }, this)\n                                                            ]\n                                                        }, index, true, {\n                                                            fileName: \"/home/trascastefan/ai-video2/app/components/VolumeAnalysis.tsx\",\n                                                            lineNumber: 175,\n                                                            columnNumber: 27\n                                                        }, this))\n                                                }, void 0, false, {\n                                                    fileName: \"/home/trascastefan/ai-video2/app/components/VolumeAnalysis.tsx\",\n                                                    lineNumber: 173,\n                                                    columnNumber: 23\n                                                }, this)\n                                            }, void 0, false, {\n                                                fileName: \"/home/trascastefan/ai-video2/app/components/VolumeAnalysis.tsx\",\n                                                lineNumber: 172,\n                                                columnNumber: 21\n                                            }, this)\n                                        }, void 0, false, {\n                                            fileName: \"/home/trascastefan/ai-video2/app/components/VolumeAnalysis.tsx\",\n                                            lineNumber: 171,\n                                            columnNumber: 19\n                                        }, this)\n                                    ]\n                                }, move.date, true, {\n                                    fileName: \"/home/trascastefan/ai-video2/app/components/VolumeAnalysis.tsx\",\n                                    lineNumber: 150,\n                                    columnNumber: 15\n                                }, this))\n                        }, void 0, false, {\n                            fileName: \"/home/trascastefan/ai-video2/app/components/VolumeAnalysis.tsx\",\n                            lineNumber: 148,\n                            columnNumber: 11\n                        }, this)\n                    ]\n                }, void 0, true, {\n                    fileName: \"/home/trascastefan/ai-video2/app/components/VolumeAnalysis.tsx\",\n                    lineNumber: 138,\n                    columnNumber: 9\n                }, this)\n            }, void 0, false, {\n                fileName: \"/home/trascastefan/ai-video2/app/components/VolumeAnalysis.tsx\",\n                lineNumber: 137,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"/home/trascastefan/ai-video2/app/components/VolumeAnalysis.tsx\",\n        lineNumber: 91,\n        columnNumber: 5\n    }, this);\n}\n_c = VolumeAnalysis;\nvar _c;\n$RefreshReg$(_c, \"VolumeAnalysis\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/components/VolumeAnalysis.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./app/page.tsx":
/*!**********************!*\
  !*** ./app/page.tsx ***!
  \**********************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ Home; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _components_StockSelector__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./components/StockSelector */ \"(app-pages-browser)/./app/components/StockSelector.tsx\");\n/* harmony import */ var _components_TimeframeSelector__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./components/TimeframeSelector */ \"(app-pages-browser)/./app/components/TimeframeSelector.tsx\");\n/* harmony import */ var _components_CompanyInfo__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./components/CompanyInfo */ \"(app-pages-browser)/./app/components/CompanyInfo.tsx\");\n/* harmony import */ var _components_VolumeAnalysis__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./components/VolumeAnalysis */ \"(app-pages-browser)/./app/components/VolumeAnalysis.tsx\");\n/* harmony import */ var _components_ChartWithControls__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./components/ChartWithControls */ \"(app-pages-browser)/./app/components/ChartWithControls.tsx\");\n/* harmony import */ var _utils_cache__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./utils/cache */ \"(app-pages-browser)/./app/utils/cache.ts\");\n/* harmony import */ var _utils_db__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./utils/db */ \"(app-pages-browser)/./app/utils/db.ts\");\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\n\n\n\n\n\n\n // Import the IndexedDB database\nfunction Home() {\n    _s();\n    const [selectedSymbol, setSelectedSymbol] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    const [timeframe, setTimeframe] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"1m\");\n    const [companyData, setCompanyData] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(undefined);\n    const [timeSeriesData, setTimeSeriesData] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [significantMoves, setSignificantMoves] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [isLoading, setIsLoading] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [isVolumeLoading, setIsVolumeLoading] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [isGenerating, setIsGenerating] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [generatedScript, setGeneratedScript] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    const [rateLimited, setRateLimited] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(_utils_cache__WEBPACK_IMPORTED_MODULE_7__.isRateLimited);\n    const [recentStocks, setRecentStocks] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [isRefreshing, setIsRefreshing] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    // Cache for storing data for different symbols and timeframes\n    const dataCache = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)({});\n    const defaultTimeframeRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(\"3m\"); // Default fetch is 3 months\n    // Effect to check rate limit status\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        setRateLimited(_utils_cache__WEBPACK_IMPORTED_MODULE_7__.isRateLimited);\n    }, []);\n    // Effect to load recent stocks from IndexedDB\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        const loadRecentStocks = async ()=>{\n            try {\n                const recent = await _utils_db__WEBPACK_IMPORTED_MODULE_8__.stockDB.getRecentStocks(10);\n                setRecentStocks(recent);\n            } catch (error) {\n                console.error(\"Error loading recent stocks:\", error);\n            }\n        };\n        loadRecentStocks();\n    }, []);\n    // Handle symbol selection - fetch company data and 3-month data\n    const handleSymbolSelect = (symbol)=>{\n        setSelectedSymbol(symbol);\n        setTimeframe(\"1m\"); // Reset to default timeframe when symbol changes\n        // Store the company in companyDataCache if we select it\n        if (symbol) {\n            // If we don't have a name, use the symbol as name temporarily\n            _utils_cache__WEBPACK_IMPORTED_MODULE_7__.companyDataCache.set(symbol, {\n                symbol,\n                name: symbol\n            });\n        }\n    };\n    // Fetch company information\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        const fetchCompanyData = async ()=>{\n            if (!selectedSymbol) return;\n            setIsLoading(true);\n            // First try to get data from IndexedDB\n            try {\n                const dbCompanyProfile = await _utils_db__WEBPACK_IMPORTED_MODULE_8__.stockDB.getCompanyProfile(selectedSymbol);\n                if (dbCompanyProfile) {\n                    console.log(\"Using IndexedDB data for \".concat(selectedSymbol, \" company profile\"));\n                    setCompanyData(dbCompanyProfile);\n                    setIsLoading(false);\n                    return;\n                }\n            } catch (dbError) {\n                console.error(\"Error accessing IndexedDB:\", dbError);\n            }\n            // If not in IndexedDB, fetch from API\n            try {\n                const response = await fetch(\"/api/company?symbol=\".concat(selectedSymbol));\n                const data = await response.json();\n                setCompanyData(data);\n                // Store in our persistent cache\n                _utils_cache__WEBPACK_IMPORTED_MODULE_7__.companyDataCache.set(selectedSymbol, {\n                    name: data.name,\n                    companyInfo: data\n                });\n                // Store in IndexedDB\n                try {\n                    await _utils_db__WEBPACK_IMPORTED_MODULE_8__.stockDB.saveCompanyProfile({\n                        symbol: selectedSymbol,\n                        name: data.name,\n                        description: data.description,\n                        marketCap: data.marketCap,\n                        volume: data.volume,\n                        sector: data.sector,\n                        industry: data.industry,\n                        lastUpdated: Date.now()\n                    });\n                } catch (dbError) {\n                    console.error(\"Error saving company profile to IndexedDB:\", dbError);\n                }\n            } catch (error) {\n                console.error(\"Error fetching company data:\", error);\n                setCompanyData(undefined);\n                // Try to use cached data if available\n                const cachedData = _utils_cache__WEBPACK_IMPORTED_MODULE_7__.companyDataCache.get(selectedSymbol);\n                if (cachedData === null || cachedData === void 0 ? void 0 : cachedData.companyInfo) {\n                    setCompanyData(cachedData.companyInfo);\n                }\n            } finally{\n                setIsLoading(false);\n            }\n        };\n        fetchCompanyData();\n    }, [\n        selectedSymbol\n    ]);\n    // Fetch volume data based on symbol and timeframe selection\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        const fetchVolumeData = async ()=>{\n            if (!selectedSymbol) return;\n            setIsVolumeLoading(true);\n            // First check IndexedDB for data\n            try {\n                const dbStockData = await _utils_db__WEBPACK_IMPORTED_MODULE_8__.stockDB.getStockData(selectedSymbol);\n                if (dbStockData) {\n                    // We have data in IndexedDB, filter based on timeframe\n                    const filteredData = getFilteredDataForTimeframe(dbStockData.timeSeriesData, dbStockData.significantMoves, timeframe);\n                    // Update our in-memory cache\n                    if (!dataCache.current[selectedSymbol]) {\n                        dataCache.current[selectedSymbol] = {};\n                    }\n                    dataCache.current[selectedSymbol][timeframe] = {\n                        timeSeriesData: filteredData.timeSeriesData,\n                        significantMoves: filteredData.significantMoves,\n                        timestamp: dbStockData.lastUpdated\n                    };\n                    // Check if data is fresh enough (less than 24 hours old)\n                    const dataAge = Date.now() - dbStockData.lastUpdated;\n                    if (dataAge < 86400000) {\n                        console.log(\"Using IndexedDB data for \".concat(selectedSymbol));\n                        setTimeSeriesData(filteredData.timeSeriesData);\n                        setSignificantMoves(filteredData.significantMoves);\n                        setIsVolumeLoading(false);\n                        return;\n                    }\n                }\n            } catch (dbError) {\n                console.error(\"Error accessing IndexedDB for stock data:\", dbError);\n            }\n            try {\n                // Check if we need to fetch new data\n                const needsFetch = shouldFetchNewData(selectedSymbol, timeframe);\n                if (needsFetch) {\n                    console.log(\"Fetching new data for \".concat(selectedSymbol, \" with timeframe \").concat(timeframe));\n                    const response = await fetch(\"/api/volume-analysis?symbol=\".concat(selectedSymbol, \"&timeframe=\").concat(timeframe));\n                    const data = await response.json();\n                    // Store in local cache\n                    if (!dataCache.current[selectedSymbol]) {\n                        dataCache.current[selectedSymbol] = {};\n                    }\n                    dataCache.current[selectedSymbol][timeframe] = {\n                        timeSeriesData: data.timeSeriesData,\n                        significantMoves: data.significantMoves,\n                        timestamp: Date.now()\n                    };\n                    // Store in persistent cache for rate-limited scenarios\n                    _utils_cache__WEBPACK_IMPORTED_MODULE_7__.companyDataCache.set(selectedSymbol, {\n                        timeSeriesData: data.timeSeriesData,\n                        significantMoves: data.significantMoves\n                    });\n                    // Store in IndexedDB\n                    try {\n                        await _utils_db__WEBPACK_IMPORTED_MODULE_8__.stockDB.saveStockData({\n                            symbol: selectedSymbol,\n                            timeSeriesData: data.timeSeriesData,\n                            significantMoves: data.significantMoves,\n                            lastUpdated: Date.now()\n                        });\n                    } catch (dbError) {\n                        console.error(\"Error saving stock data to IndexedDB:\", dbError);\n                    }\n                    // If this is 3m data, it can be used for 1w and 1m as well\n                    if (timeframe === \"3m\") {\n                        // Store filtered versions for 1w and 1m\n                        cacheFilteredData(selectedSymbol, data.timeSeriesData, data.significantMoves);\n                    }\n                    setTimeSeriesData(data.timeSeriesData);\n                    setSignificantMoves(data.significantMoves);\n                } else {\n                    // Use cached data\n                    console.log(\"Using cached data for \".concat(selectedSymbol, \" with timeframe \").concat(timeframe));\n                    const cachedData = dataCache.current[selectedSymbol][timeframe];\n                    setTimeSeriesData(cachedData.timeSeriesData);\n                    setSignificantMoves(cachedData.significantMoves);\n                }\n            } catch (error) {\n                var _cachedData_timeSeriesData;\n                console.error(\"Error fetching volume data:\", error);\n                // Try to use cached data if available\n                const cachedData = _utils_cache__WEBPACK_IMPORTED_MODULE_7__.companyDataCache.get(selectedSymbol);\n                if (cachedData === null || cachedData === void 0 ? void 0 : (_cachedData_timeSeriesData = cachedData.timeSeriesData) === null || _cachedData_timeSeriesData === void 0 ? void 0 : _cachedData_timeSeriesData.length) {\n                    // Ensure significant moves have all required properties\n                    const safeSignificantMoves = (cachedData.significantMoves || []).map((move)=>({\n                            date: move.date || \"\",\n                            volume: typeof move.volume === \"number\" ? move.volume : 0,\n                            price: typeof move.price === \"number\" ? move.price : 0,\n                            priceChange: typeof move.priceChange === \"number\" ? move.priceChange : 0,\n                            percentageChange: typeof move.percentageChange === \"number\" ? move.percentageChange : 0,\n                            previousClose: typeof move.previousClose === \"number\" ? move.previousClose : 0,\n                            high: typeof move.high === \"number\" ? move.high : 0,\n                            low: typeof move.low === \"number\" ? move.low : 0,\n                            news: Array.isArray(move.news) ? move.news : []\n                        }));\n                    setTimeSeriesData(cachedData.timeSeriesData);\n                    setSignificantMoves(safeSignificantMoves);\n                } else {\n                    setTimeSeriesData([]);\n                    setSignificantMoves([]);\n                }\n            } finally{\n                setIsVolumeLoading(false);\n            }\n        };\n        fetchVolumeData();\n    }, [\n        selectedSymbol,\n        timeframe\n    ]);\n    // Initial 3-month data fetch when symbol changes\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        const fetchInitialData = async ()=>{\n            var _dataCache_current_selectedSymbol;\n            if (!selectedSymbol) return;\n            // Don't fetch if we already have this data cached\n            if ((_dataCache_current_selectedSymbol = dataCache.current[selectedSymbol]) === null || _dataCache_current_selectedSymbol === void 0 ? void 0 : _dataCache_current_selectedSymbol[defaultTimeframeRef.current]) {\n                return;\n            }\n            // Check IndexedDB first\n            try {\n                const dbStockData = await _utils_db__WEBPACK_IMPORTED_MODULE_8__.stockDB.getStockData(selectedSymbol);\n                if (dbStockData && dbStockData.timeSeriesData.length > 0) {\n                    // Update our in-memory cache with the data\n                    if (!dataCache.current[selectedSymbol]) {\n                        dataCache.current[selectedSymbol] = {};\n                    }\n                    dataCache.current[selectedSymbol][defaultTimeframeRef.current] = {\n                        timeSeriesData: dbStockData.timeSeriesData,\n                        significantMoves: dbStockData.significantMoves,\n                        timestamp: dbStockData.lastUpdated\n                    };\n                    // Create filtered versions for other timeframes\n                    cacheFilteredData(selectedSymbol, dbStockData.timeSeriesData, dbStockData.significantMoves);\n                    // If current timeframe is 3m or shorter, update displayed data\n                    if ([\n                        \"1w\",\n                        \"1m\",\n                        \"3m\"\n                    ].includes(timeframe)) {\n                        // Filter the data based on current timeframe\n                        const filteredData = getFilteredDataForTimeframe(dbStockData.timeSeriesData, dbStockData.significantMoves, timeframe);\n                        setTimeSeriesData(filteredData.timeSeriesData);\n                        setSignificantMoves(filteredData.significantMoves);\n                    }\n                    // If data is less than 24 hours old, don't fetch new data\n                    const dataAge = Date.now() - dbStockData.lastUpdated;\n                    if (dataAge < 86400000) {\n                        return;\n                    }\n                }\n            } catch (dbError) {\n                console.error(\"Error accessing IndexedDB in initial data fetch:\", dbError);\n            }\n            setIsVolumeLoading(true);\n            try {\n                console.log(\"Fetching initial 3-month data for \".concat(selectedSymbol));\n                const response = await fetch(\"/api/volume-analysis?symbol=\".concat(selectedSymbol, \"&timeframe=\").concat(defaultTimeframeRef.current));\n                const data = await response.json();\n                // Store in cache\n                if (!dataCache.current[selectedSymbol]) {\n                    dataCache.current[selectedSymbol] = {};\n                }\n                dataCache.current[selectedSymbol][defaultTimeframeRef.current] = {\n                    timeSeriesData: data.timeSeriesData,\n                    significantMoves: data.significantMoves,\n                    timestamp: Date.now()\n                };\n                // Store in IndexedDB\n                try {\n                    await _utils_db__WEBPACK_IMPORTED_MODULE_8__.stockDB.saveStockData({\n                        symbol: selectedSymbol,\n                        timeSeriesData: data.timeSeriesData,\n                        significantMoves: data.significantMoves,\n                        lastUpdated: Date.now()\n                    });\n                } catch (dbError) {\n                    console.error(\"Error saving initial stock data to IndexedDB:\", dbError);\n                }\n                // Create filtered versions for 1w and 1m\n                cacheFilteredData(selectedSymbol, data.timeSeriesData, data.significantMoves);\n                // If current timeframe is 3m or shorter, update displayed data\n                if ([\n                    \"1w\",\n                    \"1m\",\n                    \"3m\"\n                ].includes(timeframe)) {\n                    // Filter the data based on current timeframe\n                    const filteredData = getFilteredDataForTimeframe(data.timeSeriesData, data.significantMoves, timeframe);\n                    setTimeSeriesData(filteredData.timeSeriesData);\n                    setSignificantMoves(filteredData.significantMoves);\n                }\n            } catch (error) {\n                console.error(\"Error fetching initial volume data:\", error);\n            } finally{\n                setIsVolumeLoading(false);\n            }\n        };\n        fetchInitialData();\n    }, [\n        selectedSymbol\n    ]);\n    // Helper function to filter 3m data for shorter timeframes and cache it\n    const cacheFilteredData = (symbol, allData, allMoves)=>{\n        // Filter for 1-week data\n        const oneWeekData = getFilteredDataForTimeframe(allData, allMoves, \"1w\");\n        dataCache.current[symbol][\"1w\"] = {\n            timeSeriesData: oneWeekData.timeSeriesData,\n            significantMoves: oneWeekData.significantMoves,\n            timestamp: Date.now()\n        };\n        // Filter for 1-month data\n        const oneMonthData = getFilteredDataForTimeframe(allData, allMoves, \"1m\");\n        dataCache.current[symbol][\"1m\"] = {\n            timeSeriesData: oneMonthData.timeSeriesData,\n            significantMoves: oneMonthData.significantMoves,\n            timestamp: Date.now()\n        };\n    };\n    // Helper function to filter data based on timeframe\n    const getFilteredDataForTimeframe = (allData, allMoves, tf)=>{\n        let daysToInclude;\n        // Determine how many days to include based on timeframe\n        switch(tf){\n            case \"1w\":\n                daysToInclude = 7;\n                break;\n            case \"1m\":\n                daysToInclude = 30;\n                break;\n            default:\n                return {\n                    timeSeriesData: allData,\n                    significantMoves: allMoves\n                };\n        }\n        // Get the cutoff date\n        const cutoffDate = new Date();\n        cutoffDate.setDate(cutoffDate.getDate() - daysToInclude);\n        const cutoffStr = cutoffDate.toISOString().split(\"T\")[0];\n        // Filter timeseries data\n        const filteredTimeSeries = allData.filter((item)=>new Date(item.date) >= new Date(cutoffStr));\n        // Filter significant moves\n        const filteredMoves = allMoves.filter((item)=>new Date(item.date) >= new Date(cutoffStr));\n        return {\n            timeSeriesData: filteredTimeSeries,\n            significantMoves: filteredMoves\n        };\n    };\n    // Check if we need to fetch new data or can use cached data\n    const shouldFetchNewData = (symbol, tf)=>{\n        var _dataCache_current_symbol;\n        // We always need to fetch 1y and 5y data when selected\n        if (tf === \"1y\" || tf === \"5y\") {\n            var _dataCache_current_symbol1;\n            // Check if we have cached data for this timeframe\n            if ((_dataCache_current_symbol1 = dataCache.current[symbol]) === null || _dataCache_current_symbol1 === void 0 ? void 0 : _dataCache_current_symbol1[tf]) {\n                // Check if the cache is older than 24 hours (86400000 ms)\n                const cacheAge = Date.now() - dataCache.current[symbol][tf].timestamp;\n                return cacheAge > 86400000; // Refresh data if older than 24 hours\n            }\n            return true; // No cache, need to fetch\n        }\n        // For shorter timeframes, check if we have 3m data\n        if (!((_dataCache_current_symbol = dataCache.current[symbol]) === null || _dataCache_current_symbol === void 0 ? void 0 : _dataCache_current_symbol[defaultTimeframeRef.current])) {\n            return true; // No 3-month data, need to fetch\n        }\n        // For 1w, 1m, 3m, we can use filtered data from 3m\n        return false; // No need to fetch, use cached data\n    };\n    // Cleanup old data periodically\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        const cleanupInterval = setInterval(()=>{\n            try {\n                _utils_db__WEBPACK_IMPORTED_MODULE_8__.stockDB.cleanupOldData(30); // Remove data older than 30 days\n            } catch (error) {\n                console.error(\"Error cleaning up old data:\", error);\n            }\n        }, 24 * 60 * 60 * 1000); // Run once per day\n        return ()=>clearInterval(cleanupInterval);\n    }, []);\n    const handleGenerateScript = async ()=>{\n        if (!selectedSymbol || isGenerating) return;\n        setIsGenerating(true);\n        setGeneratedScript(\"\");\n        try {\n            const response = await fetch(\"http://localhost:5044/generate\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                    symbol: selectedSymbol,\n                    timeframe\n                })\n            });\n            const data = await response.json();\n            setGeneratedScript(data.script);\n        } catch (error) {\n            console.error(\"Error generating script:\", error);\n        } finally{\n            setIsGenerating(false);\n        }\n    };\n    // Function to clear cache and fetch fresh data\n    const handleClearCacheAndRefresh = async ()=>{\n        if (!selectedSymbol) return;\n        setIsRefreshing(true);\n        let refreshSuccess = false;\n        let errorMessage = \"\";\n        try {\n            // Clear from memory cache\n            if (dataCache.current[selectedSymbol]) {\n                dataCache.current[selectedSymbol] = {};\n            }\n            // Clear from company data cache\n            _utils_cache__WEBPACK_IMPORTED_MODULE_7__.companyDataCache.set(selectedSymbol, {\n                symbol: selectedSymbol,\n                name: selectedSymbol\n            });\n            // Reset rate limited status\n            setRateLimited(false);\n            // Force refetch company data with retry mechanism\n            try {\n                console.log(\"Refreshing company data for \".concat(selectedSymbol));\n                // Use query parameters that force real data\n                const url = \"/api/company?symbol=\".concat(selectedSymbol, \"&force=true&mock=false\");\n                const response = await fetch(url);\n                if (!response.ok) {\n                    throw new Error(\"Server error: \".concat(response.status));\n                }\n                const data = await response.json();\n                // Check if we actually got real data and not an error\n                if (data.error) {\n                    throw new Error(data.error);\n                }\n                // If we get a very generic company data object, it might be mock data\n                // Most real API responses have longer descriptions and more detailed info\n                if (data.description && data.description.length < 50) {\n                    console.warn(\"Suspiciously short company description, might be mock data\");\n                }\n                setCompanyData(data);\n                console.log(\"Successfully refreshed company data\");\n            } catch (error) {\n                console.error(\"Error refreshing company data:\", error);\n                errorMessage = \"Failed to refresh company data: \".concat((error === null || error === void 0 ? void 0 : error.message) || \"Unknown error\");\n            }\n            // Force refetch volume data\n            setIsVolumeLoading(true);\n            try {\n                console.log(\"Refreshing volume data for \".concat(selectedSymbol));\n                // Use query parameters that force real data\n                const url = \"/api/volume-analysis?symbol=\".concat(selectedSymbol, \"&timeframe=\").concat(timeframe, \"&force=true&mock=false\");\n                const response = await fetch(url);\n                if (!response.ok) {\n                    throw new Error(\"Server error: \".concat(response.status));\n                }\n                const data = await response.json();\n                // Check if we actually got real data and not an error\n                if (data.error) {\n                    throw new Error(data.error);\n                }\n                if (!data.timeSeriesData || data.timeSeriesData.length === 0) {\n                    throw new Error(\"No time series data returned\");\n                }\n                // Calculate data freshness by checking the most recent data point\n                let dataIsFresh = false;\n                if (data.timeSeriesData && data.timeSeriesData.length > 0) {\n                    const mostRecent = new Date(data.timeSeriesData[0].date);\n                    const daysSinceUpdate = Math.floor((Date.now() - mostRecent.getTime()) / (1000 * 60 * 60 * 24));\n                    console.log(\"Most recent data point is from \".concat(daysSinceUpdate, \" days ago\"));\n                    dataIsFresh = daysSinceUpdate < 5; // Data should be less than 5 days old\n                }\n                if (!dataIsFresh) {\n                    console.warn(\"Data may not be fresh - might be cached or mock data\");\n                } else {\n                    console.log(\"Data appears to be fresh\");\n                    refreshSuccess = true;\n                }\n                setTimeSeriesData(data.timeSeriesData);\n                setSignificantMoves(data.significantMoves || []);\n                // Update cache with fresh data\n                if (!dataCache.current[selectedSymbol]) {\n                    dataCache.current[selectedSymbol] = {};\n                }\n                dataCache.current[selectedSymbol][timeframe] = {\n                    timeSeriesData: data.timeSeriesData,\n                    significantMoves: data.significantMoves || [],\n                    timestamp: Date.now()\n                };\n            } catch (error) {\n                console.error(\"Error refreshing volume data:\", error);\n                errorMessage = \"Failed to refresh stock data: \".concat((error === null || error === void 0 ? void 0 : error.message) || \"Unknown error\");\n            } finally{\n                setIsVolumeLoading(false);\n            }\n        } catch (error) {\n            console.error(\"Error during refresh:\", error);\n            errorMessage = \"General refresh error: \".concat((error === null || error === void 0 ? void 0 : error.message) || \"Unknown error\");\n        } finally{\n            setIsRefreshing(false);\n            // Show toast message based on success/failure\n            if (refreshSuccess) {\n                console.log(\"Data successfully refreshed from APIs\");\n                window.alert(\"Data successfully refreshed with fresh data!\");\n            } else if (errorMessage) {\n                console.error(errorMessage);\n                window.alert(\"Refresh error: \".concat(errorMessage, \"\\nPossible API rate limiting - please try again later.\"));\n            } else {\n                window.alert(\"Refresh completed, but may not have retrieved fresh data from APIs.\");\n            }\n        }\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"main\", {\n        className: \"min-h-screen p-4 md:p-8\",\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"section\", {\n            className: \"max-w-7xl mx-auto\",\n            children: [\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"mb-8\",\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h1\", {\n                            className: \"text-3xl font-bold text-gray-900 mb-2\",\n                            children: \"Stock Analysis\"\n                        }, void 0, false, {\n                            fileName: \"/home/trascastefan/ai-video2/app/page.tsx\",\n                            lineNumber: 629,\n                            columnNumber: 11\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                            className: \"text-gray-500\",\n                            children: \"Analyze stocks, track significant price movements, and generate video scripts.\"\n                        }, void 0, false, {\n                            fileName: \"/home/trascastefan/ai-video2/app/page.tsx\",\n                            lineNumber: 630,\n                            columnNumber: 11\n                        }, this)\n                    ]\n                }, void 0, true, {\n                    fileName: \"/home/trascastefan/ai-video2/app/page.tsx\",\n                    lineNumber: 628,\n                    columnNumber: 9\n                }, this),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"bg-white p-6 rounded-xl shadow-sm\",\n                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"space-y-8\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"flex flex-col md:flex-row gap-4\",\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        className: \"flex-grow\",\n                                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_StockSelector__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n                                            onSelect: handleSymbolSelect\n                                        }, void 0, false, {\n                                            fileName: \"/home/trascastefan/ai-video2/app/page.tsx\",\n                                            lineNumber: 639,\n                                            columnNumber: 17\n                                        }, this)\n                                    }, void 0, false, {\n                                        fileName: \"/home/trascastefan/ai-video2/app/page.tsx\",\n                                        lineNumber: 638,\n                                        columnNumber: 15\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        className: \"flex gap-2\",\n                                        children: [\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_TimeframeSelector__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n                                                value: timeframe,\n                                                onChange: setTimeframe\n                                            }, void 0, false, {\n                                                fileName: \"/home/trascastefan/ai-video2/app/page.tsx\",\n                                                lineNumber: 642,\n                                                columnNumber: 17\n                                            }, this),\n                                            selectedSymbol && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                                onClick: handleClearCacheAndRefresh,\n                                                disabled: isRefreshing,\n                                                className: \"ml-2 flex items-center gap-1 px-4 py-2 rounded-lg transition-colors \".concat(isRefreshing ? \"bg-gray-300 text-gray-500 cursor-not-allowed\" : \"bg-blue-600 text-white hover:bg-blue-700\"),\n                                                title: \"Clear cache and fetch real-time price data\",\n                                                children: [\n                                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                        className: \"text-lg mr-1 \".concat(isRefreshing ? \"animate-spin inline-block\" : \"\"),\n                                                        children: \"↻\"\n                                                    }, void 0, false, {\n                                                        fileName: \"/home/trascastefan/ai-video2/app/page.tsx\",\n                                                        lineNumber: 654,\n                                                        columnNumber: 21\n                                                    }, this),\n                                                    isRefreshing ? \"Refreshing...\" : \"Refresh Data\"\n                                                ]\n                                            }, void 0, true, {\n                                                fileName: \"/home/trascastefan/ai-video2/app/page.tsx\",\n                                                lineNumber: 644,\n                                                columnNumber: 19\n                                            }, this)\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"/home/trascastefan/ai-video2/app/page.tsx\",\n                                        lineNumber: 641,\n                                        columnNumber: 15\n                                    }, this)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"/home/trascastefan/ai-video2/app/page.tsx\",\n                                lineNumber: 637,\n                                columnNumber: 13\n                            }, this),\n                            recentStocks.length > 0 && !selectedSymbol && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"mt-4\",\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h3\", {\n                                        className: \"text-sm font-medium text-gray-500 mb-2\",\n                                        children: \"Recent Stocks\"\n                                    }, void 0, false, {\n                                        fileName: \"/home/trascastefan/ai-video2/app/page.tsx\",\n                                        lineNumber: 663,\n                                        columnNumber: 17\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        className: \"flex flex-wrap gap-2\",\n                                        children: recentStocks.map((symbol)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                                onClick: ()=>handleSymbolSelect(symbol),\n                                                className: \"px-3 py-1 text-sm bg-gray-100 hover:bg-gray-200 rounded-full transition\",\n                                                children: symbol\n                                            }, symbol, false, {\n                                                fileName: \"/home/trascastefan/ai-video2/app/page.tsx\",\n                                                lineNumber: 666,\n                                                columnNumber: 21\n                                            }, this))\n                                    }, void 0, false, {\n                                        fileName: \"/home/trascastefan/ai-video2/app/page.tsx\",\n                                        lineNumber: 664,\n                                        columnNumber: 17\n                                    }, this)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"/home/trascastefan/ai-video2/app/page.tsx\",\n                                lineNumber: 662,\n                                columnNumber: 15\n                            }, this),\n                            companyData && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_CompanyInfo__WEBPACK_IMPORTED_MODULE_4__[\"default\"], {\n                                symbol: selectedSymbol,\n                                companyData: companyData,\n                                isLoading: isLoading\n                            }, void 0, false, {\n                                fileName: \"/home/trascastefan/ai-video2/app/page.tsx\",\n                                lineNumber: 679,\n                                columnNumber: 15\n                            }, this),\n                            timeSeriesData.length > 0 ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"space-y-6\",\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        className: \"flex justify-between items-center\",\n                                        children: [\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h2\", {\n                                                className: \"text-xl font-semibold\",\n                                                children: \"Volume Analysis\"\n                                            }, void 0, false, {\n                                                fileName: \"/home/trascastefan/ai-video2/app/page.tsx\",\n                                                lineNumber: 690,\n                                                columnNumber: 19\n                                            }, this),\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                                onClick: handleGenerateScript,\n                                                disabled: isGenerating || !selectedSymbol,\n                                                className: \"px-4 py-2 rounded-lg transition-colors \".concat(isGenerating || !selectedSymbol ? \"bg-gray-300 cursor-not-allowed\" : \"bg-blue-600 hover:bg-blue-700 text-white\"),\n                                                children: isGenerating ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                    className: \"flex items-center\",\n                                                    children: [\n                                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                                                            className: \"animate-spin -ml-1 mr-2 h-4 w-4 text-white\",\n                                                            xmlns: \"http://www.w3.org/2000/svg\",\n                                                            fill: \"none\",\n                                                            viewBox: \"0 0 24 24\",\n                                                            children: [\n                                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"circle\", {\n                                                                    className: \"opacity-25\",\n                                                                    cx: \"12\",\n                                                                    cy: \"12\",\n                                                                    r: \"10\",\n                                                                    stroke: \"currentColor\",\n                                                                    strokeWidth: \"4\"\n                                                                }, void 0, false, {\n                                                                    fileName: \"/home/trascastefan/ai-video2/app/page.tsx\",\n                                                                    lineNumber: 703,\n                                                                    columnNumber: 27\n                                                                }, this),\n                                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                                                                    className: \"opacity-75\",\n                                                                    fill: \"currentColor\",\n                                                                    d: \"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n                                                                }, void 0, false, {\n                                                                    fileName: \"/home/trascastefan/ai-video2/app/page.tsx\",\n                                                                    lineNumber: 704,\n                                                                    columnNumber: 27\n                                                                }, this)\n                                                            ]\n                                                        }, void 0, true, {\n                                                            fileName: \"/home/trascastefan/ai-video2/app/page.tsx\",\n                                                            lineNumber: 702,\n                                                            columnNumber: 25\n                                                        }, this),\n                                                        \"Generating...\"\n                                                    ]\n                                                }, void 0, true, {\n                                                    fileName: \"/home/trascastefan/ai-video2/app/page.tsx\",\n                                                    lineNumber: 701,\n                                                    columnNumber: 23\n                                                }, this) : \"Generate Script\"\n                                            }, void 0, false, {\n                                                fileName: \"/home/trascastefan/ai-video2/app/page.tsx\",\n                                                lineNumber: 691,\n                                                columnNumber: 19\n                                            }, this)\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"/home/trascastefan/ai-video2/app/page.tsx\",\n                                        lineNumber: 689,\n                                        columnNumber: 17\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ChartWithControls__WEBPACK_IMPORTED_MODULE_6__[\"default\"], {\n                                        timeSeriesData: timeSeriesData,\n                                        significantMoves: significantMoves\n                                    }, void 0, false, {\n                                        fileName: \"/home/trascastefan/ai-video2/app/page.tsx\",\n                                        lineNumber: 714,\n                                        columnNumber: 17\n                                    }, this)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"/home/trascastefan/ai-video2/app/page.tsx\",\n                                lineNumber: 688,\n                                columnNumber: 15\n                            }, this) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_VolumeAnalysis__WEBPACK_IMPORTED_MODULE_5__[\"default\"], {\n                                timeSeriesData: timeSeriesData,\n                                significantMoves: significantMoves,\n                                isLoading: isVolumeLoading,\n                                onGenerateScript: handleGenerateScript,\n                                isGenerating: isGenerating,\n                                generatedScript: generatedScript,\n                                symbol: selectedSymbol\n                            }, void 0, false, {\n                                fileName: \"/home/trascastefan/ai-video2/app/page.tsx\",\n                                lineNumber: 720,\n                                columnNumber: 15\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/home/trascastefan/ai-video2/app/page.tsx\",\n                        lineNumber: 636,\n                        columnNumber: 11\n                    }, this)\n                }, void 0, false, {\n                    fileName: \"/home/trascastefan/ai-video2/app/page.tsx\",\n                    lineNumber: 635,\n                    columnNumber: 9\n                }, this)\n            ]\n        }, void 0, true, {\n            fileName: \"/home/trascastefan/ai-video2/app/page.tsx\",\n            lineNumber: 627,\n            columnNumber: 7\n        }, this)\n    }, void 0, false, {\n        fileName: \"/home/trascastefan/ai-video2/app/page.tsx\",\n        lineNumber: 626,\n        columnNumber: 5\n    }, this);\n}\n_s(Home, \"DPjQpIvymE4sNB+tcgW6eLbB/Kc=\");\n_c = Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/page.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./app/utils/cache.ts":
/*!****************************!*\
  !*** ./app/utils/cache.ts ***!
  \****************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   checkRateLimit: function() { return /* binding */ checkRateLimit; },\n/* harmony export */   companyDataCache: function() { return /* binding */ companyDataCache; },\n/* harmony export */   isRateLimited: function() { return /* binding */ isRateLimited; },\n/* harmony export */   rateLimitedUntil: function() { return /* binding */ rateLimitedUntil; },\n/* harmony export */   setRateLimited: function() { return /* binding */ setRateLimited; }\n/* harmony export */ });\n// Cache utility for storing company data with improved expiration and storage strategies\n// Enhanced LRU cache for company data with expiration times and priority levels\nclass CompanyDataCache {\n    // Get company data from cache\n    get(symbol) {\n        // First check memory cache\n        let data = this.cache.get(symbol);\n        // If not in memory cache but storage is available, try to load from localStorage\n        if (!data && this.storageAvailable) {\n            data = this.loadItemFromStorage(symbol);\n            if (data) {\n                this.cache.set(symbol, data);\n            }\n        }\n        if (data) {\n            // Check if data is expired\n            if (data.expiresAt && data.expiresAt < Date.now()) {\n                console.log(\"Cache expired for \".concat(symbol));\n                // Keep but mark as stale by moving to end of access order\n                this.accessOrder = this.accessOrder.filter((s)=>s !== symbol);\n                this.accessOrder.push(symbol);\n                return undefined;\n            }\n            // Update access order (move to front)\n            this.accessOrder = this.accessOrder.filter((s)=>s !== symbol);\n            this.accessOrder.unshift(symbol);\n        }\n        return data;\n    }\n    // Store company data in cache\n    set(symbol, data) {\n        let options = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};\n        // Get existing data or create new entry\n        const existingData = this.cache.get(symbol) || {\n            symbol,\n            name: \"\",\n            timeSeriesData: [],\n            significantMoves: [],\n            companyInfo: null,\n            lastUpdated: Date.now(),\n            expiresAt: Date.now() + 24 * 60 * 60 * 1000 // Default 24 hours\n        };\n        // Calculate expiration based on data type and provided options\n        let expirationTime = options.expirationTime;\n        if (!expirationTime) {\n            // Default expiration times based on data type\n            if (data.companyInfo) {\n                // Company profiles change rarely - cache for 7 days\n                expirationTime = 7 * 24 * 60 * 60 * 1000;\n            } else if (data.timeSeriesData && data.timeSeriesData.length > 0) {\n                // Price data - cache for 1 hour during market hours, longer after market close\n                const now = new Date();\n                const isMarketHours = now.getUTCHours() >= 13 && now.getUTCHours() < 20 && // 9AM-4PM ET\n                now.getUTCDay() > 0 && now.getUTCDay() < 6; // Mon-Fri\n                expirationTime = isMarketHours ? 60 * 60 * 1000 : 12 * 60 * 60 * 1000;\n            } else {\n                // Other data - default 24 hours\n                expirationTime = 24 * 60 * 60 * 1000;\n            }\n        }\n        // Merge new data with existing\n        const updatedData = {\n            ...existingData,\n            ...data,\n            lastUpdated: Date.now(),\n            expiresAt: Date.now() + expirationTime\n        };\n        // Store updated data\n        this.cache.set(symbol, updatedData);\n        // Update access order\n        this.accessOrder = this.accessOrder.filter((s)=>s !== symbol);\n        this.accessOrder.unshift(symbol);\n        // Save to localStorage if available\n        if (this.storageAvailable) {\n            this.saveItemToStorage(symbol, updatedData);\n        }\n        // Remove oldest entry if cache exceeds max size\n        if (this.accessOrder.length > this.maxSize) {\n            const oldest = this.accessOrder.pop();\n            if (oldest) {\n                this.cache.delete(oldest);\n                if (this.storageAvailable) {\n                    this.removeItemFromStorage(oldest);\n                }\n            }\n        }\n    }\n    // Clean up expired items\n    cleanupExpired() {\n        const now = Date.now();\n        Array.from(this.cache.entries()).forEach((param)=>{\n            let [symbol, data] = param;\n            if (data.expiresAt && data.expiresAt < now) {\n                console.log(\"Auto cleaning expired cache for \".concat(symbol));\n            // We don't immediately remove expired items; they'll be removed when they're\n            // at the end of the access order and the cache reaches max size\n            }\n        });\n    }\n    // Save cache to localStorage\n    saveToStorage() {\n        try {\n            // Only store the most recently used items to avoid storage limits\n            const topItems = this.accessOrder.slice(0, 10);\n            const storageData = topItems.map((symbol)=>{\n                const data = this.cache.get(symbol);\n                return [\n                    symbol,\n                    data\n                ];\n            });\n            localStorage.setItem(\"companyDataCache\", JSON.stringify(storageData));\n        } catch (error) {\n            console.error(\"Failed to save cache to localStorage:\", error);\n        }\n    }\n    // Save single item to storage\n    saveItemToStorage(symbol, data) {\n        try {\n            localStorage.setItem(\"companyCache_\".concat(symbol), JSON.stringify(data));\n        } catch (error) {\n            console.error(\"Failed to save \".concat(symbol, \" cache to localStorage:\"), error);\n        }\n    }\n    // Remove item from storage\n    removeItemFromStorage(symbol) {\n        try {\n            localStorage.removeItem(\"companyCache_\".concat(symbol));\n        } catch (error) {\n            console.error(\"Failed to remove \".concat(symbol, \" from localStorage:\"), error);\n        }\n    }\n    // Load cache from localStorage\n    loadFromStorage() {\n        try {\n            // Load individual stocks (more reliable than bulk loading)\n            const keys = Object.keys(localStorage);\n            const cacheKeys = keys.filter((key)=>key.startsWith(\"companyCache_\"));\n            for (const key of cacheKeys){\n                const symbol = key.replace(\"companyCache_\", \"\");\n                this.loadItemFromStorage(symbol);\n            }\n        } catch (error) {\n            console.error(\"Failed to load cache from localStorage:\", error);\n        }\n    }\n    // Load individual item from storage\n    loadItemFromStorage(symbol) {\n        try {\n            const dataStr = localStorage.getItem(\"companyCache_\".concat(symbol));\n            if (dataStr) {\n                const data = JSON.parse(dataStr);\n                this.cache.set(symbol, data);\n                // Update access order without triggering cleanup\n                this.accessOrder = this.accessOrder.filter((s)=>s !== symbol);\n                this.accessOrder.push(symbol);\n                return data;\n            }\n        } catch (error) {\n            console.error(\"Failed to load \".concat(symbol, \" from localStorage:\"), error);\n        }\n        return undefined;\n    }\n    // Get all cached company data sorted by last access\n    getAll() {\n        return this.accessOrder.map((symbol)=>this.cache.get(symbol)).filter(Boolean);\n    }\n    // Get all valid (non-expired) cached company data \n    getAllValid() {\n        const now = Date.now();\n        return this.accessOrder.map((symbol)=>this.cache.get(symbol)).filter((data)=>data && (!data.expiresAt || data.expiresAt > now));\n    }\n    // Check if company exists in cache and is not expired\n    has(symbol) {\n        const data = this.cache.get(symbol);\n        if (!data) return false;\n        if (data.expiresAt && data.expiresAt < Date.now()) return false;\n        return true;\n    }\n    // Check if company exists in cache (even if expired)\n    hasExpired(symbol) {\n        const data = this.cache.get(symbol);\n        return !!data && data.expiresAt < Date.now();\n    }\n    // Get count of cached companies\n    get size() {\n        return this.cache.size;\n    }\n    // Check how much time is left before expiration\n    getTimeToExpiration(symbol) {\n        const data = this.cache.get(symbol);\n        if (!data || !data.expiresAt) return 0;\n        return Math.max(0, data.expiresAt - Date.now());\n    }\n    constructor(maxSize = 20){\n        this.cache = new Map();\n        this.maxSize = maxSize;\n        this.accessOrder = [];\n        this.storageAvailable =  true && typeof localStorage !== \"undefined\";\n        // Load cache from localStorage if available\n        if (this.storageAvailable) {\n            this.loadFromStorage();\n            // Set up periodic cleanup of expired items\n            setInterval(()=>this.cleanupExpired(), 60000); // Check every minute\n        }\n    }\n}\n// Create singleton instance with larger capacity\nconst companyDataCache = new CompanyDataCache(20);\n// Function to detect if APIs are rate limited\nlet isRateLimited = false;\nlet rateLimitedUntil = 0;\nfunction setRateLimited(limited) {\n    let durationMs = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 60 * 60 * 1000;\n    isRateLimited = limited;\n    if (limited) {\n        rateLimitedUntil = Date.now() + durationMs;\n    } else {\n        rateLimitedUntil = 0;\n    }\n    // Store rate limit status to session storage to persist across page refreshes\n    if (true) {\n        window.sessionStorage.setItem(\"isRateLimited\", String(limited));\n        window.sessionStorage.setItem(\"rateLimitedUntil\", String(rateLimitedUntil));\n    }\n}\nfunction checkRateLimit() {\n    if (rateLimitedUntil > 0 && Date.now() > rateLimitedUntil) {\n        // Rate limit period has expired\n        setRateLimited(false);\n    }\n    return isRateLimited;\n}\n// Initialize rate limit status from session storage\nif (true) {\n    const storedStatus = window.sessionStorage.getItem(\"isRateLimited\");\n    const storedUntil = window.sessionStorage.getItem(\"rateLimitedUntil\");\n    if (storedStatus) {\n        isRateLimited = storedStatus === \"true\";\n    }\n    if (storedUntil) {\n        rateLimitedUntil = parseInt(storedUntil, 10);\n        // Check if rate limit has expired\n        if (rateLimitedUntil > 0 && Date.now() > rateLimitedUntil) {\n            setRateLimited(false);\n        }\n    }\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/utils/cache.ts\n"));

/***/ }),

/***/ "(app-pages-browser)/./app/utils/db.ts":
/*!*************************!*\
  !*** ./app/utils/db.ts ***!
  \*************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   stockDB: function() { return /* binding */ stockDB; }\n/* harmony export */ });\n/**\n * Local database implementation using IndexedDB for persistent stock data storage\n */ class StockDatabase {\n    /**\n   * Initialize the database\n   */ async initDB() {\n        if (!window.indexedDB) {\n            console.error(\"IndexedDB not supported by your browser\");\n            return false;\n        }\n        return new Promise((resolve, reject)=>{\n            const request = window.indexedDB.open(this.dbName, this.dbVersion);\n            request.onerror = (event)=>{\n                console.error(\"Error opening IndexedDB\", event);\n                this.isInitialized = false;\n                reject(false);\n            };\n            request.onsuccess = (event)=>{\n                this.db = event.target.result;\n                this.isInitialized = true;\n                console.log(\"IndexedDB initialized successfully\");\n                resolve(true);\n            };\n            request.onupgradeneeded = (event)=>{\n                const db = event.target.result;\n                // Create object stores\n                if (!db.objectStoreNames.contains(\"stockData\")) {\n                    const stockStore = db.createObjectStore(\"stockData\", {\n                        keyPath: \"symbol\"\n                    });\n                    stockStore.createIndex(\"lastUpdated\", \"lastUpdated\", {\n                        unique: false\n                    });\n                }\n                if (!db.objectStoreNames.contains(\"companyProfiles\")) {\n                    const profileStore = db.createObjectStore(\"companyProfiles\", {\n                        keyPath: \"symbol\"\n                    });\n                    profileStore.createIndex(\"lastUpdated\", \"lastUpdated\", {\n                        unique: false\n                    });\n                }\n                if (!db.objectStoreNames.contains(\"metaInfo\")) {\n                    db.createObjectStore(\"metaInfo\", {\n                        keyPath: \"key\"\n                    });\n                }\n            };\n        });\n    }\n    /**\n   * Ensure the database is initialized before proceeding\n   */ async ensureInitialized() {\n        if (this.isInitialized) return true;\n        if (this.initPromise) return this.initPromise;\n        return false;\n    }\n    /**\n   * Store stock data in the database\n   */ async saveStockData(data) {\n        try {\n            await this.ensureInitialized();\n            if (!this.db) return false;\n            return new Promise((resolve, reject)=>{\n                const transaction = this.db.transaction([\n                    \"stockData\"\n                ], \"readwrite\");\n                const store = transaction.objectStore(\"stockData\");\n                const request = store.put({\n                    ...data,\n                    lastUpdated: Date.now()\n                });\n                request.onsuccess = ()=>resolve(true);\n                request.onerror = (event)=>{\n                    console.error(\"Error saving stock data\", event);\n                    reject(false);\n                };\n            });\n        } catch (error) {\n            console.error(\"Failed to save stock data\", error);\n            return false;\n        }\n    }\n    /**\n   * Retrieve stock data from the database\n   */ async getStockData(symbol) {\n        try {\n            await this.ensureInitialized();\n            if (!this.db) return null;\n            return new Promise((resolve, reject)=>{\n                const transaction = this.db.transaction([\n                    \"stockData\"\n                ], \"readonly\");\n                const store = transaction.objectStore(\"stockData\");\n                const request = store.get(symbol);\n                request.onsuccess = ()=>{\n                    resolve(request.result || null);\n                };\n                request.onerror = (event)=>{\n                    console.error(\"Error getting stock data\", event);\n                    reject(null);\n                };\n            });\n        } catch (error) {\n            console.error(\"Failed to get stock data\", error);\n            return null;\n        }\n    }\n    /**\n   * Store company profile in the database\n   */ async saveCompanyProfile(profile) {\n        try {\n            await this.ensureInitialized();\n            if (!this.db) return false;\n            return new Promise((resolve, reject)=>{\n                const transaction = this.db.transaction([\n                    \"companyProfiles\"\n                ], \"readwrite\");\n                const store = transaction.objectStore(\"companyProfiles\");\n                const request = store.put({\n                    ...profile,\n                    lastUpdated: Date.now()\n                });\n                request.onsuccess = ()=>resolve(true);\n                request.onerror = (event)=>{\n                    console.error(\"Error saving company profile\", event);\n                    reject(false);\n                };\n            });\n        } catch (error) {\n            console.error(\"Failed to save company profile\", error);\n            return false;\n        }\n    }\n    /**\n   * Retrieve company profile from the database\n   */ async getCompanyProfile(symbol) {\n        try {\n            await this.ensureInitialized();\n            if (!this.db) return null;\n            return new Promise((resolve, reject)=>{\n                const transaction = this.db.transaction([\n                    \"companyProfiles\"\n                ], \"readonly\");\n                const store = transaction.objectStore(\"companyProfiles\");\n                const request = store.get(symbol);\n                request.onsuccess = ()=>{\n                    resolve(request.result || null);\n                };\n                request.onerror = (event)=>{\n                    console.error(\"Error getting company profile\", event);\n                    reject(null);\n                };\n            });\n        } catch (error) {\n            console.error(\"Failed to get company profile\", error);\n            return null;\n        }\n    }\n    /**\n   * Get all company profiles from the database\n   */ async getAllCompanyProfiles() {\n        try {\n            await this.ensureInitialized();\n            if (!this.db) return [];\n            return new Promise((resolve, reject)=>{\n                const transaction = this.db.transaction([\n                    \"companyProfiles\"\n                ], \"readonly\");\n                const store = transaction.objectStore(\"companyProfiles\");\n                const request = store.getAll();\n                request.onsuccess = ()=>{\n                    resolve(request.result || []);\n                };\n                request.onerror = (event)=>{\n                    console.error(\"Error getting all company profiles\", event);\n                    reject([]);\n                };\n            });\n        } catch (error) {\n            console.error(\"Failed to get all company profiles\", error);\n            return [];\n        }\n    }\n    /**\n   * Get recently used stocks\n   */ async getRecentStocks() {\n        let limit = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 10;\n        try {\n            await this.ensureInitialized();\n            if (!this.db) return [];\n            return new Promise((resolve, reject)=>{\n                const transaction = this.db.transaction([\n                    \"stockData\"\n                ], \"readonly\");\n                const store = transaction.objectStore(\"stockData\");\n                const index = store.index(\"lastUpdated\");\n                // Get all items in descending order by lastUpdated\n                const request = index.openCursor(null, \"prev\");\n                const symbols = [];\n                request.onsuccess = (event)=>{\n                    const cursor = event.target.result;\n                    if (cursor && symbols.length < limit) {\n                        symbols.push(cursor.value.symbol);\n                        cursor.continue();\n                    } else {\n                        resolve(symbols);\n                    }\n                };\n                request.onerror = (event)=>{\n                    console.error(\"Error getting recent stocks\", event);\n                    reject([]);\n                };\n            });\n        } catch (error) {\n            console.error(\"Failed to get recent stocks\", error);\n            return [];\n        }\n    }\n    /**\n   * Store a metadata key-value pair\n   */ async setMetadata(key, value) {\n        try {\n            await this.ensureInitialized();\n            if (!this.db) return false;\n            return new Promise((resolve, reject)=>{\n                const transaction = this.db.transaction([\n                    \"metaInfo\"\n                ], \"readwrite\");\n                const store = transaction.objectStore(\"metaInfo\");\n                const request = store.put({\n                    key,\n                    value,\n                    lastUpdated: Date.now()\n                });\n                request.onsuccess = ()=>resolve(true);\n                request.onerror = (event)=>{\n                    console.error(\"Error saving metadata\", event);\n                    reject(false);\n                };\n            });\n        } catch (error) {\n            console.error(\"Failed to save metadata\", error);\n            return false;\n        }\n    }\n    /**\n   * Retrieve a metadata value\n   */ async getMetadata(key) {\n        try {\n            await this.ensureInitialized();\n            if (!this.db) return null;\n            return new Promise((resolve, reject)=>{\n                const transaction = this.db.transaction([\n                    \"metaInfo\"\n                ], \"readonly\");\n                const store = transaction.objectStore(\"metaInfo\");\n                const request = store.get(key);\n                request.onsuccess = ()=>{\n                    resolve(request.result ? request.result.value : null);\n                };\n                request.onerror = (event)=>{\n                    console.error(\"Error getting metadata\", event);\n                    reject(null);\n                };\n            });\n        } catch (error) {\n            console.error(\"Failed to get metadata\", error);\n            return null;\n        }\n    }\n    /**\n   * Clean up old stock data to save space\n   */ async cleanupOldData() {\n        let maxAgeInDays = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 30;\n        try {\n            await this.ensureInitialized();\n            if (!this.db) return 0;\n            const cutoffDate = Date.now() - maxAgeInDays * 24 * 60 * 60 * 1000;\n            let deletedCount = 0;\n            // Clean up stock data\n            await new Promise((resolve, reject)=>{\n                const transaction = this.db.transaction([\n                    \"stockData\"\n                ], \"readwrite\");\n                const store = transaction.objectStore(\"stockData\");\n                const index = store.index(\"lastUpdated\");\n                const range = IDBKeyRange.upperBound(cutoffDate);\n                // Delete old items\n                const request = index.openCursor(range);\n                request.onsuccess = (event)=>{\n                    const cursor = event.target.result;\n                    if (cursor) {\n                        store.delete(cursor.primaryKey);\n                        deletedCount++;\n                        cursor.continue();\n                    } else {\n                        resolve();\n                    }\n                };\n                request.onerror = (event)=>{\n                    console.error(\"Error during cleanup\", event);\n                    reject();\n                };\n            });\n            console.log(\"Database cleanup complete, removed \".concat(deletedCount, \" old records\"));\n            return deletedCount;\n        } catch (error) {\n            console.error(\"Failed to clean up old data\", error);\n            return 0;\n        }\n    }\n    constructor(){\n        this.dbName = \"stockAnalysisDB\";\n        this.dbVersion = 1;\n        this.db = null;\n        this.isInitialized = false;\n        this.initPromise = null;\n        if (true) {\n            this.initPromise = this.initDB();\n        }\n    }\n}\n// Create singleton instance\nconst stockDB = new StockDatabase();\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/utils/db.ts\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/shared/lib/app-dynamic.js":
/*!**********************************************************!*\
  !*** ./node_modules/next/dist/shared/lib/app-dynamic.js ***!
  \**********************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"default\", ({\n    enumerable: true,\n    get: function() {\n        return dynamic;\n    }\n}));\nconst _interop_require_default = __webpack_require__(/*! @swc/helpers/_/_interop_require_default */ \"(app-pages-browser)/./node_modules/@swc/helpers/esm/_interop_require_default.js\");\nconst _jsxruntime = __webpack_require__(/*! react/jsx-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-runtime.js\");\nconst _react = /*#__PURE__*/ _interop_require_default._(__webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\"));\nconst _loadable = /*#__PURE__*/ _interop_require_default._(__webpack_require__(/*! ./lazy-dynamic/loadable */ \"(app-pages-browser)/./node_modules/next/dist/shared/lib/lazy-dynamic/loadable.js\"));\nfunction dynamic(dynamicOptions, options) {\n    const loadableOptions = {\n        // A loading component is not required, so we default it\n        loading: (param)=>{\n            let { error, isLoading, pastDelay } = param;\n            if (!pastDelay) return null;\n            if (true) {\n                if (isLoading) {\n                    return null;\n                }\n                if (error) {\n                    return /*#__PURE__*/ (0, _jsxruntime.jsxs)(\"p\", {\n                        children: [\n                            error.message,\n                            /*#__PURE__*/ (0, _jsxruntime.jsx)(\"br\", {}),\n                            error.stack\n                        ]\n                    });\n                }\n            }\n            return null;\n        }\n    };\n    if (typeof dynamicOptions === \"function\") {\n        loadableOptions.loader = dynamicOptions;\n    }\n    return (0, _loadable.default)({\n        ...loadableOptions,\n        ...options\n    });\n}\nif ((typeof exports.default === \"function\" || typeof exports.default === \"object\" && exports.default !== null) && typeof exports.default.__esModule === \"undefined\") {\n    Object.defineProperty(exports.default, \"__esModule\", {\n        value: true\n    });\n    Object.assign(exports.default, exports);\n    module.exports = exports.default;\n} //# sourceMappingURL=app-dynamic.js.map\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3Qvc2hhcmVkL2xpYi9hcHAtZHluYW1pYy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFDekNHLE9BQU87QUFDWCxDQUFDLEVBQUM7QUFDRkgsMkNBQTBDO0lBQ3RDSSxZQUFZO0lBQ1pDLEtBQUs7UUFDRCxPQUFPQztJQUNYO0FBQ0osQ0FBQyxFQUFDO0FBQ0YsTUFBTUMsMkJBQTJCQyxtQkFBT0EsQ0FBQyxnSUFBeUM7QUFDbEYsTUFBTUMsY0FBY0QsbUJBQU9BLENBQUMscUdBQW1CO0FBQy9DLE1BQU1FLFNBQVMsV0FBVyxHQUFHSCx5QkFBeUJJLENBQUMsQ0FBQ0gsbUJBQU9BLENBQUMsbUZBQU87QUFDdkUsTUFBTUksWUFBWSxXQUFXLEdBQUdMLHlCQUF5QkksQ0FBQyxDQUFDSCxtQkFBT0EsQ0FBQyxpSEFBeUI7QUFDNUYsU0FBU0YsUUFBUU8sY0FBYyxFQUFFQyxPQUFPO0lBQ3BDLE1BQU1DLGtCQUFrQjtRQUNwQix3REFBd0Q7UUFDeERDLFNBQVMsQ0FBQ0M7WUFDTixJQUFJLEVBQUVDLEtBQUssRUFBRUMsU0FBUyxFQUFFQyxTQUFTLEVBQUUsR0FBR0g7WUFDdEMsSUFBSSxDQUFDRyxXQUFXLE9BQU87WUFDdkIsSUFBSUMsSUFBcUMsRUFBRTtnQkFDdkMsSUFBSUYsV0FBVztvQkFDWCxPQUFPO2dCQUNYO2dCQUNBLElBQUlELE9BQU87b0JBQ1AsT0FBcUIsV0FBSCxHQUFJLElBQUdULFlBQVllLElBQUksRUFBRSxLQUFLO3dCQUM1Q0MsVUFBVTs0QkFDTlAsTUFBTVEsT0FBTzs0QkFDYixXQUFXLEdBQUksSUFBR2pCLFlBQVlrQixHQUFHLEVBQUUsTUFBTSxDQUFDOzRCQUMxQ1QsTUFBTVUsS0FBSzt5QkFDZDtvQkFDTDtnQkFDSjtZQUNKO1lBQ0EsT0FBTztRQUNYO0lBQ0o7SUFDQSxJQUFJLE9BQU9mLG1CQUFtQixZQUFZO1FBQ3RDRSxnQkFBZ0JjLE1BQU0sR0FBR2hCO0lBQzdCO0lBQ0EsT0FBTyxDQUFDLEdBQUdELFVBQVVrQixPQUFPLEVBQUU7UUFDMUIsR0FBR2YsZUFBZTtRQUNsQixHQUFHRCxPQUFPO0lBQ2Q7QUFDSjtBQUVBLElBQUksQ0FBQyxPQUFPWixRQUFRNEIsT0FBTyxLQUFLLGNBQWUsT0FBTzVCLFFBQVE0QixPQUFPLEtBQUssWUFBWTVCLFFBQVE0QixPQUFPLEtBQUssSUFBSSxLQUFNLE9BQU81QixRQUFRNEIsT0FBTyxDQUFDQyxVQUFVLEtBQUssYUFBYTtJQUNySy9CLE9BQU9DLGNBQWMsQ0FBQ0MsUUFBUTRCLE9BQU8sRUFBRSxjQUFjO1FBQUUzQixPQUFPO0lBQUs7SUFDbkVILE9BQU9nQyxNQUFNLENBQUM5QixRQUFRNEIsT0FBTyxFQUFFNUI7SUFDL0IrQixPQUFPL0IsT0FBTyxHQUFHQSxRQUFRNEIsT0FBTztBQUNsQyxFQUVBLHVDQUF1QyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L3NoYXJlZC9saWIvYXBwLWR5bmFtaWMuanM/ODg2MiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICAgIHZhbHVlOiB0cnVlXG59KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcImRlZmF1bHRcIiwge1xuICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgZ2V0OiBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIGR5bmFtaWM7XG4gICAgfVxufSk7XG5jb25zdCBfaW50ZXJvcF9yZXF1aXJlX2RlZmF1bHQgPSByZXF1aXJlKFwiQHN3Yy9oZWxwZXJzL18vX2ludGVyb3BfcmVxdWlyZV9kZWZhdWx0XCIpO1xuY29uc3QgX2pzeHJ1bnRpbWUgPSByZXF1aXJlKFwicmVhY3QvanN4LXJ1bnRpbWVcIik7XG5jb25zdCBfcmVhY3QgPSAvKiNfX1BVUkVfXyovIF9pbnRlcm9wX3JlcXVpcmVfZGVmYXVsdC5fKHJlcXVpcmUoXCJyZWFjdFwiKSk7XG5jb25zdCBfbG9hZGFibGUgPSAvKiNfX1BVUkVfXyovIF9pbnRlcm9wX3JlcXVpcmVfZGVmYXVsdC5fKHJlcXVpcmUoXCIuL2xhenktZHluYW1pYy9sb2FkYWJsZVwiKSk7XG5mdW5jdGlvbiBkeW5hbWljKGR5bmFtaWNPcHRpb25zLCBvcHRpb25zKSB7XG4gICAgY29uc3QgbG9hZGFibGVPcHRpb25zID0ge1xuICAgICAgICAvLyBBIGxvYWRpbmcgY29tcG9uZW50IGlzIG5vdCByZXF1aXJlZCwgc28gd2UgZGVmYXVsdCBpdFxuICAgICAgICBsb2FkaW5nOiAocGFyYW0pPT57XG4gICAgICAgICAgICBsZXQgeyBlcnJvciwgaXNMb2FkaW5nLCBwYXN0RGVsYXkgfSA9IHBhcmFtO1xuICAgICAgICAgICAgaWYgKCFwYXN0RGVsYXkpIHJldHVybiBudWxsO1xuICAgICAgICAgICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICAgICAgICAgICAgICAgIGlmIChpc0xvYWRpbmcpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmIChlcnJvcikge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gLyojX19QVVJFX18qLyAoMCwgX2pzeHJ1bnRpbWUuanN4cykoXCJwXCIsIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNoaWxkcmVuOiBbXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZXJyb3IubWVzc2FnZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvKiNfX1BVUkVfXyovICgwLCBfanN4cnVudGltZS5qc3gpKFwiYnJcIiwge30pLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVycm9yLnN0YWNrXG4gICAgICAgICAgICAgICAgICAgICAgICBdXG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBudWxsO1xuICAgICAgICB9XG4gICAgfTtcbiAgICBpZiAodHlwZW9mIGR5bmFtaWNPcHRpb25zID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICAgICAgbG9hZGFibGVPcHRpb25zLmxvYWRlciA9IGR5bmFtaWNPcHRpb25zO1xuICAgIH1cbiAgICByZXR1cm4gKDAsIF9sb2FkYWJsZS5kZWZhdWx0KSh7XG4gICAgICAgIC4uLmxvYWRhYmxlT3B0aW9ucyxcbiAgICAgICAgLi4ub3B0aW9uc1xuICAgIH0pO1xufVxuXG5pZiAoKHR5cGVvZiBleHBvcnRzLmRlZmF1bHQgPT09ICdmdW5jdGlvbicgfHwgKHR5cGVvZiBleHBvcnRzLmRlZmF1bHQgPT09ICdvYmplY3QnICYmIGV4cG9ydHMuZGVmYXVsdCAhPT0gbnVsbCkpICYmIHR5cGVvZiBleHBvcnRzLmRlZmF1bHQuX19lc01vZHVsZSA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMuZGVmYXVsdCwgJ19fZXNNb2R1bGUnLCB7IHZhbHVlOiB0cnVlIH0pO1xuICBPYmplY3QuYXNzaWduKGV4cG9ydHMuZGVmYXVsdCwgZXhwb3J0cyk7XG4gIG1vZHVsZS5leHBvcnRzID0gZXhwb3J0cy5kZWZhdWx0O1xufVxuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1hcHAtZHluYW1pYy5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJlbnVtZXJhYmxlIiwiZ2V0IiwiZHluYW1pYyIsIl9pbnRlcm9wX3JlcXVpcmVfZGVmYXVsdCIsInJlcXVpcmUiLCJfanN4cnVudGltZSIsIl9yZWFjdCIsIl8iLCJfbG9hZGFibGUiLCJkeW5hbWljT3B0aW9ucyIsIm9wdGlvbnMiLCJsb2FkYWJsZU9wdGlvbnMiLCJsb2FkaW5nIiwicGFyYW0iLCJlcnJvciIsImlzTG9hZGluZyIsInBhc3REZWxheSIsInByb2Nlc3MiLCJlbnYiLCJOT0RFX0VOViIsImpzeHMiLCJjaGlsZHJlbiIsIm1lc3NhZ2UiLCJqc3giLCJzdGFjayIsImxvYWRlciIsImRlZmF1bHQiLCJfX2VzTW9kdWxlIiwiYXNzaWduIiwibW9kdWxlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/shared/lib/app-dynamic.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/shared/lib/lazy-dynamic/dynamic-bailout-to-csr.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/next/dist/shared/lib/lazy-dynamic/dynamic-bailout-to-csr.js ***!
  \**********************************************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/* __next_internal_client_entry_do_not_use__  cjs */ \nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"BailoutToCSR\", ({\n    enumerable: true,\n    get: function() {\n        return BailoutToCSR;\n    }\n}));\nconst _bailouttocsr = __webpack_require__(/*! ./bailout-to-csr */ \"(app-pages-browser)/./node_modules/next/dist/shared/lib/lazy-dynamic/bailout-to-csr.js\");\nfunction BailoutToCSR(param) {\n    let { reason, children } = param;\n    if (false) {}\n    return children;\n} //# sourceMappingURL=dynamic-bailout-to-csr.js.map\n_c = BailoutToCSR;\nvar _c;\n$RefreshReg$(_c, \"BailoutToCSR\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3Qvc2hhcmVkL2xpYi9sYXp5LWR5bmFtaWMvZHluYW1pYy1iYWlsb3V0LXRvLWNzci5qcyIsIm1hcHBpbmdzIjoicURBRWE7QUFDYkEsOENBQTZDO0lBQ3pDRyxPQUFPO0FBQ1gsQ0FBQyxFQUFDO0FBQ0ZILGdEQUErQztJQUMzQ0ksWUFBWTtJQUNaQyxLQUFLO1FBQ0QsT0FBT0M7SUFDWDtBQUNKLENBQUMsRUFBQztBQUNGLE1BQU1DLGdCQUFnQkMsbUJBQU9BLENBQUMsZ0hBQWtCO0FBQ2hELFNBQVNGLGFBQWFHLEtBQUs7SUFDdkIsSUFBSSxFQUFFQyxNQUFNLEVBQUVDLFFBQVEsRUFBRSxHQUFHRjtJQUMzQixJQUFJLEtBQTZCLEVBQUUsRUFFbEM7SUFDRCxPQUFPRTtBQUNYLEVBRUEsa0RBQWtEO0tBUnpDTCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L3NoYXJlZC9saWIvbGF6eS1keW5hbWljL2R5bmFtaWMtYmFpbG91dC10by1jc3IuanM/ZjY5MSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBjbGllbnRcIjtcblxuXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgICB2YWx1ZTogdHJ1ZVxufSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJCYWlsb3V0VG9DU1JcIiwge1xuICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgZ2V0OiBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIEJhaWxvdXRUb0NTUjtcbiAgICB9XG59KTtcbmNvbnN0IF9iYWlsb3V0dG9jc3IgPSByZXF1aXJlKFwiLi9iYWlsb3V0LXRvLWNzclwiKTtcbmZ1bmN0aW9uIEJhaWxvdXRUb0NTUihwYXJhbSkge1xuICAgIGxldCB7IHJlYXNvbiwgY2hpbGRyZW4gfSA9IHBhcmFtO1xuICAgIGlmICh0eXBlb2Ygd2luZG93ID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgIHRocm93IG5ldyBfYmFpbG91dHRvY3NyLkJhaWxvdXRUb0NTUkVycm9yKHJlYXNvbik7XG4gICAgfVxuICAgIHJldHVybiBjaGlsZHJlbjtcbn1cblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZHluYW1pYy1iYWlsb3V0LXRvLWNzci5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJlbnVtZXJhYmxlIiwiZ2V0IiwiQmFpbG91dFRvQ1NSIiwiX2JhaWxvdXR0b2NzciIsInJlcXVpcmUiLCJwYXJhbSIsInJlYXNvbiIsImNoaWxkcmVuIiwiQmFpbG91dFRvQ1NSRXJyb3IiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/shared/lib/lazy-dynamic/dynamic-bailout-to-csr.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/shared/lib/lazy-dynamic/loadable.js":
/*!********************************************************************!*\
  !*** ./node_modules/next/dist/shared/lib/lazy-dynamic/loadable.js ***!
  \********************************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"default\", ({\n    enumerable: true,\n    get: function() {\n        return _default;\n    }\n}));\nconst _jsxruntime = __webpack_require__(/*! react/jsx-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-runtime.js\");\nconst _react = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\nconst _dynamicbailouttocsr = __webpack_require__(/*! ./dynamic-bailout-to-csr */ \"(app-pages-browser)/./node_modules/next/dist/shared/lib/lazy-dynamic/dynamic-bailout-to-csr.js\");\n// Normalize loader to return the module as form { default: Component } for `React.lazy`.\n// Also for backward compatible since next/dynamic allows to resolve a component directly with loader\n// Client component reference proxy need to be converted to a module.\nfunction convertModule(mod) {\n    var _mod_default;\n    return {\n        default: (_mod_default = mod == null ? void 0 : mod.default) != null ? _mod_default : mod\n    };\n}\nconst defaultOptions = {\n    loader: ()=>Promise.resolve(convertModule(()=>null)),\n    loading: null,\n    ssr: true\n};\nfunction Loadable(options) {\n    const opts = {\n        ...defaultOptions,\n        ...options\n    };\n    const Lazy = /*#__PURE__*/ (0, _react.lazy)(()=>opts.loader().then(convertModule));\n    const Loading = opts.loading;\n    function LoadableComponent(props) {\n        const fallbackElement = Loading ? /*#__PURE__*/ (0, _jsxruntime.jsx)(Loading, {\n            isLoading: true,\n            pastDelay: true,\n            error: null\n        }) : null;\n        const children = opts.ssr ? /*#__PURE__*/ (0, _jsxruntime.jsx)(Lazy, {\n            ...props\n        }) : /*#__PURE__*/ (0, _jsxruntime.jsx)(_dynamicbailouttocsr.BailoutToCSR, {\n            reason: \"next/dynamic\",\n            children: /*#__PURE__*/ (0, _jsxruntime.jsx)(Lazy, {\n                ...props\n            })\n        });\n        return /*#__PURE__*/ (0, _jsxruntime.jsx)(_react.Suspense, {\n            fallback: fallbackElement,\n            children: children\n        });\n    }\n    LoadableComponent.displayName = \"LoadableComponent\";\n    return LoadableComponent;\n}\n_c = Loadable;\nconst _default = Loadable; //# sourceMappingURL=loadable.js.map\nvar _c;\n$RefreshReg$(_c, \"Loadable\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3Qvc2hhcmVkL2xpYi9sYXp5LWR5bmFtaWMvbG9hZGFibGUuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQ3pDRyxPQUFPO0FBQ1gsQ0FBQyxFQUFDO0FBQ0ZILDJDQUEwQztJQUN0Q0ksWUFBWTtJQUNaQyxLQUFLO1FBQ0QsT0FBT0M7SUFDWDtBQUNKLENBQUMsRUFBQztBQUNGLE1BQU1DLGNBQWNDLG1CQUFPQSxDQUFDLHFHQUFtQjtBQUMvQyxNQUFNQyxTQUFTRCxtQkFBT0EsQ0FBQyxtRkFBTztBQUM5QixNQUFNRSx1QkFBdUJGLG1CQUFPQSxDQUFDLGdJQUEwQjtBQUMvRCx5RkFBeUY7QUFDekYscUdBQXFHO0FBQ3JHLHFFQUFxRTtBQUNyRSxTQUFTRyxjQUFjQyxHQUFHO0lBQ3RCLElBQUlDO0lBQ0osT0FBTztRQUNIQyxTQUFTLENBQUNELGVBQWVELE9BQU8sT0FBTyxLQUFLLElBQUlBLElBQUlFLE9BQU8sS0FBSyxPQUFPRCxlQUFlRDtJQUMxRjtBQUNKO0FBQ0EsTUFBTUcsaUJBQWlCO0lBQ25CQyxRQUFRLElBQUlDLFFBQVFDLE9BQU8sQ0FBQ1AsY0FBYyxJQUFJO0lBQzlDUSxTQUFTO0lBQ1RDLEtBQUs7QUFDVDtBQUNBLFNBQVNDLFNBQVNDLE9BQU87SUFDckIsTUFBTUMsT0FBTztRQUNULEdBQUdSLGNBQWM7UUFDakIsR0FBR08sT0FBTztJQUNkO0lBQ0EsTUFBTUUsT0FBcUIsV0FBSCxHQUFJLElBQUdmLE9BQU9nQixJQUFJLEVBQUUsSUFBSUYsS0FBS1AsTUFBTSxHQUFHVSxJQUFJLENBQUNmO0lBQ25FLE1BQU1nQixVQUFVSixLQUFLSixPQUFPO0lBQzVCLFNBQVNTLGtCQUFrQkMsS0FBSztRQUM1QixNQUFNQyxrQkFBa0JILFVBQXdCLFdBQUgsR0FBSSxJQUFHcEIsWUFBWXdCLEdBQUcsRUFBRUosU0FBUztZQUMxRUssV0FBVztZQUNYQyxXQUFXO1lBQ1hDLE9BQU87UUFDWCxLQUFLO1FBQ0wsTUFBTUMsV0FBV1osS0FBS0gsR0FBRyxHQUFpQixXQUFILEdBQUksSUFBR2IsWUFBWXdCLEdBQUcsRUFBRVAsTUFBTTtZQUNqRSxHQUFHSyxLQUFLO1FBQ1osS0FBbUIsV0FBSCxHQUFJLElBQUd0QixZQUFZd0IsR0FBRyxFQUFFckIscUJBQXFCMEIsWUFBWSxFQUFFO1lBQ3ZFQyxRQUFRO1lBQ1JGLFVBQXdCLFdBQUgsR0FBSSxJQUFHNUIsWUFBWXdCLEdBQUcsRUFBRVAsTUFBTTtnQkFDL0MsR0FBR0ssS0FBSztZQUNaO1FBQ0o7UUFDQSxPQUFxQixXQUFILEdBQUksSUFBR3RCLFlBQVl3QixHQUFHLEVBQUV0QixPQUFPNkIsUUFBUSxFQUFFO1lBQ3ZEQyxVQUFVVDtZQUNWSyxVQUFVQTtRQUNkO0lBQ0o7SUFDQVAsa0JBQWtCWSxXQUFXLEdBQUc7SUFDaEMsT0FBT1o7QUFDWDtLQTVCU1A7QUE2QlQsTUFBTWYsV0FBV2UsVUFFakIsb0NBQW9DIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3Qvc2hhcmVkL2xpYi9sYXp5LWR5bmFtaWMvbG9hZGFibGUuanM/MzA0MCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICAgIHZhbHVlOiB0cnVlXG59KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcImRlZmF1bHRcIiwge1xuICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgZ2V0OiBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIF9kZWZhdWx0O1xuICAgIH1cbn0pO1xuY29uc3QgX2pzeHJ1bnRpbWUgPSByZXF1aXJlKFwicmVhY3QvanN4LXJ1bnRpbWVcIik7XG5jb25zdCBfcmVhY3QgPSByZXF1aXJlKFwicmVhY3RcIik7XG5jb25zdCBfZHluYW1pY2JhaWxvdXR0b2NzciA9IHJlcXVpcmUoXCIuL2R5bmFtaWMtYmFpbG91dC10by1jc3JcIik7XG4vLyBOb3JtYWxpemUgbG9hZGVyIHRvIHJldHVybiB0aGUgbW9kdWxlIGFzIGZvcm0geyBkZWZhdWx0OiBDb21wb25lbnQgfSBmb3IgYFJlYWN0LmxhenlgLlxuLy8gQWxzbyBmb3IgYmFja3dhcmQgY29tcGF0aWJsZSBzaW5jZSBuZXh0L2R5bmFtaWMgYWxsb3dzIHRvIHJlc29sdmUgYSBjb21wb25lbnQgZGlyZWN0bHkgd2l0aCBsb2FkZXJcbi8vIENsaWVudCBjb21wb25lbnQgcmVmZXJlbmNlIHByb3h5IG5lZWQgdG8gYmUgY29udmVydGVkIHRvIGEgbW9kdWxlLlxuZnVuY3Rpb24gY29udmVydE1vZHVsZShtb2QpIHtcbiAgICB2YXIgX21vZF9kZWZhdWx0O1xuICAgIHJldHVybiB7XG4gICAgICAgIGRlZmF1bHQ6IChfbW9kX2RlZmF1bHQgPSBtb2QgPT0gbnVsbCA/IHZvaWQgMCA6IG1vZC5kZWZhdWx0KSAhPSBudWxsID8gX21vZF9kZWZhdWx0IDogbW9kXG4gICAgfTtcbn1cbmNvbnN0IGRlZmF1bHRPcHRpb25zID0ge1xuICAgIGxvYWRlcjogKCk9PlByb21pc2UucmVzb2x2ZShjb252ZXJ0TW9kdWxlKCgpPT5udWxsKSksXG4gICAgbG9hZGluZzogbnVsbCxcbiAgICBzc3I6IHRydWVcbn07XG5mdW5jdGlvbiBMb2FkYWJsZShvcHRpb25zKSB7XG4gICAgY29uc3Qgb3B0cyA9IHtcbiAgICAgICAgLi4uZGVmYXVsdE9wdGlvbnMsXG4gICAgICAgIC4uLm9wdGlvbnNcbiAgICB9O1xuICAgIGNvbnN0IExhenkgPSAvKiNfX1BVUkVfXyovICgwLCBfcmVhY3QubGF6eSkoKCk9Pm9wdHMubG9hZGVyKCkudGhlbihjb252ZXJ0TW9kdWxlKSk7XG4gICAgY29uc3QgTG9hZGluZyA9IG9wdHMubG9hZGluZztcbiAgICBmdW5jdGlvbiBMb2FkYWJsZUNvbXBvbmVudChwcm9wcykge1xuICAgICAgICBjb25zdCBmYWxsYmFja0VsZW1lbnQgPSBMb2FkaW5nID8gLyojX19QVVJFX18qLyAoMCwgX2pzeHJ1bnRpbWUuanN4KShMb2FkaW5nLCB7XG4gICAgICAgICAgICBpc0xvYWRpbmc6IHRydWUsXG4gICAgICAgICAgICBwYXN0RGVsYXk6IHRydWUsXG4gICAgICAgICAgICBlcnJvcjogbnVsbFxuICAgICAgICB9KSA6IG51bGw7XG4gICAgICAgIGNvbnN0IGNoaWxkcmVuID0gb3B0cy5zc3IgPyAvKiNfX1BVUkVfXyovICgwLCBfanN4cnVudGltZS5qc3gpKExhenksIHtcbiAgICAgICAgICAgIC4uLnByb3BzXG4gICAgICAgIH0pIDogLyojX19QVVJFX18qLyAoMCwgX2pzeHJ1bnRpbWUuanN4KShfZHluYW1pY2JhaWxvdXR0b2Nzci5CYWlsb3V0VG9DU1IsIHtcbiAgICAgICAgICAgIHJlYXNvbjogXCJuZXh0L2R5bmFtaWNcIixcbiAgICAgICAgICAgIGNoaWxkcmVuOiAvKiNfX1BVUkVfXyovICgwLCBfanN4cnVudGltZS5qc3gpKExhenksIHtcbiAgICAgICAgICAgICAgICAuLi5wcm9wc1xuICAgICAgICAgICAgfSlcbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybiAvKiNfX1BVUkVfXyovICgwLCBfanN4cnVudGltZS5qc3gpKF9yZWFjdC5TdXNwZW5zZSwge1xuICAgICAgICAgICAgZmFsbGJhY2s6IGZhbGxiYWNrRWxlbWVudCxcbiAgICAgICAgICAgIGNoaWxkcmVuOiBjaGlsZHJlblxuICAgICAgICB9KTtcbiAgICB9XG4gICAgTG9hZGFibGVDb21wb25lbnQuZGlzcGxheU5hbWUgPSBcIkxvYWRhYmxlQ29tcG9uZW50XCI7XG4gICAgcmV0dXJuIExvYWRhYmxlQ29tcG9uZW50O1xufVxuY29uc3QgX2RlZmF1bHQgPSBMb2FkYWJsZTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bG9hZGFibGUuanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiZW51bWVyYWJsZSIsImdldCIsIl9kZWZhdWx0IiwiX2pzeHJ1bnRpbWUiLCJyZXF1aXJlIiwiX3JlYWN0IiwiX2R5bmFtaWNiYWlsb3V0dG9jc3IiLCJjb252ZXJ0TW9kdWxlIiwibW9kIiwiX21vZF9kZWZhdWx0IiwiZGVmYXVsdCIsImRlZmF1bHRPcHRpb25zIiwibG9hZGVyIiwiUHJvbWlzZSIsInJlc29sdmUiLCJsb2FkaW5nIiwic3NyIiwiTG9hZGFibGUiLCJvcHRpb25zIiwib3B0cyIsIkxhenkiLCJsYXp5IiwidGhlbiIsIkxvYWRpbmciLCJMb2FkYWJsZUNvbXBvbmVudCIsInByb3BzIiwiZmFsbGJhY2tFbGVtZW50IiwianN4IiwiaXNMb2FkaW5nIiwicGFzdERlbGF5IiwiZXJyb3IiLCJjaGlsZHJlbiIsIkJhaWxvdXRUb0NTUiIsInJlYXNvbiIsIlN1c3BlbnNlIiwiZmFsbGJhY2siLCJkaXNwbGF5TmFtZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/shared/lib/lazy-dynamic/loadable.js\n"));

/***/ })

},
/******/ function(__webpack_require__) { // webpackRuntimeModules
/******/ var __webpack_exec__ = function(moduleId) { return __webpack_require__(__webpack_require__.s = moduleId); }
/******/ __webpack_require__.O(0, ["main-app"], function() { return __webpack_exec__("(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%2Fhome%2Ftrascastefan%2Fai-video2%2Fapp%2Fpage.tsx&server=false!"); });
/******/ var __webpack_exports__ = __webpack_require__.O();
/******/ _N_E = __webpack_exports__;
/******/ }
]);